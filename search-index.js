antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,31.598]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[1,42.775,2,21.233]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[3,39.881,4,31.649]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[5,54.443]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[6,28.821,7,25.881]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[8,27.405,9,23.755,10,24.037]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1-7",[11,31.465,12,27.405,13,29.109]],["name/1-7",[]],["text/1-7",[]],["component/1-7",[]],["title/1",[14,36.895,15,33.042]],["name/1",[15,0.585]],["text/1",[2,0.857,3,1.409,4,2.78,5,2.661,6,0.709,7,0.915,8,1.403,9,1.501,10,2.15,11,0.981,12,1.57,13,1.304,14,0.475,15,0.425,16,0.295,17,2.237,18,0.775,19,0.952,20,0.828,21,0.981,22,0.752,23,0.513,24,0.263,25,0.295,26,0.778,27,0.981,28,0.981,29,0.295,30,0.576,31,0.218,32,0.53,33,0.295,34,0.576,35,1.15,36,0.192,37,0.295,38,0.295,39,0.844,40,0.19,41,0.229,42,0.36,43,0.295,44,0.196,45,0.295,46,0.295,47,0.271,48,1.569,49,0.263,50,0.87,51,0.263,52,0.295,53,0.295,54,0.243,55,0.295,56,0.447,57,0.208,58,0.201,59,0.576,60,0.295,61,0.263,62,0.295,63,0.295,64,0.696,65,0.576,66,0.295,67,0.295,68,1.668,69,0.263,70,0.513,71,0.752,72,0.295,73,0.238,74,0.295,75,0.263,76,0.513,77,0.513,78,0.214,79,0.263,80,0.263,81,0.295,82,0.214,83,0.513,84,0.455,85,0.263,86,0.513,87,0.455,88,0.295,89,0.295,90,0.271,91,1.61,92,0.295,93,0.295,94,0.295,95,0.854,96,1.11,97,0.576,98,3.858,99,1.409,100,2.166,101,3.104,102,0.513,103,0.576,104,0.844,105,0.844,106,0.844,107,0.844,108,0.844,109,0.55,110,0.576,111,0.576,112,0.243,113,0.576,114,0.844,115,0.295,116,0.576,117,0.844,118,0.576,119,0.576,120,2.073,121,0.576,122,1.346,123,0.576,124,0.318,125,0.486,126,0.732,127,0.397,128,0.295,129,0.295,130,0.295,131,0.576,132,0.271,133,0.295,134,0.464,135,0.295,136,0.561,137,0.439,138,0.513,139,0.844,140,1.101,141,0.464,142,0.282,143,0.271,144,0.295,145,0.295,146,0.263,147,0.295,148,0.576,149,0.371,150,0.295,151,0.929,152,0.295,153,0.576,154,0.53,155,0.263,156,0.576,157,0.263,158,0.175,159,0.263,160,0.576,161,1.803,162,0.392,163,0.513,164,0.295,165,0.295,166,0.255,167,0.777,168,0.295,169,0.206,170,0.513,171,0.752,172,0.243,173,0.295,174,0.907,175,0.371,176,0.475,177,0.447,178,0.383,179,0.731,180,0.513,181,0.778,182,2.338,183,0.419,184,0.263,185,0.844,186,0.475,187,1.346,188,0.732,189,1.013,190,1.013,191,0.295,192,0.295,193,0.295,194,0.513,195,0.844,196,0.271,197,0.271,198,1.582,199,2.023,200,1.708,201,0.752,202,0.844,203,0.295,204,0.282,205,0.752,206,0.513,207,1.303,208,0.295,209,0.513,210,0.712,211,0.295,212,0.555,213,0.243,214,0.295,215,0.295,216,0.295,217,0.238,218,0.576,219,0.295,220,1.2,221,0.513,222,0.576,223,0.229,224,0.447,225,0.263,226,0.218,227,1.409,228,0.233,229,0.379,230,0.576,231,0.576,232,0.186,233,0.555,234,0.179,235,0.655,236,0.712,237,0.295,238,0.447,239,0.263,240,0.263,241,0.513,242,0.513,243,2.324,244,1.287,245,1.287,246,1.582,247,1.807,248,1.807,249,0.263,250,0.295,251,0.295,252,0.295,253,0.295,254,1.346,255,0.225,256,0.229,257,0.295,258,0.295,259,0.295,260,0.229,261,0.513,262,0.263,263,0.243,264,0.282,265,0.263,266,0.295,267,0.295,268,0.981,269,0.576,270,0.295,271,0.295,272,0.263,273,0.407,274,0.295,275,0.295,276,0.55,277,0.295,278,0.589,279,0.575,280,0.295,281,0.208,282,0.295,283,0.576,284,0.255,285,0.295,286,0.263,287,0.295,288,0.295,289,0.218,290,0.206,291,0.208,292,0.576,293,0.295,294,0.576,295,0.295,296,0.295,297,0.295,298,0.295,299,0.233,300,1.456,301,1.101,302,0.295,303,0.295,304,0.295,305,0.271,306,0.295,307,0.295,308,0.295,309,0.295,310,0.233,311,0.576,312,0.576,313,0.576,314,0.576,315,0.271,316,0.295,317,0.576,318,0.173,319,0.249,320,0.295,321,0.576,322,0.295,323,0.295,324,0.295,325,0.295,326,0.295,327,1.052,328,0.295,329,0.147,330,0.147,331,0.147,332,0.147,333,0.147,334,0.147,335,0.146,336,0.147,337,0.147,338,0.147,339,0.147,340,0.147]],["component/1",[17,0.285]],["title/2",[]],["name/2",[341,0.668]],["text/2",[]],["component/2",[17,0.285]],["title/3-1",[0,31.598]],["name/3-1",[]],["text/3-1",[]],["component/3-1",[]],["title/3-2",[342,47.418]],["name/3-2",[]],["text/3-2",[]],["component/3-2",[]],["title/3-3",[343,31.235,344,42.775]],["name/3-3",[]],["text/3-3",[]],["component/3-3",[]],["title/3-4",[345,29.439,346,42.775]],["name/3-4",[]],["text/3-4",[]],["component/3-4",[]],["title/3-5",[347,18.266]],["name/3-5",[]],["text/3-5",[]],["component/3-5",[]],["title/3-6",[348,17.08]],["name/3-6",[]],["text/3-6",[]],["component/3-6",[]],["title/3-7",[349,20.901]],["name/3-7",[]],["text/3-7",[]],["component/3-7",[]],["title/3",[17,21.973]],["name/3",[17,0.285]],["text/3",[0,0.612,17,3.217,18,0.581,20,1.565,32,1.09,36,0.771,42,0.74,48,2.689,73,1.746,82,0.861,87,0.936,96,0.976,98,4.271,124,1.196,137,0.903,141,4.265,149,0.763,167,1.09,175,0.763,179,1.025,207,0.763,217,0.955,228,2.362,232,0.747,234,0.72,236,0.999,255,1.65,256,1.679,278,1.51,290,2.575,329,0.591,330,0.591,331,0.591,332,0.591,333,0.591,334,0.591,335,0.587,336,0.591,337,0.591,338,0.591,339,0.591,340,0.591,342,4.103,343,4.233,344,6.396,345,3.748,346,1.132,350,1.254,351,0.837,352,1.254,353,1.826,354,2.292,355,1.254,356,1.09,357,1.254,358,1.254,359,1.254,360,0.955,361,2.24,362,1.055,363,3.287,364,1.025,365,2.292,366,1.055,367,1.254,368,2.292,369,1.254,370,2.142,371,0.806,372,1.254,373,1.254,374,0.849,375,2.292,376,0.999,377,1.254,378,2.292,379,0.849,380,3.164,381,1.254,382,1.254,383,2.292,384,1.254,385,3.164,386,1.205,387,2.292,388,1.09,389,1.254,390,1.254,391,1.09,392,0.936]],["component/3",[17,0.285]],["title/4-1",[249,22.126,393,23.732,394,24.829,395,24.829,396,24.829]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4",[397,50.366]],["name/4",[397,0.653]],["text/4",[18,3.23,329,3.286,330,3.286,331,3.286,332,3.286,333,3.286,334,3.286,335,3.267,336,3.286,337,3.286,338,3.286,339,3.286,340,3.286]],["component/4",[17,0.285]],["title/5-1",[398,61.094]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[82,44.435]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[399,54.443]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5",[17,10.486,18,14.296,19,20.619,20,15.271]],["name/5",[400,0.706]],["text/5",[14,1.112,15,0.996,17,1.466,18,1.632,19,3.333,20,2.468,21,1.202,23,1.202,24,1.202,27,1.202,28,1.202,35,1.771,36,0.878,41,1.047,42,0.843,48,1.149,49,1.202,50,1.067,54,1.112,58,0.918,61,1.202,68,1.112,69,2.17,70,2.17,71,1.202,75,1.202,76,1.202,77,1.202,78,0.981,79,2.17,80,1.202,84,1.067,137,1.029,138,1.202,146,2.17,149,1.568,155,1.202,157,1.202,182,1.202,234,0.82,235,1.047,268,1.202,329,0.673,330,0.673,331,0.673,332,1.661,333,1.215,334,1.215,335,0.669,336,0.673,337,1.215,338,1.215,339,1.215,340,1.215,397,1.112,399,1.202,401,1.202,402,1.202,403,2.435,404,1.349,405,2.435,406,1.349,407,1.349,408,1.349,409,1.349,410,1.349,411,1.349,412,1.349,413,1.349,414,1.112,415,1.202,416,1.202,417,1.012,418,1.349,419,1.349,420,1.067,421,1.349,422,1.349,423,1.242,424,1.349,425,1.349,426,2.17,427,1.349,428,1.349,429,1.349,430,0.774,431,1.349,432,1.202,433,1.349,434,1.349,435,1.349,436,1.047,437,0.813,438,2.435,439,1.349,440,1.202,441,2.435,442,1.112,443,1.349,444,1.349,445,2.435,446,1.202,447,1.349,448,1.349,449,1.349,450,1.349,451,1.349,452,1.349,453,1.202,454,1.112,455,1.349,456,1.349,457,2.435,458,1.202,459,1.349,460,1.202,461,1.349,462,1.242,463,1.349,464,2.967,465,2.967,466,0.887,467,1.349,468,1.202,469,0.918,470,1.349,471,1.349,472,1.349,473,1.349,474,1.067,475,1.349,476,1.349,477,1.349,478,1.289]],["component/5",[17,0.285]],["title/6-1",[0,31.598]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6",[234,37.152]],["name/6",[234,0.482]],["text/6",[6,1.87,7,2.726,9,1.105,10,1.977,17,3.239,18,0.806,20,0.861,36,1.069,40,1.058,41,1.275,44,1.093,48,1.371,57,2.054,78,2.839,82,1.195,95,1.275,120,1.213,126,1.093,127,1.132,134,1.325,162,1.118,175,1.058,176,1.354,178,1.093,212,2.568,234,2.867,284,1.423,290,2.027,329,0.82,330,0.82,331,0.82,332,0.82,333,0.82,334,0.82,335,1.44,336,0.82,337,0.82,338,0.82,339,0.82,340,0.82,351,1.162,392,1.299,417,1.232,479,1.275,480,1.354,481,1.069,482,1.977,483,2.657,484,1.707,485,2.144,486,2.054,487,2.588,488,3.481,489,2.254,490,1.423,491,1.118,492,0.922,493,1.512,494,1.464,495,1.213,496,1.423,497,1.213,498,1.058,499,2.588,500,1.354,501,1.954,502,1.213,503,1.464,504,1.354,505,1.464,506,1.464,507,1.643,508,1.058,509,1.643,510,1.643,511,1.118,512,2.394,513,1.643,514,1.299,515,1.643,516,1.643,517,1.643,518,1.643,519,1.643,520,1.105,521,1.643,522,1.643,523,1.643,524,1.387,525,1.643,526,1.464]],["component/6",[17,0.285]],["title/7-1",[430,35.056]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[527,54.443]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[528,54.443]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[529,37.834]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[20,23.44,430,25.68]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[530,54.443]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[20,18.494,430,20.26,437,21.283]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7-8",[437,26.976,529,27.715]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["title/7-9",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["title/7-10",[48,21.12,531,39.881]],["name/7-10",[]],["text/7-10",[]],["component/7-10",[]],["title/7-11",[4,43.206]],["name/7-11",[]],["text/7-11",[]],["component/7-11",[]],["title/7-12",[20,18.494,430,20.26,437,21.283]],["name/7-12",[]],["text/7-12",[]],["component/7-12",[]],["title/7-13",[437,26.976,529,27.715]],["name/7-13",[]],["text/7-13",[]],["component/7-13",[]],["title/7-14",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/7-14",[]],["text/7-14",[]],["component/7-14",[]],["title/7-15",[19,20.619,417,21.868,454,24.036,532,25.982]],["name/7-15",[]],["text/7-15",[]],["component/7-15",[]],["title/7-16",[533,54.443]],["name/7-16",[]],["text/7-16",[]],["component/7-16",[]],["title/7-17",[4,20.619,98,17.277,534,25.982,535,25.982]],["name/7-17",[]],["text/7-17",[]],["component/7-17",[]],["title/7-18",[20,13.005,430,14.247,437,14.967,536,22.126,537,22.126]],["name/7-18",[]],["text/7-18",[]],["component/7-18",[]],["title/7-19",[437,26.976,529,27.715]],["name/7-19",[]],["text/7-19",[]],["component/7-19",[]],["title/7-20",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/7-20",[]],["text/7-20",[]],["component/7-20",[]],["title/7-21",[48,16.663,538,29.109,539,29.109]],["name/7-21",[]],["text/7-21",[]],["component/7-21",[]],["title/7-22",[540,54.443]],["name/7-22",[]],["text/7-22",[]],["component/7-22",[]],["title/7-23",[20,18.494,430,20.26,437,21.283]],["name/7-23",[]],["text/7-23",[]],["component/7-23",[]],["title/7-24",[437,26.976,529,27.715]],["name/7-24",[]],["text/7-24",[]],["component/7-24",[]],["title/7-25",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/7-25",[]],["text/7-25",[]],["component/7-25",[]],["title/7-26",[48,16.663,538,29.109,539,29.109]],["name/7-26",[]],["text/7-26",[]],["component/7-26",[]],["title/7-27",[2,16.752,42,22.073,186,29.109]],["name/7-27",[]],["text/7-27",[]],["component/7-27",[]],["title/7-28",[42,22.073,469,24.037,541,31.465]],["name/7-28",[]],["text/7-28",[]],["component/7-28",[]],["title/7",[436,34.735,437,26.976]],["name/7",[436,0.615]],["text/7",[2,2.031,4,1.248,12,2.401,13,0.275,15,0.246,17,1.871,18,0.739,19,0.459,20,2.081,41,0.259,42,4.088,48,1.636,50,0.514,51,0.846,54,0.275,56,0.259,58,1.83,68,0.783,73,0.766,83,0.297,84,0.751,85,0.297,86,1.1,87,0.514,91,1.342,95,0.259,98,1.192,127,0.654,136,0.632,151,0.281,159,1.573,163,0.297,171,0.297,172,0.535,175,0.215,176,0.783,177,0.259,178,0.222,181,0.459,186,0.275,200,0.281,206,0.297,207,0.215,226,0.246,233,0.991,234,0.203,236,1.49,238,0.259,240,0.297,242,0.297,260,0.259,265,0.579,278,0.453,279,0.227,290,0.663,291,0.873,299,0.264,310,0.264,329,0.166,330,0.166,331,0.166,332,0.166,333,0.166,334,0.166,335,0.165,336,0.166,337,0.324,338,0.166,339,0.166,340,0.166,341,0.281,364,0.289,391,1.386,392,0.264,415,0.846,417,1.13,426,0.579,430,1.013,432,3.245,436,0.259,437,3.136,453,0.297,454,1.455,458,0.846,460,0.297,464,1.573,465,0.297,468,1.573,469,2.36,491,0.442,501,0.437,502,0.246,524,0.281,527,0.579,528,0.846,529,3.557,530,0.579,531,0.846,532,1.1,533,0.846,534,0.579,535,0.297,536,1.342,537,0.846,538,1.018,539,1.242,540,1.1,541,0.579,542,0.949,543,0.333,544,0.598,545,0.333,546,0.579,547,0.307,548,1.765,549,0.333,550,2.012,551,0.333,552,0.649,553,0.333,554,0.333,555,0.649,556,0.504,557,0.333,558,0.949,559,0.333,560,0.333,561,0.333,562,0.333,563,0.333,564,0.949,565,0.949,566,0.333,567,0.649,568,0.333,569,0.333,570,0.333,571,0.898,572,0.579,573,0.949,574,0.671,575,0.949,576,1.744,577,0.649,578,0.649,579,1.506,580,0.649,581,0.333,582,0.649,583,0.649,584,0.649,585,0.649,586,1.235,587,0.333,588,0.333,589,0.333,590,0.333,591,2.473,592,0.333,593,0.846,594,4.567,595,5.428,596,2.248,597,1.506,598,0.949,599,0.649,600,0.333,601,0.949,602,0.319,603,0.333,604,0.333,605,0.333,606,0.333,607,0.333,608,0.333,609,0.333,610,0.649,611,0.269,612,0.333,613,0.649,614,0.466,615,0.333,616,0.333,617,2.689,618,0.333,619,0.949,620,0.333,621,0.333,622,0.333,623,0.333,624,0.333,625,0.333,626,0.333,627,0.333,628,0.307,629,0.949,630,0.333,631,0.649,632,0.333,633,0.333,634,0.333,635,0.319,636,0.649,637,0.649,638,0.333,639,0.333,640,0.649,641,0.649,642,0.333,643,0.649,644,0.333,645,0.333,646,0.649,647,0.333,648,0.333,649,0.333,650,0.333,651,0.333,652,0.333,653,0.333,654,0.333,655,0.333,656,0.333,657,1.765,658,1.765,659,1.506,660,0.649,661,0.649,662,0.242,663,0.333,664,1.506,665,1.506,666,0.333,667,0.949,668,0.333,669,0.504,670,0.333,671,0.333,672,0.333,673,0.275,674,0.333,675,0.333,676,0.333,677,0.333,678,0.333,679,0.333,680,1.235,681,0.333,682,0.333,683,0.333,684,0.333,685,0.333,686,0.275,687,0.333,688,0.333,689,0.333,690,0.333,691,0.333,692,0.333,693,0.275,694,0.333,695,0.246,696,0.333,697,0.333]],["component/7",[17,0.285]],["title/8-1",[0,31.598]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[35,44.435]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[342,47.418]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8-4",[347,18.266]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["title/8-5",[348,17.08]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["title/8-6",[2,28.986]],["name/8-6",[]],["text/8-6",[]],["component/8-6",[]],["title/8-7",[698,25.315,699,27.405,700,22.739]],["name/8-7",[]],["text/8-7",[]],["component/8-7",[]],["title/8-8",[361,33.567,701,47.401]],["name/8-8",[]],["text/8-8",[]],["component/8-8",[]],["title/8-9",[347,18.266]],["name/8-9",[]],["text/8-9",[]],["component/8-9",[]],["title/8-10",[348,17.08]],["name/8-10",[]],["text/8-10",[]],["component/8-10",[]],["title/8-11",[698,32.087,702,41.196]],["name/8-11",[]],["text/8-11",[]],["component/8-11",[]],["title/8-12",[698,32.087,703,42.775]],["name/8-12",[]],["text/8-12",[]],["component/8-12",[]],["title/8-13",[698,32.087,704,42.775]],["name/8-13",[]],["text/8-13",[]],["component/8-13",[]],["title/8-14",[705,47.401,706,47.401]],["name/8-14",[]],["text/8-14",[]],["component/8-14",[]],["title/8-15",[347,18.266]],["name/8-15",[]],["text/8-15",[]],["component/8-15",[]],["title/8-16",[348,17.08]],["name/8-16",[]],["text/8-16",[]],["component/8-16",[]],["title/8",[698,32.087,699,34.735]],["name/8",[707,0.839]],["text/8",[1,0.175,2,0.087,6,1.621,7,3.215,8,4.445,9,1.179,12,0.793,17,0.066,18,0.09,20,0.189,40,0.232,48,0.891,50,0.421,73,0.147,82,0.133,84,1.493,87,0.144,96,0.151,98,3.426,100,5.715,101,0.624,124,2.177,125,0.154,126,2.045,127,3.105,134,0.29,141,0.696,142,2.626,149,0.118,158,0.108,166,0.158,178,0.121,179,0.158,183,0.133,188,1.974,189,0.168,190,1.978,194,0.321,196,4.727,197,4.417,200,0.154,204,0.175,210,0.304,233,0.12,238,2.133,264,2.174,286,0.163,290,0.602,305,0.168,310,0.421,319,0.154,329,0.091,330,0.091,331,0.091,332,0.091,333,0.091,334,0.091,335,1.864,336,0.091,337,0.091,338,0.091,339,0.091,340,0.091,342,0.67,345,1.881,348,0.329,349,0.295,351,0.129,353,0.154,361,0.766,362,0.163,363,1.562,364,0.158,366,0.163,371,0.362,386,0.296,388,0.49,414,0.151,423,0.49,478,0.175,484,1.11,490,0.158,496,1.148,498,2.591,501,0.242,508,1.696,520,0.123,544,2.207,571,0.262,593,0.163,614,0.131,628,0.168,698,5.46,699,4.726,700,2.113,701,0.193,702,1.22,703,0.976,704,0.976,708,0.312,709,0.644,710,0.193,711,5.37,712,0.193,713,0.344,714,0.285,715,0.158,716,0.669,717,0.158,718,0.414,719,5.617,720,0.144,721,0.193,722,0.193,723,0.193,724,0.193,725,0.704,726,0.7,727,0.564,728,0.863,729,2.409,730,0.564,731,0.741,732,1.326,733,1.175,734,0.381,735,1.559,736,0.564,737,0.331,738,0.381,739,0.564,740,0.741,741,0.741,742,0.741,743,1.888,744,0.193,745,0.193,746,0.193,747,0.193,748,0.193,749,0.393,750,0.183,751,0.144,752,0.193,753,0.193,754,0.94,755,1.71,756,0.193,757,0.193,758,0.381,759,0.381,760,0.193,761,0.381,762,0.381,763,0.381,764,0.193,765,0.193,766,0.193,767,0.414,768,0.193,769,0.193,770,0.193,771,0.193,772,0.193,773,0.193,774,0.193,775,0.193,776,0.193,777,0.193,778,0.193,779,0.193,780,0.183,781,0.183,782,0.509,783,0.669,784,0.193,785,0.193,786,0.193,787,0.193,788,0.193,789,0.193,790,0.168,791,0.193,792,0.193,793,0.193,794,0.183,795,0.564,796,0.193,797,0.193,798,0.193,799,0.36,800,0.381,801,0.193,802,0.193,803,0.381,804,0.193,805,0.914,806,0.193,807,0.193,808,0.193,809,0.193,810,0.193,811,0.21,812,0.175,813,0.21,814,0.7,815,0.183,816,0.7,817,0.183,818,0.7,819,0.183,820,0.175,821,1.021,822,1.021,823,0.21,824,0.21,825,0.21,826,0.21,827,0.21,828,0.21,829,0.21,830,0.21,831,0.21,832,0.21,833,0.21,834,0.21,835,0.21,836,2.539,837,0.21,838,0.21,839,0.21,840,0.21,841,0.21,842,0.21,843,0.21,844,0.21,845,0.21,846,0.21,847,0.21,848,0.21,849,0.21,850,0.21,851,0.21,852,0.21,853,0.21,854,0.21,855,0.21,856,0.21,857,0.21,858,0.21,859,0.21]],["component/8",[17,0.285]],["title/9-1",[0,31.598]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[35,44.435]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[342,47.418]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[347,18.266]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[348,17.08]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[611,49.291]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9-7",[347,18.266]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["title/9-8",[348,17.08]],["name/9-8",[]],["text/9-8",[]],["component/9-8",[]],["title/9-9",[2,28.986]],["name/9-9",[]],["text/9-9",[]],["component/9-9",[]],["title/9-10",[860,61.094]],["name/9-10",[]],["text/9-10",[]],["component/9-10",[]],["title/9-11",[347,18.266]],["name/9-11",[]],["text/9-11",[]],["component/9-11",[]],["title/9-12",[348,17.08]],["name/9-12",[]],["text/9-12",[]],["component/9-12",[]],["title/9-13",[371,41.591]],["name/9-13",[]],["text/9-13",[]],["component/9-13",[]],["title/9-14",[347,18.266]],["name/9-14",[]],["text/9-14",[]],["component/9-14",[]],["title/9-15",[348,17.08]],["name/9-15",[]],["text/9-15",[]],["component/9-15",[]],["title/9-16",[698,32.087,699,34.735]],["name/9-16",[]],["text/9-16",[]],["component/9-16",[]],["title/9-17",[861,58.394]],["name/9-17",[]],["text/9-17",[]],["component/9-17",[]],["title/9",[698,43.803]],["name/9",[698,0.568]],["text/9",[17,1.439,18,0.483,20,0.269,36,0.334,40,0.33,44,0.341,47,2.028,48,1.04,90,0.472,95,0.398,96,0.423,98,3.754,124,0.284,126,1.699,127,0.679,132,1.682,134,0.795,136,0.655,137,0.751,141,2.804,143,0.472,151,0.433,154,0.907,158,1.513,166,0.444,169,0.358,174,0.812,217,1.147,232,0.324,255,1.393,273,0.363,276,0.49,278,0.688,290,1.782,299,0.406,300,0.907,315,0.907,329,0.256,330,0.256,331,0.256,332,0.256,333,0.256,334,0.256,335,0.254,336,0.256,337,0.256,338,0.256,339,0.256,340,0.256,341,0.433,342,3.292,345,2.464,348,0.398,349,0.486,351,0.697,353,0.433,356,0.907,360,0.414,361,1.37,362,0.457,363,1.267,366,1.267,371,2.17,386,1.017,388,2.652,393,0.49,417,1.067,420,0.406,462,0.472,474,0.406,490,2.495,493,0.472,501,0.663,506,1.267,514,0.779,520,0.663,524,0.433,547,0.472,571,0.373,611,1.777,698,6.071,699,4.475,702,2.351,703,2.441,704,2.441,708,0.444,709,0.907,713,1.359,714,0.406,715,0.853,716,2.441,717,1.231,725,0.679,782,0.942,783,0.49,814,1.422,815,1.422,816,1.422,817,1.422,818,1.422,819,1.422,821,0.513,822,0.513,861,1.359,862,1.044,863,0.543,864,0.472,865,1.044,866,1.044,867,4.242,868,1.044,869,1.044,870,1.044,871,0.472,872,0.543,873,0.543,874,0.543,875,0.341,876,0.543,877,1.044,878,0.472,879,0.543,880,0.543,881,0.543,882,0.543,883,0.543,884,0.543,885,0.543,886,0.543,887,0.543,888,0.543,889,2.333,890,1.506,891,0.543,892,1.506,893,1.935,894,0.543,895,0.543,896,1.044,897,0.589,898,0.589,899,0.589,900,0.589,901,2.568,902,2.203,903,0.589,904,0.543,905,0.543,906,0.543,907,0.543,908,2.333,909,0.589,910,2.333,911,0.543,912,0.543,913,0.543,914,1.044,915,0.433,916,0.543,917,1.044,918,0.513,919,0.543,920,0.589,921,0.543,922,0.543,923,0.543,924,0.543,925,0.543,926,0.543,927,0.472,928,0.543,929,1.2,930,0.543,931,0.543,932,1.2,933,1.044,934,0.543,935,0.543,936,0.543,937,0.543,938,0.543,939,0.907,940,0.543,941,0.543,942,0.543,943,0.543,944,0.457,945,0.543]],["component/9",[17,0.285]],["title/10-1",[0,31.598]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[35,44.435]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[342,47.418]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10-4",[347,18.266]],["name/10-4",[]],["text/10-4",[]],["component/10-4",[]],["title/10-5",[348,17.08]],["name/10-5",[]],["text/10-5",[]],["component/10-5",[]],["title/10-6",[2,28.986]],["name/10-6",[]],["text/10-6",[]],["component/10-6",[]],["title/10-7",[860,61.094]],["name/10-7",[]],["text/10-7",[]],["component/10-7",[]],["title/10-8",[347,18.266]],["name/10-8",[]],["text/10-8",[]],["component/10-8",[]],["title/10-9",[348,17.08]],["name/10-9",[]],["text/10-9",[]],["component/10-9",[]],["title/10-10",[8,27.405,699,27.405,700,22.739]],["name/10-10",[]],["text/10-10",[]],["component/10-10",[]],["title/10-11",[699,27.405,700,22.739,946,37.398]],["name/10-11",[]],["text/10-11",[]],["component/10-11",[]],["title/10-12",[705,47.401,706,47.401]],["name/10-12",[]],["text/10-12",[]],["component/10-12",[]],["title/10-13",[347,18.266]],["name/10-13",[]],["text/10-13",[]],["component/10-13",[]],["title/10-14",[348,17.08]],["name/10-14",[]],["text/10-14",[]],["component/10-14",[]],["title/10",[8,47.418]],["name/10",[8,0.615]],["text/10",[6,2.576,7,3.106,8,6.445,12,0.834,17,0.202,18,0.275,20,0.294,40,0.362,48,0.507,73,0.453,95,0.436,96,0.463,98,1.411,100,4.021,101,0.501,109,0.537,124,2.494,126,1.584,127,3.27,141,1.598,149,0.692,158,0.637,174,0.463,188,1.584,194,0.501,233,1.017,238,4.015,273,1.093,286,0.501,290,1.079,329,0.28,330,0.28,331,0.28,332,0.28,333,0.28,334,0.28,335,0.279,336,0.28,337,0.28,338,0.28,339,0.28,340,0.28,342,0.834,345,0.707,348,0.666,349,0.529,351,0.76,356,0.517,361,0.421,363,0.501,364,0.486,366,0.501,371,1.053,386,0.861,414,0.463,481,0.366,484,1.164,490,0.486,506,2.122,544,2.192,571,1.125,593,0.501,602,2.276,698,0.403,699,5.246,700,3.198,709,1.823,714,0.444,719,5.734,720,0.444,721,0.595,722,0.595,723,0.595,724,0.595,725,0.741,726,1.546,728,1.546,732,3.719,733,3.419,746,0.595,747,0.595,748,1.139,749,0.794,750,0.562,751,0.444,780,0.562,781,0.562,794,1.075,799,0.562,836,2.522,867,1.98,901,0.958,902,1.075,905,0.595,906,1.139,907,0.595,918,0.562,944,0.501,946,1.139,947,0.645,948,0.645,949,0.645,950,0.645,951,0.645,952,1.235,953,8.634,954,1.235,955,1.235,956,1.777,957,1.235,958,1.777,959,0.645,960,0.645,961,0.645,962,0.645,963,0.645,964,0.645,965,0.645,966,1.777,967,0.645,968,0.645,969,0.645,970,0.645,971,0.645,972,0.645,973,0.645,974,0.645,975,0.645,976,0.537,977,1.235,978,0.645,979,1.235,980,1.235,981,1.235,982,0.645,983,0.645,984,0.645,985,0.645,986,0.645,987,0.645,988,0.645,989,0.645,990,0.645,991,0.645,992,0.645,993,0.645,994,0.645,995,0.645,996,0.645,997,0.645,998,0.645]],["component/10",[17,0.285]],["title/11-1",[0,31.598]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[999,61.094]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[347,18.266]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[348,17.08]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11-5",[2,28.986]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["title/11-6",[790,56.238]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["title/11-7",[347,18.266]],["name/11-7",[]],["text/11-7",[]],["component/11-7",[]],["title/11-8",[348,17.08]],["name/11-8",[]],["text/11-8",[]],["component/11-8",[]],["title/11-9",[319,51.561]],["name/11-9",[]],["text/11-9",[]],["component/11-9",[]],["title/11-10",[347,18.266]],["name/11-10",[]],["text/11-10",[]],["component/11-10",[]],["title/11-11",[348,17.08]],["name/11-11",[]],["text/11-11",[]],["component/11-11",[]],["title/11-12",[1000,61.094]],["name/11-12",[]],["text/11-12",[]],["component/11-12",[]],["title/11-13",[347,18.266]],["name/11-13",[]],["text/11-13",[]],["component/11-13",[]],["title/11-14",[348,17.08]],["name/11-14",[]],["text/11-14",[]],["component/11-14",[]],["title/11-15",[1001,61.094]],["name/11-15",[]],["text/11-15",[]],["component/11-15",[]],["title/11-16",[347,18.266]],["name/11-16",[]],["text/11-16",[]],["component/11-16",[]],["title/11-17",[348,17.08]],["name/11-17",[]],["text/11-17",[]],["component/11-17",[]],["title/11-18",[2,28.986]],["name/11-18",[]],["text/11-18",[]],["component/11-18",[]],["title/11-19",[1002,61.094]],["name/11-19",[]],["text/11-19",[]],["component/11-19",[]],["title/11-20",[347,18.266]],["name/11-20",[]],["text/11-20",[]],["component/11-20",[]],["title/11-21",[348,17.08]],["name/11-21",[]],["text/11-21",[]],["component/11-21",[]],["title/11-22",[1003,61.094]],["name/11-22",[]],["text/11-22",[]],["component/11-22",[]],["title/11-23",[347,18.266]],["name/11-23",[]],["text/11-23",[]],["component/11-23",[]],["title/11-24",[348,17.08]],["name/11-24",[]],["text/11-24",[]],["component/11-24",[]],["title/11-25",[1004,61.094]],["name/11-25",[]],["text/11-25",[]],["component/11-25",[]],["title/11-26",[347,18.266]],["name/11-26",[]],["text/11-26",[]],["component/11-26",[]],["title/11-27",[348,17.08]],["name/11-27",[]],["text/11-27",[]],["component/11-27",[]],["title/11-28",[1005,61.094]],["name/11-28",[]],["text/11-28",[]],["component/11-28",[]],["title/11-29",[347,18.266]],["name/11-29",[]],["text/11-29",[]],["component/11-29",[]],["title/11-30",[348,17.08]],["name/11-30",[]],["text/11-30",[]],["component/11-30",[]],["title/11-31",[1006,61.094]],["name/11-31",[]],["text/11-31",[]],["component/11-31",[]],["title/11-32",[347,18.266]],["name/11-32",[]],["text/11-32",[]],["component/11-32",[]],["title/11-33",[348,17.08]],["name/11-33",[]],["text/11-33",[]],["component/11-33",[]],["title/11-34",[1007,61.094]],["name/11-34",[]],["text/11-34",[]],["component/11-34",[]],["title/11-35",[347,18.266]],["name/11-35",[]],["text/11-35",[]],["component/11-35",[]],["title/11-36",[348,17.08]],["name/11-36",[]],["text/11-36",[]],["component/11-36",[]],["title/11-37",[1008,61.094]],["name/11-37",[]],["text/11-37",[]],["component/11-37",[]],["title/11-38",[347,18.266]],["name/11-38",[]],["text/11-38",[]],["component/11-38",[]],["title/11-39",[348,17.08]],["name/11-39",[]],["text/11-39",[]],["component/11-39",[]],["title/11-40",[227,54.443]],["name/11-40",[]],["text/11-40",[]],["component/11-40",[]],["title/11-41",[347,18.266]],["name/11-41",[]],["text/11-41",[]],["component/11-41",[]],["title/11-42",[348,17.08]],["name/11-42",[]],["text/11-42",[]],["component/11-42",[]],["title/11-43",[1009,61.094]],["name/11-43",[]],["text/11-43",[]],["component/11-43",[]],["title/11-44",[347,18.266]],["name/11-44",[]],["text/11-44",[]],["component/11-44",[]],["title/11-45",[348,17.08]],["name/11-45",[]],["text/11-45",[]],["component/11-45",[]],["title/11-46",[1010,61.094]],["name/11-46",[]],["text/11-46",[]],["component/11-46",[]],["title/11-47",[347,18.266]],["name/11-47",[]],["text/11-47",[]],["component/11-47",[]],["title/11-48",[348,17.08]],["name/11-48",[]],["text/11-48",[]],["component/11-48",[]],["title/11-49",[1011,61.094]],["name/11-49",[]],["text/11-49",[]],["component/11-49",[]],["title/11-50",[347,18.266]],["name/11-50",[]],["text/11-50",[]],["component/11-50",[]],["title/11-51",[348,17.08]],["name/11-51",[]],["text/11-51",[]],["component/11-51",[]],["title/11-52",[1012,61.094]],["name/11-52",[]],["text/11-52",[]],["component/11-52",[]],["title/11-53",[347,18.266]],["name/11-53",[]],["text/11-53",[]],["component/11-53",[]],["title/11-54",[348,17.08]],["name/11-54",[]],["text/11-54",[]],["component/11-54",[]],["title/11",[6,39.345]],["name/11",[6,0.51]],["text/11",[6,5.011,17,3.041,18,0.319,20,0.341,48,0.307,98,2.261,124,3.337,158,0.733,210,2.273,212,0.814,223,1.747,224,0.96,225,2.4,226,1.662,232,0.411,278,0.454,289,0.48,318,0.727,329,0.325,330,0.325,331,0.325,332,0.325,333,0.325,334,0.325,335,1.721,336,0.325,337,0.325,338,0.325,339,0.325,340,0.325,348,1.688,349,2.065,351,0.46,386,4.535,479,0.505,484,0.727,492,0.694,498,1.734,508,1.734,511,0.842,556,0.505,614,0.466,695,0.913,743,1.614,749,0.48,875,6.161,1013,0.651,1014,0.536,1015,0.48,1016,0.536,1017,4.11,1018,0.651,1019,1.237,1020,0.913,1021,0.842,1022,4.11,1023,1.237,1024,1.237,1025,1.237,1026,0.651,1027,5.647,1028,0.651,1029,0.651,1030,0.651,1031,0.746,1032,1.237,1033,1.237,1034,1.237,1035,0.651,1036,0.651,1037,0.651,1038,0.651,1039,0.651,1040,0.651,1041,0.651,1042,0.651,1043,0.651,1044,0.651,1045,0.651,1046,0.651,1047,0.651,1048,0.651,1049,0.651,1050,0.651,1051,0.651,1052,0.651,1053,0.651,1054,0.651,1055,0.651]],["component/11",[17,0.285]],["title/12-1",[0,31.598]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[349,20.901]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[1056,47.418]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12-4",[347,18.266]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["title/12-5",[348,17.08]],["name/12-5",[]],["text/12-5",[]],["component/12-5",[]],["title/12-6",[2,28.986]],["name/12-6",[]],["text/12-6",[]],["component/12-6",[]],["title/12-7",[430,35.056]],["name/12-7",[]],["text/12-7",[]],["component/12-7",[]],["title/12-8",[1057,54.443]],["name/12-8",[]],["text/12-8",[]],["component/12-8",[]],["title/12-9",[347,18.266]],["name/12-9",[]],["text/12-9",[]],["component/12-9",[]],["title/12-10",[348,17.08]],["name/12-10",[]],["text/12-10",[]],["component/12-10",[]],["title/12-11",[2,28.986]],["name/12-11",[]],["text/12-11",[]],["component/12-11",[]],["title/12",[1056,47.418]],["name/12",[1056,0.615]],["text/12",[10,2.404,17,3.106,18,2.11,22,1.292,26,2.497,31,1.07,36,0.943,40,0.934,42,0.906,44,0.964,48,2.031,56,1.125,124,1.437,126,1.728,136,1.728,149,0.934,158,0.859,162,1.769,169,1.814,175,0.934,178,0.964,188,0.964,207,0.934,224,1.125,229,1.709,233,0.954,239,1.292,256,1.125,260,1.125,273,1.025,329,0.723,330,0.723,331,0.723,332,0.723,333,0.723,334,0.723,335,0.719,336,0.723,337,0.723,338,0.723,339,0.723,340,0.723,343,1.814,345,0.954,348,0.405,349,1.472,370,1.863,374,2.532,376,1.224,379,1.863,386,2.758,440,1.292,466,2.831,508,0.934,520,0.975,574,1.025,614,1.039,662,1.89,700,0.934,725,0.999,754,3.25,1056,4.275,1057,5.335,1058,1.292,1059,1.45,1060,3.531,1061,1.292,1062,1.292,1063,1.292,1064,1.292,1065,1.195,1066,1.919,1067,2.142,1068,1.195,1069,1.45,1070,1.45,1071,1.45,1072,1.45,1073,1.45,1074,1.125,1075,1.125,1076,1.125,1077,1.125,1078,1.125,1079,1.07,1080,1.07,1081,1.07,1082,1.07,1083,1.07,1084,1.07,1085,1.07,1086,1.125,1087,1.125,1088,1.125]],["component/12",[17,0.285]],["title/13-1",[0,31.598]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[484,35.905]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[347,18.266]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13-4",[348,17.08]],["name/13-4",[]],["text/13-4",[]],["component/13-4",[]],["title/13",[484,35.905]],["name/13",[484,0.465]],["text/13",[17,2.861,18,1.383,40,2.965,78,2.052,99,4.103,120,3.399,124,1.56,183,3.349,207,1.817,212,3.029,228,2.231,234,1.716,281,3.256,329,1.407,330,1.407,331,1.407,332,1.407,333,1.407,334,1.407,335,2.893,336,1.407,337,1.407,338,1.407,339,1.407,340,1.407,348,0.789,349,0.965,386,2.564,484,3.956,492,2.583,495,2.083,496,2.443,498,1.817,505,2.514,508,2.965,743,3.301,875,4.933,1017,3.134,1022,1.921,1089,2.821,1090,2.821,1091,2.514,1092,2.083]],["component/13",[17,0.285]],["title/14-1",[0,31.598]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[1093,54.443]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[347,18.266]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[348,17.08]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14-5",[2,28.986]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["title/14-6",[57,43.206]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["title/14-7",[347,18.266]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["title/14-8",[348,17.08]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["title/14-9",[349,20.901]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["title/14",[57,43.206]],["name/14",[57,0.56]],["text/14",[7,0.691,17,2.889,18,2.119,26,2.128,48,1.753,57,3.057,64,1.798,78,0.869,120,0.882,124,0.66,126,0.795,136,0.795,149,0.769,161,1.065,162,2.529,169,1.522,175,0.769,177,0.927,184,1.065,188,0.795,207,0.769,234,0.726,238,0.927,279,1.485,284,1.034,291,0.845,318,1.282,329,0.596,330,0.596,331,0.596,332,0.596,333,0.596,334,0.596,335,1.492,336,0.596,337,0.596,338,0.596,339,0.596,340,0.596,343,0.834,345,0.786,348,0.334,349,0.409,370,0.856,374,2.157,379,1.564,386,2.068,392,1.725,466,0.786,480,1.798,481,3.967,487,1.065,488,4.743,492,2.083,497,0.882,498,1.405,499,1.943,500,1.798,501,2.908,502,1.61,503,2.682,504,1.798,520,0.804,571,1.586,572,1.943,725,0.823,737,1.1,812,1.142,871,3.419,929,1.008,1031,1.315,1066,0.882,1077,0.927,1078,0.927,1079,0.882,1080,0.882,1081,0.882,1082,0.882,1083,0.882,1084,0.882,1085,0.882,1093,5.104,1094,3.76,1095,1.943,1096,2.627,1097,2.181,1098,2.181,1099,2.181,1100,1.798,1101,1.693,1102,1.195,1103,1.195,1104,1.195,1105,1.195]],["component/14",[17,0.285]],["title/15-1",[0,31.598]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[318,26.301,483,30.467]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[349,20.901]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[1106,61.094]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[347,18.266]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15-6",[348,17.08]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["title/15-7",[2,28.986]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["title/15-8",[430,35.056]],["name/15-8",[]],["text/15-8",[]],["component/15-8",[]],["title/15-9",[349,20.901]],["name/15-9",[]],["text/15-9",[]],["component/15-9",[]],["title/15-10",[1107,54.443]],["name/15-10",[]],["text/15-10",[]],["component/15-10",[]],["title/15-11",[347,18.266]],["name/15-11",[]],["text/15-11",[]],["component/15-11",[]],["title/15-12",[348,17.08]],["name/15-12",[]],["text/15-12",[]],["component/15-12",[]],["title/15-13",[2,28.986]],["name/15-13",[]],["text/15-13",[]],["component/15-13",[]],["title/15-14",[430,35.056]],["name/15-14",[]],["text/15-14",[]],["component/15-14",[]],["title/15-15",[483,30.467,1031,26.976]],["name/15-15",[]],["text/15-15",[]],["component/15-15",[]],["title/15-16",[349,20.901]],["name/15-16",[]],["text/15-16",[]],["component/15-16",[]],["title/15-17",[1108,61.094]],["name/15-17",[]],["text/15-17",[]],["component/15-17",[]],["title/15-18",[347,18.266]],["name/15-18",[]],["text/15-18",[]],["component/15-18",[]],["title/15-19",[348,17.08]],["name/15-19",[]],["text/15-19",[]],["component/15-19",[]],["title/15-20",[2,28.986]],["name/15-20",[]],["text/15-20",[]],["component/15-20",[]],["title/15-21",[430,35.056]],["name/15-21",[]],["text/15-21",[]],["component/15-21",[]],["title/15-22",[349,20.901]],["name/15-22",[]],["text/15-22",[]],["component/15-22",[]],["title/15-23",[1109,54.443]],["name/15-23",[]],["text/15-23",[]],["component/15-23",[]],["title/15-24",[347,18.266]],["name/15-24",[]],["text/15-24",[]],["component/15-24",[]],["title/15-25",[348,17.08]],["name/15-25",[]],["text/15-25",[]],["component/15-25",[]],["title/15-26",[2,28.986]],["name/15-26",[]],["text/15-26",[]],["component/15-26",[]],["title/15-27",[430,35.056]],["name/15-27",[]],["text/15-27",[]],["component/15-27",[]],["title/15",[483,41.591]],["name/15",[483,0.539]],["text/15",[6,0.292,7,0.506,17,2.872,18,0.97,26,0.896,31,0.645,36,0.569,40,0.816,42,0.792,44,0.581,48,1.612,98,1.364,124,0.483,125,1.379,136,1.087,149,1.482,158,0.518,162,1.773,169,1.141,170,3.044,175,1.052,178,0.581,183,0.636,188,0.581,201,0.779,212,4.492,213,0.721,229,0.834,232,0.286,233,1.075,235,0.352,255,1.755,263,0.373,273,1.627,279,0.595,281,0.32,291,0.618,318,2.008,329,0.226,330,0.226,331,0.226,332,0.226,333,0.226,334,0.226,335,0.628,336,0.226,337,0.226,338,0.226,339,0.226,340,0.226,343,1.141,345,0.834,348,0.244,349,0.559,370,1.172,371,1.347,374,1.65,376,0.382,379,1.172,386,1.45,400,2.576,416,3.044,442,1.347,466,2.247,480,0.721,481,0.825,482,0.595,483,2.49,484,0.514,486,1.627,488,1.207,489,0.679,491,1.347,492,2.181,494,0.404,495,1.207,497,1.207,498,1.274,501,0.852,502,0.334,508,0.816,511,0.863,512,0.721,514,0.358,520,0.588,556,0.352,571,0.636,574,1.156,576,0.352,662,0.636,673,0.373,686,0.373,693,0.373,695,1.207,700,0.563,714,0.358,717,1.097,725,0.602,749,1.207,751,0.358,878,0.417,944,0.779,976,0.836,1014,0.721,1015,0.645,1020,0.645,1021,1.567,1031,1.743,1065,0.373,1066,1.461,1067,1.631,1068,1.045,1074,0.679,1075,0.679,1076,0.679,1079,0.645,1080,0.645,1081,0.645,1082,0.645,1083,0.645,1084,0.645,1085,0.645,1086,0.679,1087,0.679,1088,0.679,1092,0.645,1094,0.32,1096,1.627,1107,2.321,1109,2.321,1110,3.161,1111,0.453,1112,0.453,1113,2.383,1114,0.404,1115,0.453,1116,0.874,1117,0.779,1118,0.404,1119,0.404,1120,0.404,1121,0.404,1122,0.453,1123,0.453,1124,0.874,1125,0.874,1126,0.779,1127,0.874,1128,0.874,1129,0.874,1130,1.634,1131,1.267,1132,1.634,1133,1.634,1134,1.634,1135,1.634,1136,1.634,1137,1.634,1138,0.874,1139,0.874,1140,0.874,1141,0.453]],["component/15",[17,0.285]],["title/16-1",[0,31.598]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[349,20.901]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[10,41.591]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[347,18.266]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[348,17.08]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[2,28.986]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16-7",[1142,54.443]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["title/16-8",[347,18.266]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["title/16-9",[348,17.08]],["name/16-9",[]],["text/16-9",[]],["component/16-9",[]],["title/16-10",[2,28.986]],["name/16-10",[]],["text/16-10",[]],["component/16-10",[]],["title/16",[234,37.152]],["name/16",[10,0.539]],["text/16",[6,0.631,7,0.566,10,2.874,17,3.133,18,1.555,20,0.513,26,1.284,31,0.723,36,0.637,40,1.17,42,0.612,44,0.651,48,1.497,56,1.41,124,0.541,126,1.208,136,1.208,137,0.747,149,1.17,158,1.076,162,2.159,169,1.268,175,0.631,178,0.651,188,0.651,207,0.631,217,0.79,224,1.971,229,1.195,233,0.644,263,0.807,273,1.284,279,0.667,291,0.692,318,0.575,329,0.488,330,0.488,331,0.488,332,0.488,333,0.488,334,0.488,335,0.486,336,0.488,337,0.488,338,0.488,339,0.488,340,0.488,343,1.268,345,0.644,348,0.274,349,0.621,370,1.302,374,1.821,379,1.302,386,1.766,442,0.807,466,2.086,481,0.637,491,1.236,492,3.389,495,0.723,497,1.875,498,0.631,508,2.043,512,1.497,520,0.659,546,2.263,574,1.284,611,0.79,662,0.712,669,0.76,714,0.774,725,0.675,743,2.673,751,0.774,927,0.901,939,0.901,1015,1.341,1020,0.723,1021,2.874,1031,0.59,1058,2.263,1061,0.873,1062,0.873,1063,0.873,1064,0.873,1065,0.807,1066,1.341,1067,1.497,1068,0.807,1074,0.76,1075,0.76,1076,0.76,1077,0.76,1078,0.76,1079,0.723,1080,0.723,1081,0.723,1082,0.723,1083,0.723,1084,0.723,1085,0.723,1086,0.76,1087,0.76,1088,0.76,1092,0.723,1094,0.692,1096,2.986,1113,3.845,1117,1.618,1118,0.873,1119,2.263,1120,0.873,1121,0.873,1142,4.156,1143,0.873,1144,0.979,1145,0.979,1146,3.728,1147,0.979,1148,0.979,1149,0.979,1150,0.979,1151,1.816,1152,0.979,1153,0.979]],["component/16",[17,0.285]],["title/17-1",[0,31.598]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[1154,50.366]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[35,44.435]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[347,18.266]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17-5",[1155,54.443]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["title/17-6",[2,28.986]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["title/17-7",[348,12.512,1156,39.881]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["title/17",[492,34.27]],["name/17",[492,0.444]],["text/17",[4,0.764,7,2.618,17,2.391,18,0.53,44,0.719,48,0.939,78,0.786,82,0.786,98,4.087,102,0.963,120,0.798,172,0.891,177,0.839,180,0.963,181,1.407,183,0.786,205,0.963,207,0.696,209,0.963,212,0.711,213,1.64,221,5.683,223,0.839,226,0.798,229,2.641,232,0.682,272,0.963,289,0.798,290,0.754,310,2.714,318,2.661,329,0.539,330,0.539,331,0.539,332,0.539,333,0.539,334,0.539,335,0.536,336,0.539,337,0.539,338,0.539,339,0.539,340,0.539,348,0.773,353,0.912,420,1.573,466,0.711,492,4.42,495,0.798,500,0.891,501,0.727,504,1.64,511,1.354,526,0.963,576,0.839,669,0.839,700,0.696,708,0.936,715,1.723,901,1.773,932,1.679,1014,2.83,1015,0.798,1021,3.082,1031,2.729,1096,3.202,1100,1.64,1101,0.839,1143,0.963,1154,2.279,1155,1.773,1156,0.963,1157,2.463,1158,2.463,1159,1.08,1160,2.764,1161,4.528,1162,1.08,1163,1.08,1164,1.08,1165,1.08,1166,1.08,1167,1.08,1168,0.963,1169,0.963,1170,3.578,1171,4.015,1172,3.578,1173,4.015,1174,1.773,1175,1.989,1176,1.08,1177,1.08,1178,1.08]],["component/17",[17,0.285]],["title/18-1",[0,31.598]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["title/18-2",[9,41.103]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["title/18-3",[347,18.266]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["title/18-4",[348,17.08]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["title/18-5",[1179,54.443]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["title/18-6",[347,18.266]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["title/18-7",[348,17.08]],["name/18-7",[]],["text/18-7",[]],["component/18-7",[]],["title/18-8",[1180,54.443]],["name/18-8",[]],["text/18-8",[]],["component/18-8",[]],["title/18-9",[347,18.266]],["name/18-9",[]],["text/18-9",[]],["component/18-9",[]],["title/18-10",[348,17.08]],["name/18-10",[]],["text/18-10",[]],["component/18-10",[]],["title/18-11",[1181,54.443]],["name/18-11",[]],["text/18-11",[]],["component/18-11",[]],["title/18-12",[347,18.266]],["name/18-12",[]],["text/18-12",[]],["component/18-12",[]],["title/18-13",[348,17.08]],["name/18-13",[]],["text/18-13",[]],["component/18-13",[]],["title/18-14",[1182,54.443]],["name/18-14",[]],["text/18-14",[]],["component/18-14",[]],["title/18-15",[347,18.266]],["name/18-15",[]],["text/18-15",[]],["component/18-15",[]],["title/18-16",[348,17.08]],["name/18-16",[]],["text/18-16",[]],["component/18-16",[]],["title/18-17",[1183,54.443]],["name/18-17",[]],["text/18-17",[]],["component/18-17",[]],["title/18-18",[348,17.08]],["name/18-18",[]],["text/18-18",[]],["component/18-18",[]],["title/18-19",[1184,54.443]],["name/18-19",[]],["text/18-19",[]],["component/18-19",[]],["title/18-20",[347,18.266]],["name/18-20",[]],["text/18-20",[]],["component/18-20",[]],["title/18-21",[348,17.08]],["name/18-21",[]],["text/18-21",[]],["component/18-21",[]],["title/18-22",[1185,54.443]],["name/18-22",[]],["text/18-22",[]],["component/18-22",[]],["title/18-23",[347,18.266]],["name/18-23",[]],["text/18-23",[]],["component/18-23",[]],["title/18-24",[348,17.08]],["name/18-24",[]],["text/18-24",[]],["component/18-24",[]],["title/18-25",[1186,54.443]],["name/18-25",[]],["text/18-25",[]],["component/18-25",[]],["title/18-26",[347,18.266]],["name/18-26",[]],["text/18-26",[]],["component/18-26",[]],["title/18-27",[348,17.08]],["name/18-27",[]],["text/18-27",[]],["component/18-27",[]],["title/18-28",[1187,54.443]],["name/18-28",[]],["text/18-28",[]],["component/18-28",[]],["title/18-29",[347,18.266]],["name/18-29",[]],["text/18-29",[]],["component/18-29",[]],["title/18-30",[348,17.08]],["name/18-30",[]],["text/18-30",[]],["component/18-30",[]],["title/18-31",[1188,54.443]],["name/18-31",[]],["text/18-31",[]],["component/18-31",[]],["title/18-32",[347,18.266]],["name/18-32",[]],["text/18-32",[]],["component/18-32",[]],["title/18-33",[348,17.08]],["name/18-33",[]],["text/18-33",[]],["component/18-33",[]],["title/18",[9,41.103]],["name/18",[9,0.533]],["text/18",[9,3.109,17,2.194,18,0.217,20,0.231,48,0.209,98,0.262,124,1.986,158,2.129,181,2.54,188,2.54,232,0.279,241,0.761,278,0.308,279,0.581,281,2.54,289,0.326,329,0.22,330,0.22,331,0.22,332,0.22,333,0.22,334,0.22,335,2.623,336,0.22,337,0.22,338,0.22,339,0.22,340,0.22,348,1.004,349,1.229,351,0.313,386,3.108,474,2.841,479,0.343,484,2.111,491,2.445,492,3.131,498,2.73,508,3.305,511,3.893,614,0.317,662,2.613,743,4.101,820,3.433,875,5.859,1016,0.364,1017,2.445,1022,2.445,1091,3.201,1092,2.652,1157,3.201,1158,3.201,1168,3.201,1179,0.761,1180,0.761,1181,0.761,1182,0.761,1183,0.761,1184,0.761,1185,0.761,1186,0.761,1187,0.761,1188,0.761,1189,0.442,1190,3.592,1191,3.592,1192,3.592,1193,0.442,1194,0.442,1195,0.442,1196,0.442,1197,0.442,1198,3.403,1199,0.442,1200,0.442,1201,0.442,1202,0.442,1203,3.819,1204,0.442,1205,0.442,1206,0.442,1207,0.442,1208,0.442,1209,0.442,1210,0.442,1211,0.442,1212,0.442,1213,0.442,1214,0.442,1215,0.442,1216,0.442]],["component/18",[17,0.285]],["title/19-1",[0,31.598]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[485,45.107]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[347,18.266]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19-4",[348,17.08]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["title/19",[485,45.107]],["name/19",[485,0.585]],["text/19",[17,2.919,18,1.443,20,1.542,98,2.824,124,1.627,158,1.744,329,1.468,330,1.468,331,1.468,332,1.468,333,1.468,334,1.468,335,1.46,336,1.468,337,1.468,338,1.468,339,1.468,340,1.468,348,0.823,349,1.007,371,4.088,386,2.654,401,2.623,402,2.623,481,1.916,484,1.73,485,6.568,669,3.699,700,1.896,749,4.434,875,4.591,929,2.484,1017,2.004,1022,2.004,1217,4.766,1218,2.944,1219,4.766,1220,2.944,1221,4.766]],["component/19",[17,0.285]],["title/20-1",[0,31.598]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[492,34.27]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[347,18.266]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[348,17.08]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20-5",[220,54.443]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["title/20-6",[347,18.266]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["title/20-7",[348,17.08]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["title/20-8",[1222,61.094]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["title/20-9",[347,18.266]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["title/20-10",[348,17.08]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["title/20-11",[1223,61.094]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["title/20-12",[347,18.266]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["title/20-13",[348,17.08]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["title/20-14",[1224,61.094]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["title/20-15",[347,18.266]],["name/20-15",[]],["text/20-15",[]],["component/20-15",[]],["title/20-16",[348,17.08]],["name/20-16",[]],["text/20-16",[]],["component/20-16",[]],["title/20-17",[1225,61.094]],["name/20-17",[]],["text/20-17",[]],["component/20-17",[]],["title/20-18",[347,18.266]],["name/20-18",[]],["text/20-18",[]],["component/20-18",[]],["title/20-19",[348,17.08]],["name/20-19",[]],["text/20-19",[]],["component/20-19",[]],["title/20-20",[1226,61.094]],["name/20-20",[]],["text/20-20",[]],["component/20-20",[]],["title/20-21",[347,18.266]],["name/20-21",[]],["text/20-21",[]],["component/20-21",[]],["title/20-22",[348,17.08]],["name/20-22",[]],["text/20-22",[]],["component/20-22",[]],["title/20-23",[1227,61.094]],["name/20-23",[]],["text/20-23",[]],["component/20-23",[]],["title/20-24",[347,18.266]],["name/20-24",[]],["text/20-24",[]],["component/20-24",[]],["title/20-25",[348,17.08]],["name/20-25",[]],["text/20-25",[]],["component/20-25",[]],["title/20-26",[1228,61.094]],["name/20-26",[]],["text/20-26",[]],["component/20-26",[]],["title/20-27",[347,18.266]],["name/20-27",[]],["text/20-27",[]],["component/20-27",[]],["title/20-28",[348,17.08]],["name/20-28",[]],["text/20-28",[]],["component/20-28",[]],["title/20-29",[1229,61.094]],["name/20-29",[]],["text/20-29",[]],["component/20-29",[]],["title/20-30",[347,18.266]],["name/20-30",[]],["text/20-30",[]],["component/20-30",[]],["title/20-31",[348,17.08]],["name/20-31",[]],["text/20-31",[]],["component/20-31",[]],["title/20",[7,35.332]],["name/20",[7,0.458]],["text/20",[7,1.521,17,2.928,18,0.31,20,0.331,48,0.298,98,1.302,124,2.403,127,2.341,183,2.47,228,3.437,229,1.992,232,0.399,278,0.441,281,4.773,289,0.467,318,2.382,329,0.315,330,0.315,331,0.315,332,0.315,333,0.315,334,0.315,335,0.314,336,0.315,337,0.315,338,0.315,339,0.315,340,0.315,348,1.215,349,1.487,351,0.447,386,3.677,479,0.491,481,1.121,484,2.382,492,4.775,614,0.453,720,2.955,875,6.081,1016,0.521,1017,2.959,1021,3.32,1022,2.959,1031,2.94,1092,3.209,1094,1.218,1096,3.449,1100,4.9,1154,0.521,1174,4.346,1230,0.632,1231,0.632,1232,0.632,1233,0.632,1234,1.204,1235,0.632,1236,0.632,1237,0.632,1238,0.632,1239,1.204,1240,0.632]],["component/20",[17,0.285]],["title/21-1",[0,31.598]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[486,43.206]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[347,18.266]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[348,17.08]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21",[486,43.206]],["name/21",[486,0.56]],["text/21",[17,2.569,18,1.289,48,1.241,112,2.168,124,1.454,127,1.812,158,1.558,178,2.891,212,1.73,233,1.73,318,1.546,329,1.312,330,1.312,331,1.312,332,1.312,333,1.312,334,1.312,335,1.304,336,1.312,337,1.312,338,1.312,339,1.312,340,1.312,348,0.735,349,0.9,360,2.122,361,3.26,371,2.959,386,2.42,466,1.73,483,3.781,486,6.242,488,3.209,489,3.373,491,1.79,695,1.942,700,1.694,720,2.08,875,4.291,915,2.22,1017,1.79,1022,1.79,1031,1.585,1101,2.041,1241,2.63,1242,4.346,1243,4.346,1244,4.346,1245,2.63]],["component/21",[17,0.285]],["title/22-1",[0,31.598]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[1246,61.094]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[347,18.266]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[348,17.08]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22-5",[1247,61.094]],["name/22-5",[]],["text/22-5",[]],["component/22-5",[]],["title/22-6",[347,18.266]],["name/22-6",[]],["text/22-6",[]],["component/22-6",[]],["title/22-7",[348,17.08]],["name/22-7",[]],["text/22-7",[]],["component/22-7",[]],["title/22",[1248,50.366]],["name/22",[1248,0.653]],["text/22",[2,0.951,7,0.63,17,2.783,18,0.534,35,0.792,64,2.848,98,2.047,112,0.898,124,1.108,158,1.649,181,1.968,207,0.701,223,2.681,226,2.55,229,1.318,232,0.687,262,1.786,273,1.417,299,0.861,318,1.178,329,0.543,330,0.543,331,0.543,332,0.543,333,0.543,334,0.543,335,0.54,336,0.543,337,0.543,338,0.543,339,0.543,340,0.543,348,0.56,349,0.686,360,0.879,361,0.817,371,4.36,386,1.924,414,0.898,420,0.861,446,1.786,474,1.585,481,1.304,484,1.178,491,1.894,492,1.938,511,1.364,556,0.845,574,1.417,695,2.055,700,1.792,720,1.585,749,3.697,751,1.585,864,1.845,875,3.601,915,1.691,932,1.691,1015,1.479,1017,1.364,1020,0.804,1021,1.364,1022,1.364,1031,1.208,1094,1.417,1096,0.77,1101,2.16,1126,1.786,1169,0.971,1198,1.786,1248,6.517,1249,1.786,1250,3.078,1251,1.786,1252,4.553,1253,3.454,1254,2.783,1255,2.004,1256,2.004,1257,2.004,1258,1.089,1259,2.004,1260,2.004,1261,1.089,1262,2.004,1263,2.004]],["component/22",[17,0.285]],["title/23-1",[0,31.598]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[318,26.301,482,30.467]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[349,20.901]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23-4",[1250,54.443]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["title/23-5",[347,18.266]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["title/23-6",[348,17.08]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["title/23-7",[2,28.986]],["name/23-7",[]],["text/23-7",[]],["component/23-7",[]],["title/23-8",[1264,54.443]],["name/23-8",[]],["text/23-8",[]],["component/23-8",[]],["title/23-9",[347,18.266]],["name/23-9",[]],["text/23-9",[]],["component/23-9",[]],["title/23-10",[348,17.08]],["name/23-10",[]],["text/23-10",[]],["component/23-10",[]],["title/23-11",[2,28.986]],["name/23-11",[]],["text/23-11",[]],["component/23-11",[]],["title/23-12",[482,30.467,1031,26.976]],["name/23-12",[]],["text/23-12",[]],["component/23-12",[]],["title/23-13",[349,20.901]],["name/23-13",[]],["text/23-13",[]],["component/23-13",[]],["title/23-14",[1251,54.443]],["name/23-14",[]],["text/23-14",[]],["component/23-14",[]],["title/23-15",[347,18.266]],["name/23-15",[]],["text/23-15",[]],["component/23-15",[]],["title/23-16",[348,17.08]],["name/23-16",[]],["text/23-16",[]],["component/23-16",[]],["title/23-17",[2,28.986]],["name/23-17",[]],["text/23-17",[]],["component/23-17",[]],["title/23-18",[1265,54.443]],["name/23-18",[]],["text/23-18",[]],["component/23-18",[]],["title/23-19",[347,18.266]],["name/23-19",[]],["text/23-19",[]],["component/23-19",[]],["title/23-20",[348,17.08]],["name/23-20",[]],["text/23-20",[]],["component/23-20",[]],["title/23-21",[2,28.986]],["name/23-21",[]],["text/23-21",[]],["component/23-21",[]],["title/23",[482,41.591]],["name/23",[482,0.539]],["text/23",[7,0.426,17,3.032,18,1.869,19,0.521,26,0.985,31,1.028,36,0.906,40,1.921,42,0.87,44,0.926,48,2.859,124,0.77,126,0.926,136,1.667,149,0.897,158,0.825,162,1.706,169,1.749,174,0.608,175,0.897,181,0.985,188,0.926,212,0.916,229,0.916,232,1.249,233,0.916,234,0.847,235,0.572,279,0.502,281,1.772,291,0.521,318,2.831,329,0.368,330,0.368,331,0.368,332,0.368,333,0.368,334,0.368,335,0.69,336,0.368,337,0.368,338,0.368,339,0.368,340,0.368,343,1.749,345,0.916,348,0.389,349,0.857,370,0.998,374,2.449,379,1.796,386,1.902,466,1.648,481,0.906,482,3.654,488,1.028,489,1.081,492,2.138,497,1.461,498,0.475,501,2.298,502,1.028,508,0.475,511,3.822,514,1.564,520,0.937,571,1.013,574,0.985,576,1.535,662,1.013,673,1.148,686,1.631,693,1.148,725,0.959,743,0.528,1020,2.522,1021,1.706,1031,2.904,1066,1.028,1074,1.081,1075,1.081,1076,1.081,1077,1.081,1078,1.081,1079,1.028,1080,1.028,1081,1.028,1082,1.028,1083,1.028,1084,1.028,1085,1.028,1086,1.081,1087,1.081,1088,1.535,1094,0.985,1095,1.241,1113,0.608,1114,1.241,1170,0.657,1172,0.657,1249,1.241,1264,3.397,1265,3.397,1266,0.737,1267,1.392,1268,1.392,1269,1.392,1270,1.392,1271,0.737,1272,0.737,1273,0.737,1274,0.737]],["component/23",[17,0.285]],["title/24-1",[0,31.598]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[1,42.775,2,21.233]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[3,39.881,4,31.649]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24-4",[5,54.443]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["title/24-5",[6,28.821,7,25.881]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["title/24-6",[8,27.405,9,23.755,10,24.037]],["name/24-6",[]],["text/24-6",[]],["component/24-6",[]],["title/24-7",[11,31.465,12,27.405,13,29.109]],["name/24-7",[]],["text/24-7",[]],["component/24-7",[]],["title/24",[14,36.895,15,33.042]],["name/24",[15,0.585]],["text/24",[2,0.857,3,1.409,4,2.78,5,2.661,6,0.709,7,0.915,8,1.403,9,1.501,10,2.15,11,0.981,12,1.57,13,1.304,14,0.475,15,0.425,16,0.295,17,2.237,18,0.775,19,0.952,20,0.828,21,0.981,22,0.752,23,0.513,24,0.263,25,0.295,26,0.778,27,0.981,28,0.981,29,0.295,30,0.576,31,0.218,32,0.53,33,0.295,34,0.576,35,1.15,36,0.192,37,0.295,38,0.295,39,0.844,40,0.19,41,0.229,42,0.36,43,0.295,44,0.196,45,0.295,46,0.295,47,0.271,48,1.569,49,0.263,50,0.87,51,0.263,52,0.295,53,0.295,54,0.243,55,0.295,56,0.447,57,0.208,58,0.201,59,0.576,60,0.295,61,0.263,62,0.295,63,0.295,64,0.696,65,0.576,66,0.295,67,0.295,68,1.668,69,0.263,70,0.513,71,0.752,72,0.295,73,0.238,74,0.295,75,0.263,76,0.513,77,0.513,78,0.214,79,0.263,80,0.263,81,0.295,82,0.214,83,0.513,84,0.455,85,0.263,86,0.513,87,0.455,88,0.295,89,0.295,90,0.271,91,1.61,92,0.295,93,0.295,94,0.295,95,0.854,96,1.11,97,0.576,98,3.858,99,1.409,100,2.166,101,3.104,102,0.513,103,0.576,104,0.844,105,0.844,106,0.844,107,0.844,108,0.844,109,0.55,110,0.576,111,0.576,112,0.243,113,0.576,114,0.844,115,0.295,116,0.576,117,0.844,118,0.576,119,0.576,120,2.073,121,0.576,122,1.346,123,0.576,124,0.318,125,0.486,126,0.732,127,0.397,128,0.295,129,0.295,130,0.295,131,0.576,132,0.271,133,0.295,134,0.464,135,0.295,136,0.561,137,0.439,138,0.513,139,0.844,140,1.101,141,0.464,142,0.282,143,0.271,144,0.295,145,0.295,146,0.263,147,0.295,148,0.576,149,0.371,150,0.295,151,0.929,152,0.295,153,0.576,154,0.53,155,0.263,156,0.576,157,0.263,158,0.175,159,0.263,160,0.576,161,1.803,162,0.392,163,0.513,164,0.295,165,0.295,166,0.255,167,0.777,168,0.295,169,0.206,170,0.513,171,0.752,172,0.243,173,0.295,174,0.907,175,0.371,176,0.475,177,0.447,178,0.383,179,0.731,180,0.513,181,0.778,182,2.338,183,0.419,184,0.263,185,0.844,186,0.475,187,1.346,188,0.732,189,1.013,190,1.013,191,0.295,192,0.295,193,0.295,194,0.513,195,0.844,196,0.271,197,0.271,198,1.582,199,2.023,200,1.708,201,0.752,202,0.844,203,0.295,204,0.282,205,0.752,206,0.513,207,1.303,208,0.295,209,0.513,210,0.712,211,0.295,212,0.555,213,0.243,214,0.295,215,0.295,216,0.295,217,0.238,218,0.576,219,0.295,220,1.2,221,0.513,222,0.576,223,0.229,224,0.447,225,0.263,226,0.218,227,1.409,228,0.233,229,0.379,230,0.576,231,0.576,232,0.186,233,0.555,234,0.179,235,0.655,236,0.712,237,0.295,238,0.447,239,0.263,240,0.263,241,0.513,242,0.513,243,2.324,244,1.287,245,1.287,246,1.582,247,1.807,248,1.807,249,0.263,250,0.295,251,0.295,252,0.295,253,0.295,254,1.346,255,0.225,256,0.229,257,0.295,258,0.295,259,0.295,260,0.229,261,0.513,262,0.263,263,0.243,264,0.282,265,0.263,266,0.295,267,0.295,268,0.981,269,0.576,270,0.295,271,0.295,272,0.263,273,0.407,274,0.295,275,0.295,276,0.55,277,0.295,278,0.589,279,0.575,280,0.295,281,0.208,282,0.295,283,0.576,284,0.255,285,0.295,286,0.263,287,0.295,288,0.295,289,0.218,290,0.206,291,0.208,292,0.576,293,0.295,294,0.576,295,0.295,296,0.295,297,0.295,298,0.295,299,0.233,300,1.456,301,1.101,302,0.295,303,0.295,304,0.295,305,0.271,306,0.295,307,0.295,308,0.295,309,0.295,310,0.233,311,0.576,312,0.576,313,0.576,314,0.576,315,0.271,316,0.295,317,0.576,318,0.173,319,0.249,320,0.295,321,0.576,322,0.295,323,0.295,324,0.295,325,0.295,326,0.295,327,1.052,328,0.295,329,0.147,330,0.147,331,0.147,332,0.147,333,0.147,334,0.147,335,0.146,336,0.147,337,0.147,338,0.147,339,0.147,340,0.147]],["component/24",[17,0.285]],["title/25",[]],["name/25",[341,0.668]],["text/25",[]],["component/25",[17,0.285]],["title/26-1",[249,22.126,393,23.732,394,24.829,395,24.829,396,24.829]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26",[397,50.366]],["name/26",[397,0.653]],["text/26",[18,3.23,329,3.286,330,3.286,331,3.286,332,3.286,333,3.286,334,3.286,335,3.267,336,3.286,337,3.286,338,3.286,339,3.286,340,3.286]],["component/26",[17,0.285]],["title/27-1",[398,61.094]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[82,44.435]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[399,54.443]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27",[17,10.486,18,14.296,19,20.619,20,15.271]],["name/27",[400,0.706]],["text/27",[14,1.112,15,0.996,17,1.466,18,1.632,19,3.333,20,2.468,21,1.202,23,1.202,24,1.202,27,1.202,28,1.202,35,1.771,36,0.878,41,1.047,42,0.843,48,1.149,49,1.202,50,1.067,54,1.112,58,0.918,61,1.202,68,1.112,69,2.17,70,2.17,71,1.202,75,1.202,76,1.202,77,1.202,78,0.981,79,2.17,80,1.202,84,1.067,137,1.029,138,1.202,146,2.17,149,1.568,155,1.202,157,1.202,182,1.202,234,0.82,235,1.047,268,1.202,329,0.673,330,0.673,331,0.673,332,1.661,333,1.215,334,1.215,335,0.669,336,0.673,337,1.215,338,1.215,339,1.215,340,1.215,397,1.112,399,1.202,401,1.202,402,1.202,403,2.435,404,1.349,405,2.435,406,1.349,407,1.349,408,1.349,409,1.349,410,1.349,411,1.349,412,1.349,413,1.349,414,1.112,415,1.202,416,1.202,417,1.012,418,1.349,419,1.349,420,1.067,421,1.349,422,1.349,423,1.242,424,1.349,425,1.349,426,2.17,427,1.349,428,1.349,429,1.349,430,0.774,431,1.349,432,1.202,433,1.349,434,1.349,435,1.349,436,1.047,437,0.813,438,2.435,439,1.349,440,1.202,441,2.435,442,1.112,443,1.349,444,1.349,445,2.435,446,1.202,447,1.349,448,1.349,449,1.349,450,1.349,451,1.349,452,1.349,453,1.202,454,1.112,455,1.349,456,1.349,457,2.435,458,1.202,459,1.349,460,1.202,461,1.349,462,1.242,463,1.349,464,2.967,465,2.967,466,0.887,467,1.349,468,1.202,469,0.918,470,1.349,471,1.349,472,1.349,473,1.349,474,1.067,475,1.349,476,1.349,477,1.349,478,1.289]],["component/27",[17,0.285]],["title/28-1",[0,31.598]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28",[234,37.152]],["name/28",[234,0.482]],["text/28",[6,1.87,7,2.726,9,1.105,10,1.977,17,3.239,18,0.806,20,0.861,36,1.069,40,1.058,41,1.275,44,1.093,48,1.371,57,2.054,78,2.839,82,1.195,95,1.275,120,1.213,126,1.093,127,1.132,134,1.325,162,1.118,175,1.058,176,1.354,178,1.093,212,2.568,234,2.867,284,1.423,290,2.027,329,0.82,330,0.82,331,0.82,332,0.82,333,0.82,334,0.82,335,1.44,336,0.82,337,0.82,338,0.82,339,0.82,340,0.82,351,1.162,392,1.299,417,1.232,479,1.275,480,1.354,481,1.069,482,1.977,483,2.657,484,1.707,485,2.144,486,2.054,487,2.588,488,3.481,489,2.254,490,1.423,491,1.118,492,0.922,493,1.512,494,1.464,495,1.213,496,1.423,497,1.213,498,1.058,499,2.588,500,1.354,501,1.954,502,1.213,503,1.464,504,1.354,505,1.464,506,1.464,507,1.643,508,1.058,509,1.643,510,1.643,511,1.118,512,2.394,513,1.643,514,1.299,515,1.643,516,1.643,517,1.643,518,1.643,519,1.643,520,1.105,521,1.643,522,1.643,523,1.643,524,1.387,525,1.643,526,1.464]],["component/28",[17,0.285]],["title/29-1",[430,35.056]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[527,54.443]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[528,54.443]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[529,37.834]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29-5",[20,23.44,430,25.68]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["title/29-6",[530,54.443]],["name/29-6",[]],["text/29-6",[]],["component/29-6",[]],["title/29-7",[20,18.494,430,20.26,437,21.283]],["name/29-7",[]],["text/29-7",[]],["component/29-7",[]],["title/29-8",[437,26.976,529,27.715]],["name/29-8",[]],["text/29-8",[]],["component/29-8",[]],["title/29-9",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/29-9",[]],["text/29-9",[]],["component/29-9",[]],["title/29-10",[48,21.12,531,39.881]],["name/29-10",[]],["text/29-10",[]],["component/29-10",[]],["title/29-11",[4,43.206]],["name/29-11",[]],["text/29-11",[]],["component/29-11",[]],["title/29-12",[20,18.494,430,20.26,437,21.283]],["name/29-12",[]],["text/29-12",[]],["component/29-12",[]],["title/29-13",[437,26.976,529,27.715]],["name/29-13",[]],["text/29-13",[]],["component/29-13",[]],["title/29-14",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/29-14",[]],["text/29-14",[]],["component/29-14",[]],["title/29-15",[19,20.619,417,21.868,454,24.036,532,25.982]],["name/29-15",[]],["text/29-15",[]],["component/29-15",[]],["title/29-16",[533,54.443]],["name/29-16",[]],["text/29-16",[]],["component/29-16",[]],["title/29-17",[4,20.619,98,17.277,534,25.982,535,25.982]],["name/29-17",[]],["text/29-17",[]],["component/29-17",[]],["title/29-18",[20,13.005,430,14.247,437,14.967,536,22.126,537,22.126]],["name/29-18",[]],["text/29-18",[]],["component/29-18",[]],["title/29-19",[437,26.976,529,27.715]],["name/29-19",[]],["text/29-19",[]],["component/29-19",[]],["title/29-20",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/29-20",[]],["text/29-20",[]],["component/29-20",[]],["title/29-21",[48,16.663,538,29.109,539,29.109]],["name/29-21",[]],["text/29-21",[]],["component/29-21",[]],["title/29-22",[540,54.443]],["name/29-22",[]],["text/29-22",[]],["component/29-22",[]],["title/29-23",[20,18.494,430,20.26,437,21.283]],["name/29-23",[]],["text/29-23",[]],["component/29-23",[]],["title/29-24",[437,26.976,529,27.715]],["name/29-24",[]],["text/29-24",[]],["component/29-24",[]],["title/29-25",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/29-25",[]],["text/29-25",[]],["component/29-25",[]],["title/29-26",[48,16.663,538,29.109,539,29.109]],["name/29-26",[]],["text/29-26",[]],["component/29-26",[]],["title/29-27",[2,16.752,42,22.073,186,29.109]],["name/29-27",[]],["text/29-27",[]],["component/29-27",[]],["title/29-28",[42,22.073,469,24.037,541,31.465]],["name/29-28",[]],["text/29-28",[]],["component/29-28",[]],["title/29",[436,34.735,437,26.976]],["name/29",[436,0.615]],["text/29",[2,2.031,4,1.248,12,2.401,13,0.275,15,0.246,17,1.871,18,0.739,19,0.459,20,2.081,41,0.259,42,4.088,48,1.636,50,0.514,51,0.846,54,0.275,56,0.259,58,1.83,68,0.783,73,0.766,83,0.297,84,0.751,85,0.297,86,1.1,87,0.514,91,1.342,95,0.259,98,1.192,127,0.654,136,0.632,151,0.281,159,1.573,163,0.297,171,0.297,172,0.535,175,0.215,176,0.783,177,0.259,178,0.222,181,0.459,186,0.275,200,0.281,206,0.297,207,0.215,226,0.246,233,0.991,234,0.203,236,1.49,238,0.259,240,0.297,242,0.297,260,0.259,265,0.579,278,0.453,279,0.227,290,0.663,291,0.873,299,0.264,310,0.264,329,0.166,330,0.166,331,0.166,332,0.166,333,0.166,334,0.166,335,0.165,336,0.166,337,0.324,338,0.166,339,0.166,340,0.166,341,0.281,364,0.289,391,1.386,392,0.264,415,0.846,417,1.13,426,0.579,430,1.013,432,3.245,436,0.259,437,3.136,453,0.297,454,1.455,458,0.846,460,0.297,464,1.573,465,0.297,468,1.573,469,2.36,491,0.442,501,0.437,502,0.246,524,0.281,527,0.579,528,0.846,529,3.557,530,0.579,531,0.846,532,1.1,533,0.846,534,0.579,535,0.297,536,1.342,537,0.846,538,1.018,539,1.242,540,1.1,541,0.579,542,0.949,543,0.333,544,0.598,545,0.333,546,0.579,547,0.307,548,1.765,549,0.333,550,2.012,551,0.333,552,0.649,553,0.333,554,0.333,555,0.649,556,0.504,557,0.333,558,0.949,559,0.333,560,0.333,561,0.333,562,0.333,563,0.333,564,0.949,565,0.949,566,0.333,567,0.649,568,0.333,569,0.333,570,0.333,571,0.898,572,0.579,573,0.949,574,0.671,575,0.949,576,1.744,577,0.649,578,0.649,579,1.506,580,0.649,581,0.333,582,0.649,583,0.649,584,0.649,585,0.649,586,1.235,587,0.333,588,0.333,589,0.333,590,0.333,591,2.473,592,0.333,593,0.846,594,4.567,595,5.428,596,2.248,597,1.506,598,0.949,599,0.649,600,0.333,601,0.949,602,0.319,603,0.333,604,0.333,605,0.333,606,0.333,607,0.333,608,0.333,609,0.333,610,0.649,611,0.269,612,0.333,613,0.649,614,0.466,615,0.333,616,0.333,617,2.689,618,0.333,619,0.949,620,0.333,621,0.333,622,0.333,623,0.333,624,0.333,625,0.333,626,0.333,627,0.333,628,0.307,629,0.949,630,0.333,631,0.649,632,0.333,633,0.333,634,0.333,635,0.319,636,0.649,637,0.649,638,0.333,639,0.333,640,0.649,641,0.649,642,0.333,643,0.649,644,0.333,645,0.333,646,0.649,647,0.333,648,0.333,649,0.333,650,0.333,651,0.333,652,0.333,653,0.333,654,0.333,655,0.333,656,0.333,657,1.765,658,1.765,659,1.506,660,0.649,661,0.649,662,0.242,663,0.333,664,1.506,665,1.506,666,0.333,667,0.949,668,0.333,669,0.504,670,0.333,671,0.333,672,0.333,673,0.275,674,0.333,675,0.333,676,0.333,677,0.333,678,0.333,679,0.333,680,1.235,681,0.333,682,0.333,683,0.333,684,0.333,685,0.333,686,0.275,687,0.333,688,0.333,689,0.333,690,0.333,691,0.333,692,0.333,693,0.275,694,0.333,695,0.246,696,0.333,697,0.333]],["component/29",[17,0.285]],["title/30-1",[0,31.598]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[999,61.094]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[347,18.266]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30-4",[348,17.08]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["title/30-5",[349,20.901]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["title/30-6",[2,28.986]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["title/30-7",[790,56.238]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["title/30-8",[347,18.266]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["title/30-9",[348,17.08]],["name/30-9",[]],["text/30-9",[]],["component/30-9",[]],["title/30-10",[349,20.901]],["name/30-10",[]],["text/30-10",[]],["component/30-10",[]],["title/30-11",[319,51.561]],["name/30-11",[]],["text/30-11",[]],["component/30-11",[]],["title/30-12",[347,18.266]],["name/30-12",[]],["text/30-12",[]],["component/30-12",[]],["title/30-13",[348,17.08]],["name/30-13",[]],["text/30-13",[]],["component/30-13",[]],["title/30-14",[349,20.901]],["name/30-14",[]],["text/30-14",[]],["component/30-14",[]],["title/30-15",[1000,61.094]],["name/30-15",[]],["text/30-15",[]],["component/30-15",[]],["title/30-16",[347,18.266]],["name/30-16",[]],["text/30-16",[]],["component/30-16",[]],["title/30-17",[348,17.08]],["name/30-17",[]],["text/30-17",[]],["component/30-17",[]],["title/30-18",[349,20.901]],["name/30-18",[]],["text/30-18",[]],["component/30-18",[]],["title/30-19",[1001,61.094]],["name/30-19",[]],["text/30-19",[]],["component/30-19",[]],["title/30-20",[347,18.266]],["name/30-20",[]],["text/30-20",[]],["component/30-20",[]],["title/30-21",[348,17.08]],["name/30-21",[]],["text/30-21",[]],["component/30-21",[]],["title/30-22",[349,20.901]],["name/30-22",[]],["text/30-22",[]],["component/30-22",[]],["title/30-23",[2,28.986]],["name/30-23",[]],["text/30-23",[]],["component/30-23",[]],["title/30-24",[1002,61.094]],["name/30-24",[]],["text/30-24",[]],["component/30-24",[]],["title/30-25",[347,18.266]],["name/30-25",[]],["text/30-25",[]],["component/30-25",[]],["title/30-26",[348,17.08]],["name/30-26",[]],["text/30-26",[]],["component/30-26",[]],["title/30-27",[349,20.901]],["name/30-27",[]],["text/30-27",[]],["component/30-27",[]],["title/30-28",[1003,61.094]],["name/30-28",[]],["text/30-28",[]],["component/30-28",[]],["title/30-29",[347,18.266]],["name/30-29",[]],["text/30-29",[]],["component/30-29",[]],["title/30-30",[348,17.08]],["name/30-30",[]],["text/30-30",[]],["component/30-30",[]],["title/30-31",[349,20.901]],["name/30-31",[]],["text/30-31",[]],["component/30-31",[]],["title/30-32",[1004,61.094]],["name/30-32",[]],["text/30-32",[]],["component/30-32",[]],["title/30-33",[347,18.266]],["name/30-33",[]],["text/30-33",[]],["component/30-33",[]],["title/30-34",[348,17.08]],["name/30-34",[]],["text/30-34",[]],["component/30-34",[]],["title/30-35",[349,20.901]],["name/30-35",[]],["text/30-35",[]],["component/30-35",[]],["title/30-36",[1005,61.094]],["name/30-36",[]],["text/30-36",[]],["component/30-36",[]],["title/30-37",[347,18.266]],["name/30-37",[]],["text/30-37",[]],["component/30-37",[]],["title/30-38",[348,17.08]],["name/30-38",[]],["text/30-38",[]],["component/30-38",[]],["title/30-39",[349,20.901]],["name/30-39",[]],["text/30-39",[]],["component/30-39",[]],["title/30-40",[1006,61.094]],["name/30-40",[]],["text/30-40",[]],["component/30-40",[]],["title/30-41",[347,18.266]],["name/30-41",[]],["text/30-41",[]],["component/30-41",[]],["title/30-42",[348,17.08]],["name/30-42",[]],["text/30-42",[]],["component/30-42",[]],["title/30-43",[349,20.901]],["name/30-43",[]],["text/30-43",[]],["component/30-43",[]],["title/30-44",[1007,61.094]],["name/30-44",[]],["text/30-44",[]],["component/30-44",[]],["title/30-45",[347,18.266]],["name/30-45",[]],["text/30-45",[]],["component/30-45",[]],["title/30-46",[348,17.08]],["name/30-46",[]],["text/30-46",[]],["component/30-46",[]],["title/30-47",[349,20.901]],["name/30-47",[]],["text/30-47",[]],["component/30-47",[]],["title/30-48",[1008,61.094]],["name/30-48",[]],["text/30-48",[]],["component/30-48",[]],["title/30-49",[347,18.266]],["name/30-49",[]],["text/30-49",[]],["component/30-49",[]],["title/30-50",[348,17.08]],["name/30-50",[]],["text/30-50",[]],["component/30-50",[]],["title/30-51",[349,20.901]],["name/30-51",[]],["text/30-51",[]],["component/30-51",[]],["title/30-52",[227,54.443]],["name/30-52",[]],["text/30-52",[]],["component/30-52",[]],["title/30-53",[347,18.266]],["name/30-53",[]],["text/30-53",[]],["component/30-53",[]],["title/30-54",[348,17.08]],["name/30-54",[]],["text/30-54",[]],["component/30-54",[]],["title/30-55",[349,20.901]],["name/30-55",[]],["text/30-55",[]],["component/30-55",[]],["title/30-56",[1009,61.094]],["name/30-56",[]],["text/30-56",[]],["component/30-56",[]],["title/30-57",[347,18.266]],["name/30-57",[]],["text/30-57",[]],["component/30-57",[]],["title/30-58",[348,17.08]],["name/30-58",[]],["text/30-58",[]],["component/30-58",[]],["title/30-59",[349,20.901]],["name/30-59",[]],["text/30-59",[]],["component/30-59",[]],["title/30-60",[1010,61.094]],["name/30-60",[]],["text/30-60",[]],["component/30-60",[]],["title/30-61",[347,18.266]],["name/30-61",[]],["text/30-61",[]],["component/30-61",[]],["title/30-62",[348,17.08]],["name/30-62",[]],["text/30-62",[]],["component/30-62",[]],["title/30-63",[349,20.901]],["name/30-63",[]],["text/30-63",[]],["component/30-63",[]],["title/30-64",[1011,61.094]],["name/30-64",[]],["text/30-64",[]],["component/30-64",[]],["title/30-65",[347,18.266]],["name/30-65",[]],["text/30-65",[]],["component/30-65",[]],["title/30-66",[348,17.08]],["name/30-66",[]],["text/30-66",[]],["component/30-66",[]],["title/30-67",[349,20.901]],["name/30-67",[]],["text/30-67",[]],["component/30-67",[]],["title/30-68",[1012,61.094]],["name/30-68",[]],["text/30-68",[]],["component/30-68",[]],["title/30-69",[347,18.266]],["name/30-69",[]],["text/30-69",[]],["component/30-69",[]],["title/30-70",[348,17.08]],["name/30-70",[]],["text/30-70",[]],["component/30-70",[]],["title/30-71",[349,20.901]],["name/30-71",[]],["text/30-71",[]],["component/30-71",[]],["title/30",[6,28.821,17,16.095]],["name/30",[1275,0.91]],["text/30",[6,5.18,17,3.128,18,0.347,20,0.371,48,0.334,98,2.405,124,3.493,158,0.794,210,2.437,212,0.882,223,1.88,224,1.041,225,2.573,226,1.788,232,0.447,278,0.494,289,0.523,318,0.788,329,0.353,330,0.353,331,0.353,332,0.353,333,0.353,334,0.353,335,1.835,336,0.353,337,0.353,338,0.353,339,0.353,340,0.353,351,0.501,386,4.675,479,0.55,484,0.788,492,0.752,498,1.86,508,1.86,511,0.913,556,0.55,614,0.508,695,0.99,743,1.736,749,0.523,875,6.302,1013,0.708,1014,0.584,1015,0.523,1016,0.584,1017,4.301,1018,0.708,1019,1.341,1020,0.99,1021,0.913,1022,4.301,1023,1.341,1024,1.341,1025,1.341,1026,0.708,1027,5.927,1028,0.708,1029,0.708,1030,0.708,1031,0.808,1032,1.341,1033,1.341,1034,1.341,1035,0.708,1036,0.708,1037,0.708,1038,0.708,1039,0.708,1040,0.708,1041,0.708,1042,0.708,1043,0.708,1044,0.708,1045,0.708,1046,0.708,1047,0.708,1048,0.708,1049,0.708,1050,0.708,1051,0.708,1052,0.708,1053,0.708,1054,0.708,1055,0.708]],["component/30",[17,0.285]],["title/31-1",[1056,47.418]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[0,31.598]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[349,20.901]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[1056,47.418]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[347,18.266]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31-6",[348,17.08]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["title/31-7",[2,28.986]],["name/31-7",[]],["text/31-7",[]],["component/31-7",[]],["title/31-8",[430,35.056]],["name/31-8",[]],["text/31-8",[]],["component/31-8",[]],["title/31-9",[1057,54.443]],["name/31-9",[]],["text/31-9",[]],["component/31-9",[]],["title/31-10",[347,18.266]],["name/31-10",[]],["text/31-10",[]],["component/31-10",[]],["title/31-11",[348,17.08]],["name/31-11",[]],["text/31-11",[]],["component/31-11",[]],["title/31-12",[2,28.986]],["name/31-12",[]],["text/31-12",[]],["component/31-12",[]],["title/31",[]],["name/31",[1056,0.615]],["text/31",[10,2.49,17,3.153,18,2.179,22,1.35,26,1.911,31,1.118,36,0.986,40,0.975,42,0.947,44,1.007,48,2.097,56,1.176,124,0.837,126,1.797,136,1.797,149,0.975,158,0.897,162,1.839,169,1.886,175,0.975,178,1.007,188,1.007,207,0.975,224,1.176,229,1.777,233,0.996,239,1.35,256,1.176,260,1.176,273,1.071,329,0.756,330,0.756,331,0.756,332,0.756,333,0.756,334,0.756,335,0.751,336,0.756,337,0.756,338,0.756,339,0.756,340,0.756,343,1.886,345,0.996,349,0.924,370,1.937,374,2.623,376,1.278,379,1.937,386,2.475,440,1.35,466,2.923,508,0.975,520,1.019,574,1.071,614,1.086,662,1.102,700,0.975,725,1.044,754,3.367,1056,3.96,1057,5.473,1058,1.35,1059,1.515,1060,3.658,1061,1.35,1062,1.35,1063,1.35,1064,1.35,1065,1.249,1066,1.995,1067,2.228,1068,1.249,1069,1.515,1070,1.515,1071,1.515,1072,1.515,1073,1.515,1074,1.176,1075,1.176,1076,1.176,1077,1.176,1078,1.176,1079,1.118,1080,1.118,1081,1.118,1082,1.118,1083,1.118,1084,1.118,1085,1.118,1086,1.176,1087,1.176,1088,1.176]],["component/31",[17,0.285]],["title/32-1",[0,31.598]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32-2",[484,35.905]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["title/32-3",[347,18.266]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["title/32-4",[348,17.08]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["title/32-5",[349,20.901]],["name/32-5",[]],["text/32-5",[]],["component/32-5",[]],["title/32",[484,35.905]],["name/32",[484,0.465]],["text/32",[17,2.89,18,1.413,40,3.016,78,2.096,99,4.174,120,3.458,124,1.593,183,3.406,207,1.855,212,3.081,228,2.278,234,1.752,281,3.312,329,1.437,330,1.437,331,1.437,332,1.437,333,1.437,334,1.437,335,2.935,336,1.437,337,1.437,338,1.437,339,1.437,340,1.437,386,2.608,484,4.006,492,2.627,495,2.127,496,2.495,498,1.855,505,2.567,508,3.016,743,3.358,875,4.987,1017,3.188,1022,1.961,1089,2.881,1090,2.881,1091,2.567,1092,2.127]],["component/32",[17,0.285]],["title/33-1",[0,31.598]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[1093,54.443]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33-3",[347,18.266]],["name/33-3",[]],["text/33-3",[]],["component/33-3",[]],["title/33-4",[348,17.08]],["name/33-4",[]],["text/33-4",[]],["component/33-4",[]],["title/33-5",[2,28.986]],["name/33-5",[]],["text/33-5",[]],["component/33-5",[]],["title/33-6",[57,43.206]],["name/33-6",[]],["text/33-6",[]],["component/33-6",[]],["title/33-7",[347,18.266]],["name/33-7",[]],["text/33-7",[]],["component/33-7",[]],["title/33-8",[348,17.08]],["name/33-8",[]],["text/33-8",[]],["component/33-8",[]],["title/33-9",[349,20.901]],["name/33-9",[]],["text/33-9",[]],["component/33-9",[]],["title/33",[57,43.206]],["name/33",[57,0.56]],["text/33",[7,0.852,17,2.855,18,2.455,26,2.53,48,2.055,57,3.542,64,2.173,120,1.088,124,0.815,126,0.98,136,0.98,149,0.949,161,1.313,162,2.436,169,1.84,175,0.949,177,1.144,184,1.313,188,0.98,207,0.949,234,0.896,238,1.144,279,1.003,291,1.042,318,0.866,329,0.735,330,0.735,331,0.735,332,0.735,333,0.735,334,0.735,335,1.308,336,0.735,337,0.735,338,0.735,339,0.735,340,0.735,343,1.028,345,0.969,370,1.056,374,2.565,379,1.89,386,2.425,392,1.165,466,0.969,480,2.949,481,3.933,487,1.313,488,3.697,492,1.479,497,1.088,498,0.949,499,1.313,500,1.215,501,2.407,502,1.088,503,2.349,504,1.215,520,0.991,571,1.917,572,1.313,725,1.015,737,1.356,812,1.408,871,2.427,929,1.244,1031,0.888,1066,1.088,1077,1.144,1078,1.144,1079,1.088,1080,1.088,1081,1.088,1082,1.088,1083,1.088,1084,1.088,1085,1.088,1093,5.758,1094,3.08,1095,1.313,1096,1.864,1097,1.473,1098,1.473,1099,1.473,1100,1.215,1101,1.144,1102,1.473,1103,1.473,1104,2.636,1105,1.473]],["component/33",[17,0.285]],["title/34-1",[0,31.598]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34-2",[318,26.301,483,30.467]],["name/34-2",[]],["text/34-2",[]],["component/34-2",[]],["title/34-3",[349,20.901]],["name/34-3",[]],["text/34-3",[]],["component/34-3",[]],["title/34-4",[1106,61.094]],["name/34-4",[]],["text/34-4",[]],["component/34-4",[]],["title/34-5",[347,18.266]],["name/34-5",[]],["text/34-5",[]],["component/34-5",[]],["title/34-6",[348,17.08]],["name/34-6",[]],["text/34-6",[]],["component/34-6",[]],["title/34-7",[2,28.986]],["name/34-7",[]],["text/34-7",[]],["component/34-7",[]],["title/34-8",[430,35.056]],["name/34-8",[]],["text/34-8",[]],["component/34-8",[]],["title/34-9",[349,20.901]],["name/34-9",[]],["text/34-9",[]],["component/34-9",[]],["title/34-10",[1107,54.443]],["name/34-10",[]],["text/34-10",[]],["component/34-10",[]],["title/34-11",[347,18.266]],["name/34-11",[]],["text/34-11",[]],["component/34-11",[]],["title/34-12",[348,17.08]],["name/34-12",[]],["text/34-12",[]],["component/34-12",[]],["title/34-13",[2,28.986]],["name/34-13",[]],["text/34-13",[]],["component/34-13",[]],["title/34-14",[430,35.056]],["name/34-14",[]],["text/34-14",[]],["component/34-14",[]],["title/34-15",[483,30.467,1031,26.976]],["name/34-15",[]],["text/34-15",[]],["component/34-15",[]],["title/34-16",[349,20.901]],["name/34-16",[]],["text/34-16",[]],["component/34-16",[]],["title/34-17",[1108,61.094]],["name/34-17",[]],["text/34-17",[]],["component/34-17",[]],["title/34-18",[347,18.266]],["name/34-18",[]],["text/34-18",[]],["component/34-18",[]],["title/34-19",[348,17.08]],["name/34-19",[]],["text/34-19",[]],["component/34-19",[]],["title/34-20",[2,28.986]],["name/34-20",[]],["text/34-20",[]],["component/34-20",[]],["title/34-21",[430,35.056]],["name/34-21",[]],["text/34-21",[]],["component/34-21",[]],["title/34-22",[349,20.901]],["name/34-22",[]],["text/34-22",[]],["component/34-22",[]],["title/34-23",[1109,54.443]],["name/34-23",[]],["text/34-23",[]],["component/34-23",[]],["title/34-24",[347,18.266]],["name/34-24",[]],["text/34-24",[]],["component/34-24",[]],["title/34-25",[348,17.08]],["name/34-25",[]],["text/34-25",[]],["component/34-25",[]],["title/34-26",[2,28.986]],["name/34-26",[]],["text/34-26",[]],["component/34-26",[]],["title/34-27",[430,35.056]],["name/34-27",[]],["text/34-27",[]],["component/34-27",[]],["title/34",[483,41.591]],["name/34",[483,0.539]],["text/34",[6,0.301,7,0.521,17,2.905,18,0.996,26,0.33,31,0.665,36,0.586,40,0.84,42,0.815,44,0.599,48,1.65,98,1.399,125,1.418,136,1.117,149,1.521,158,0.534,162,1.818,169,1.172,170,3.115,175,1.082,178,0.599,183,0.655,188,0.599,201,0.802,212,4.557,213,0.742,229,0.858,232,0.295,233,1.105,235,0.362,255,1.801,263,0.385,273,1.67,279,0.613,281,0.33,291,0.637,318,1.902,329,0.233,330,0.233,331,0.233,332,0.233,333,0.233,334,0.233,335,0.647,336,0.233,337,0.233,338,0.233,339,0.233,340,0.233,343,1.172,345,0.858,370,1.204,371,1.383,374,1.693,376,0.394,379,1.204,386,1.131,400,2.639,416,3.115,442,1.385,466,2.299,480,0.742,481,0.848,482,0.613,483,2.203,484,0.529,486,1.67,488,1.24,489,0.699,491,1.383,492,2.228,494,0.416,495,1.24,497,1.24,498,1.308,501,0.877,502,0.345,508,0.84,511,0.887,512,0.742,514,0.369,520,0.606,556,0.362,571,0.655,574,1.188,576,0.362,673,0.385,686,0.385,693,0.385,695,1.24,700,0.58,714,0.369,717,1.129,725,0.62,749,1.24,751,0.369,878,0.43,944,0.802,976,0.861,1014,0.742,1015,0.665,1020,0.665,1021,1.607,1031,1.61,1065,0.385,1066,1.5,1067,1.675,1068,1.075,1074,0.699,1075,0.699,1076,0.699,1079,0.665,1080,0.665,1081,0.665,1082,0.665,1083,0.665,1084,0.665,1085,0.665,1086,0.699,1087,0.699,1088,0.699,1092,0.665,1094,0.33,1096,1.67,1107,2.38,1109,2.38,1110,3.236,1111,0.467,1112,0.467,1113,2.442,1114,0.416,1115,0.467,1116,0.9,1117,0.802,1118,0.416,1119,0.416,1120,0.416,1121,0.416,1122,0.467,1123,0.467,1124,0.9,1125,0.9,1126,0.802,1127,0.9,1128,0.9,1129,0.9,1130,1.68,1131,1.304,1132,1.68,1133,1.68,1134,1.68,1135,1.68,1136,1.68,1137,1.68,1138,0.9,1139,0.9,1140,0.9,1141,0.467]],["component/34",[17,0.285]],["title/35-1",[0,31.598]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35-2",[349,20.901]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["title/35-3",[10,41.591]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["title/35-4",[347,18.266]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["title/35-5",[348,17.08]],["name/35-5",[]],["text/35-5",[]],["component/35-5",[]],["title/35-6",[2,28.986]],["name/35-6",[]],["text/35-6",[]],["component/35-6",[]],["title/35-7",[349,20.901]],["name/35-7",[]],["text/35-7",[]],["component/35-7",[]],["title/35-8",[1142,54.443]],["name/35-8",[]],["text/35-8",[]],["component/35-8",[]],["title/35-9",[347,18.266]],["name/35-9",[]],["text/35-9",[]],["component/35-9",[]],["title/35-10",[348,17.08]],["name/35-10",[]],["text/35-10",[]],["component/35-10",[]],["title/35-11",[2,28.986]],["name/35-11",[]],["text/35-11",[]],["component/35-11",[]],["title/35",[234,37.152]],["name/35",[10,0.539]],["text/35",[6,0.635,7,0.57,10,2.889,17,3.14,18,1.564,20,0.517,26,1.293,31,0.728,36,0.642,40,1.177,42,0.617,44,0.656,48,1.506,56,1.419,124,0.545,126,1.216,136,1.216,137,0.752,149,1.177,158,1.083,162,2.172,169,1.276,175,0.635,178,0.656,188,0.656,207,0.635,217,0.796,224,1.984,229,1.203,233,0.649,263,0.813,273,1.293,279,0.671,291,0.697,318,0.58,329,0.492,330,0.492,331,0.492,332,0.492,333,0.492,334,0.492,335,0.489,336,0.492,337,0.492,338,0.492,339,0.492,340,0.492,343,1.276,345,0.649,349,0.337,370,1.311,374,1.832,379,1.311,386,1.777,442,0.813,466,2.099,481,0.642,491,1.245,492,3.403,495,0.728,497,1.887,498,0.635,508,2.055,512,1.507,520,0.664,546,2.278,574,1.293,611,0.796,662,0.717,669,0.765,714,0.78,725,0.68,743,2.688,751,0.78,927,0.908,939,0.908,1015,1.35,1020,0.728,1021,2.889,1031,0.594,1058,2.278,1061,0.879,1062,0.879,1063,0.879,1064,0.879,1065,0.813,1066,1.35,1067,1.507,1068,0.813,1074,0.765,1075,0.765,1076,0.765,1077,0.765,1078,0.765,1079,0.728,1080,0.728,1081,0.728,1082,0.728,1083,0.728,1084,0.728,1085,0.728,1086,0.765,1087,0.765,1088,0.765,1092,0.728,1094,0.697,1096,3.002,1113,3.864,1117,1.629,1118,0.879,1119,2.278,1120,0.879,1121,0.879,1142,4.177,1143,0.879,1144,0.986,1145,0.986,1146,3.749,1147,0.986,1148,0.986,1149,0.986,1150,0.986,1151,1.828,1152,0.986,1153,0.986]],["component/35",[17,0.285]],["title/36-1",[0,31.598]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[1154,50.366]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[35,44.435]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36-4",[347,18.266]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["title/36-5",[1155,54.443]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["title/36-6",[2,28.986]],["name/36-6",[]],["text/36-6",[]],["component/36-6",[]],["title/36-7",[348,12.512,1156,39.881]],["name/36-7",[]],["text/36-7",[]],["component/36-7",[]],["title/36",[492,34.27]],["name/36",[492,0.444]],["text/36",[4,0.764,7,2.618,17,2.391,18,0.53,44,0.719,48,0.939,78,0.786,82,0.786,98,4.087,102,0.963,120,0.798,172,0.891,177,0.839,180,0.963,181,1.407,183,0.786,205,0.963,207,0.696,209,0.963,212,0.711,213,1.64,221,5.683,223,0.839,226,0.798,229,2.641,232,0.682,272,0.963,289,0.798,290,0.754,310,2.714,318,2.661,329,0.539,330,0.539,331,0.539,332,0.539,333,0.539,334,0.539,335,0.536,336,0.539,337,0.539,338,0.539,339,0.539,340,0.539,348,0.773,353,0.912,420,1.573,466,0.711,492,4.42,495,0.798,500,0.891,501,0.727,504,1.64,511,1.354,526,0.963,576,0.839,669,0.839,700,0.696,708,0.936,715,1.723,901,1.773,932,1.679,1014,2.83,1015,0.798,1021,3.082,1031,2.729,1096,3.202,1100,1.64,1101,0.839,1143,0.963,1154,2.279,1155,1.773,1156,0.963,1157,2.463,1158,2.463,1159,1.08,1160,2.764,1161,4.528,1162,1.08,1163,1.08,1164,1.08,1165,1.08,1166,1.08,1167,1.08,1168,0.963,1169,0.963,1170,3.578,1171,4.015,1172,3.578,1173,4.015,1174,1.773,1175,1.989,1176,1.08,1177,1.08,1178,1.08]],["component/36",[17,0.285]],["title/37-1",[0,31.598]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[9,41.103]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37-3",[347,18.266]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["title/37-4",[348,17.08]],["name/37-4",[]],["text/37-4",[]],["component/37-4",[]],["title/37-5",[349,20.901]],["name/37-5",[]],["text/37-5",[]],["component/37-5",[]],["title/37-6",[1179,54.443]],["name/37-6",[]],["text/37-6",[]],["component/37-6",[]],["title/37-7",[347,18.266]],["name/37-7",[]],["text/37-7",[]],["component/37-7",[]],["title/37-8",[348,17.08]],["name/37-8",[]],["text/37-8",[]],["component/37-8",[]],["title/37-9",[349,20.901]],["name/37-9",[]],["text/37-9",[]],["component/37-9",[]],["title/37-10",[1180,54.443]],["name/37-10",[]],["text/37-10",[]],["component/37-10",[]],["title/37-11",[347,18.266]],["name/37-11",[]],["text/37-11",[]],["component/37-11",[]],["title/37-12",[348,17.08]],["name/37-12",[]],["text/37-12",[]],["component/37-12",[]],["title/37-13",[349,20.901]],["name/37-13",[]],["text/37-13",[]],["component/37-13",[]],["title/37-14",[1181,54.443]],["name/37-14",[]],["text/37-14",[]],["component/37-14",[]],["title/37-15",[347,18.266]],["name/37-15",[]],["text/37-15",[]],["component/37-15",[]],["title/37-16",[348,17.08]],["name/37-16",[]],["text/37-16",[]],["component/37-16",[]],["title/37-17",[349,20.901]],["name/37-17",[]],["text/37-17",[]],["component/37-17",[]],["title/37-18",[1182,54.443]],["name/37-18",[]],["text/37-18",[]],["component/37-18",[]],["title/37-19",[347,18.266]],["name/37-19",[]],["text/37-19",[]],["component/37-19",[]],["title/37-20",[348,17.08]],["name/37-20",[]],["text/37-20",[]],["component/37-20",[]],["title/37-21",[349,20.901]],["name/37-21",[]],["text/37-21",[]],["component/37-21",[]],["title/37-22",[1183,54.443]],["name/37-22",[]],["text/37-22",[]],["component/37-22",[]],["title/37-23",[348,17.08]],["name/37-23",[]],["text/37-23",[]],["component/37-23",[]],["title/37-24",[349,20.901]],["name/37-24",[]],["text/37-24",[]],["component/37-24",[]],["title/37-25",[1184,54.443]],["name/37-25",[]],["text/37-25",[]],["component/37-25",[]],["title/37-26",[347,18.266]],["name/37-26",[]],["text/37-26",[]],["component/37-26",[]],["title/37-27",[348,17.08]],["name/37-27",[]],["text/37-27",[]],["component/37-27",[]],["title/37-28",[349,20.901]],["name/37-28",[]],["text/37-28",[]],["component/37-28",[]],["title/37-29",[1185,54.443]],["name/37-29",[]],["text/37-29",[]],["component/37-29",[]],["title/37-30",[347,18.266]],["name/37-30",[]],["text/37-30",[]],["component/37-30",[]],["title/37-31",[348,17.08]],["name/37-31",[]],["text/37-31",[]],["component/37-31",[]],["title/37-32",[349,20.901]],["name/37-32",[]],["text/37-32",[]],["component/37-32",[]],["title/37-33",[1186,54.443]],["name/37-33",[]],["text/37-33",[]],["component/37-33",[]],["title/37-34",[347,18.266]],["name/37-34",[]],["text/37-34",[]],["component/37-34",[]],["title/37-35",[348,17.08]],["name/37-35",[]],["text/37-35",[]],["component/37-35",[]],["title/37-36",[349,20.901]],["name/37-36",[]],["text/37-36",[]],["component/37-36",[]],["title/37-37",[1187,54.443]],["name/37-37",[]],["text/37-37",[]],["component/37-37",[]],["title/37-38",[347,18.266]],["name/37-38",[]],["text/37-38",[]],["component/37-38",[]],["title/37-39",[348,17.08]],["name/37-39",[]],["text/37-39",[]],["component/37-39",[]],["title/37-40",[349,20.901]],["name/37-40",[]],["text/37-40",[]],["component/37-40",[]],["title/37-41",[1188,54.443]],["name/37-41",[]],["text/37-41",[]],["component/37-41",[]],["title/37-42",[347,18.266]],["name/37-42",[]],["text/37-42",[]],["component/37-42",[]],["title/37-43",[348,17.08]],["name/37-43",[]],["text/37-43",[]],["component/37-43",[]],["title/37-44",[349,20.901]],["name/37-44",[]],["text/37-44",[]],["component/37-44",[]],["title/37",[9,30.109,17,16.095]],["name/37",[1276,0.91]],["text/37",[9,3.029,17,2.148,18,0.208,20,0.222,48,0.2,98,2.668,124,1.928,158,2.066,181,2.466,188,2.468,232,0.268,241,0.732,255,1.661,256,1.69,260,0.637,261,0.732,278,0.296,279,0.559,281,2.466,289,0.313,329,0.212,330,0.212,331,0.212,332,0.212,333,0.212,334,0.212,335,2.561,336,0.212,337,0.212,338,0.212,339,0.212,340,0.212,351,0.3,386,3.037,474,2.758,479,0.33,484,2.049,491,2.374,492,3.059,498,2.656,508,3.225,511,3.806,614,0.304,662,2.536,743,4.009,820,3.333,875,5.787,1016,0.35,1017,2.374,1022,2.374,1091,3.108,1092,2.575,1157,3.108,1158,3.108,1168,3.108,1179,0.732,1180,0.732,1181,0.732,1182,0.732,1183,0.732,1184,0.732,1185,0.732,1186,0.732,1187,0.732,1188,0.732,1189,0.425,1190,3.487,1191,3.487,1192,3.487,1193,0.425,1194,0.425,1195,0.425,1196,0.425,1197,0.425,1198,3.306,1199,0.425,1200,0.425,1201,0.425,1202,0.425,1203,6.204,1204,0.425,1205,0.425,1206,0.425,1207,0.425,1208,0.425,1209,0.425,1210,0.425,1211,0.425,1212,0.425,1213,0.425,1214,0.425,1215,0.425,1216,0.425]],["component/37",[17,0.285]],["title/38-1",[0,31.598]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[485,45.107]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38-3",[347,18.266]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["title/38-4",[348,17.08]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["title/38-5",[349,20.901]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["title/38",[485,45.107]],["name/38",[485,0.585]],["text/38",[17,2.948,18,1.475,20,1.576,98,2.875,124,1.663,158,1.783,329,1.501,330,1.501,331,1.501,332,1.501,333,1.501,334,1.501,335,1.492,336,1.501,337,1.501,338,1.501,339,1.501,340,1.501,371,4.149,386,2.701,401,2.681,402,2.681,481,1.958,484,1.768,485,6.622,669,3.765,700,1.938,749,4.5,875,4.65,929,2.539,1017,2.048,1022,2.048,1217,4.851,1218,3.009,1219,4.851,1220,3.009,1221,4.851]],["component/38",[17,0.285]],["title/39-1",[0,31.598]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[492,34.27]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39-3",[347,18.266]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["title/39-4",[348,17.08]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["title/39-5",[349,20.901]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["title/39-6",[220,54.443]],["name/39-6",[]],["text/39-6",[]],["component/39-6",[]],["title/39-7",[347,18.266]],["name/39-7",[]],["text/39-7",[]],["component/39-7",[]],["title/39-8",[348,17.08]],["name/39-8",[]],["text/39-8",[]],["component/39-8",[]],["title/39-9",[349,20.901]],["name/39-9",[]],["text/39-9",[]],["component/39-9",[]],["title/39-10",[1222,61.094]],["name/39-10",[]],["text/39-10",[]],["component/39-10",[]],["title/39-11",[347,18.266]],["name/39-11",[]],["text/39-11",[]],["component/39-11",[]],["title/39-12",[348,17.08]],["name/39-12",[]],["text/39-12",[]],["component/39-12",[]],["title/39-13",[349,20.901]],["name/39-13",[]],["text/39-13",[]],["component/39-13",[]],["title/39-14",[1223,61.094]],["name/39-14",[]],["text/39-14",[]],["component/39-14",[]],["title/39-15",[347,18.266]],["name/39-15",[]],["text/39-15",[]],["component/39-15",[]],["title/39-16",[348,17.08]],["name/39-16",[]],["text/39-16",[]],["component/39-16",[]],["title/39-17",[349,20.901]],["name/39-17",[]],["text/39-17",[]],["component/39-17",[]],["title/39-18",[1224,61.094]],["name/39-18",[]],["text/39-18",[]],["component/39-18",[]],["title/39-19",[347,18.266]],["name/39-19",[]],["text/39-19",[]],["component/39-19",[]],["title/39-20",[348,17.08]],["name/39-20",[]],["text/39-20",[]],["component/39-20",[]],["title/39-21",[349,20.901]],["name/39-21",[]],["text/39-21",[]],["component/39-21",[]],["title/39-22",[1225,61.094]],["name/39-22",[]],["text/39-22",[]],["component/39-22",[]],["title/39-23",[347,18.266]],["name/39-23",[]],["text/39-23",[]],["component/39-23",[]],["title/39-24",[348,17.08]],["name/39-24",[]],["text/39-24",[]],["component/39-24",[]],["title/39-25",[349,20.901]],["name/39-25",[]],["text/39-25",[]],["component/39-25",[]],["title/39-26",[1226,61.094]],["name/39-26",[]],["text/39-26",[]],["component/39-26",[]],["title/39-27",[347,18.266]],["name/39-27",[]],["text/39-27",[]],["component/39-27",[]],["title/39-28",[348,17.08]],["name/39-28",[]],["text/39-28",[]],["component/39-28",[]],["title/39-29",[349,20.901]],["name/39-29",[]],["text/39-29",[]],["component/39-29",[]],["title/39-30",[1227,61.094]],["name/39-30",[]],["text/39-30",[]],["component/39-30",[]],["title/39-31",[347,18.266]],["name/39-31",[]],["text/39-31",[]],["component/39-31",[]],["title/39-32",[348,17.08]],["name/39-32",[]],["text/39-32",[]],["component/39-32",[]],["title/39-33",[349,20.901]],["name/39-33",[]],["text/39-33",[]],["component/39-33",[]],["title/39-34",[1228,61.094]],["name/39-34",[]],["text/39-34",[]],["component/39-34",[]],["title/39-35",[347,18.266]],["name/39-35",[]],["text/39-35",[]],["component/39-35",[]],["title/39-36",[348,17.08]],["name/39-36",[]],["text/39-36",[]],["component/39-36",[]],["title/39-37",[349,20.901]],["name/39-37",[]],["text/39-37",[]],["component/39-37",[]],["title/39-38",[1229,61.094]],["name/39-38",[]],["text/39-38",[]],["component/39-38",[]],["title/39-39",[347,18.266]],["name/39-39",[]],["text/39-39",[]],["component/39-39",[]],["title/39-40",[348,17.08]],["name/39-40",[]],["text/39-40",[]],["component/39-40",[]],["title/39-41",[349,20.901]],["name/39-41",[]],["text/39-41",[]],["component/39-41",[]],["title/39",[7,25.881,17,16.095]],["name/39",[1277,0.91]],["text/39",[7,1.592,17,2.987,18,0.328,20,0.35,48,0.315,124,2.495,127,2.441,183,2.576,228,3.569,229,2.081,232,0.422,278,0.466,281,4.9,289,0.493,318,2.968,329,0.333,330,0.333,331,0.333,332,0.333,333,0.333,334,0.333,335,0.331,336,0.333,337,0.333,338,0.333,339,0.333,340,0.333,351,0.473,386,3.778,479,0.519,481,1.179,484,2.476,492,4.863,614,0.479,720,3.077,875,6.175,1016,0.551,1017,3.072,1021,3.438,1022,3.072,1031,3.044,1092,3.332,1094,1.281,1096,3.572,1100,4.728,1154,0.551,1174,4.501,1230,0.668,1231,0.668,1232,0.668,1233,0.668,1234,1.269,1235,0.668,1236,0.668,1237,0.668,1238,0.668,1239,0.668,1240,0.668,1278,0.708]],["component/39",[17,0.285]],["title/40-1",[0,31.598]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[486,43.206]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40-3",[347,18.266]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["title/40-4",[348,17.08]],["name/40-4",[]],["text/40-4",[]],["component/40-4",[]],["title/40-5",[349,20.901]],["name/40-5",[]],["text/40-5",[]],["component/40-5",[]],["title/40",[486,43.206]],["name/40",[486,0.56]],["text/40",[17,2.596,18,1.315,48,1.266,112,2.211,124,1.483,127,1.848,158,1.589,178,2.938,212,1.764,233,1.764,318,1.576,329,1.338,330,1.338,331,1.338,332,1.338,333,1.338,334,1.338,335,1.33,336,1.338,337,1.338,338,1.338,339,1.338,340,1.338,360,2.164,361,3.313,371,3.007,386,2.46,466,1.764,483,3.834,486,6.287,488,3.261,489,3.428,491,1.826,695,1.98,700,1.727,720,2.121,875,4.342,915,2.263,1017,1.826,1022,1.826,1031,1.617,1101,2.081,1241,2.682,1242,4.417,1243,4.417,1244,4.417,1245,2.682]],["component/40",[17,0.285]],["title/41-1",[0,31.598]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[1246,61.094]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[347,18.266]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[348,17.08]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[349,20.901]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[1247,61.094]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[347,18.266]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41-8",[348,17.08]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["title/41-9",[349,20.901]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["title/41",[17,16.095,1248,36.895]],["name/41",[1279,0.91]],["text/41",[2,0.965,7,0.64,17,2.802,18,0.543,35,0.805,64,2.884,98,2.073,112,0.913,124,1.124,158,1.672,181,1.995,207,0.713,223,2.716,226,2.583,229,1.338,232,0.699,262,1.812,273,1.438,299,0.875,318,1.195,329,0.552,330,0.552,331,0.552,332,0.552,333,0.552,334,0.552,335,0.549,336,0.552,337,0.552,338,0.552,339,0.552,340,0.552,360,0.893,361,0.83,371,4.398,386,1.948,414,0.913,420,0.875,446,1.812,474,1.608,481,1.324,484,1.195,491,1.921,492,1.963,511,1.385,556,0.859,574,1.438,695,2.083,700,1.817,720,1.608,749,3.737,751,1.608,864,1.872,875,3.637,915,1.716,932,1.716,1015,1.502,1017,1.385,1020,0.817,1021,1.385,1022,1.385,1031,1.226,1094,1.438,1096,0.783,1101,2.19,1126,1.812,1169,0.986,1198,1.812,1248,6.559,1249,1.812,1250,3.118,1251,1.812,1252,4.604,1253,3.499,1254,2.821,1255,2.034,1256,2.034,1257,2.034,1258,1.107,1259,2.034,1260,2.034,1261,1.107,1262,2.034,1263,2.034]],["component/41",[17,0.285]],["title/42-1",[0,31.598]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[318,26.301,482,30.467]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[349,20.901]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[1250,54.443]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42-5",[347,18.266]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["title/42-6",[348,17.08]],["name/42-6",[]],["text/42-6",[]],["component/42-6",[]],["title/42-7",[2,28.986]],["name/42-7",[]],["text/42-7",[]],["component/42-7",[]],["title/42-8",[349,20.901]],["name/42-8",[]],["text/42-8",[]],["component/42-8",[]],["title/42-9",[1264,54.443]],["name/42-9",[]],["text/42-9",[]],["component/42-9",[]],["title/42-10",[347,18.266]],["name/42-10",[]],["text/42-10",[]],["component/42-10",[]],["title/42-11",[348,17.08]],["name/42-11",[]],["text/42-11",[]],["component/42-11",[]],["title/42-12",[2,28.986]],["name/42-12",[]],["text/42-12",[]],["component/42-12",[]],["title/42-13",[482,30.467,1031,26.976]],["name/42-13",[]],["text/42-13",[]],["component/42-13",[]],["title/42-14",[349,20.901]],["name/42-14",[]],["text/42-14",[]],["component/42-14",[]],["title/42-15",[1251,54.443]],["name/42-15",[]],["text/42-15",[]],["component/42-15",[]],["title/42-16",[347,18.266]],["name/42-16",[]],["text/42-16",[]],["component/42-16",[]],["title/42-17",[348,17.08]],["name/42-17",[]],["text/42-17",[]],["component/42-17",[]],["title/42-18",[2,28.986]],["name/42-18",[]],["text/42-18",[]],["component/42-18",[]],["title/42-19",[349,20.901]],["name/42-19",[]],["text/42-19",[]],["component/42-19",[]],["title/42-20",[1265,54.443]],["name/42-20",[]],["text/42-20",[]],["component/42-20",[]],["title/42-21",[347,18.266]],["name/42-21",[]],["text/42-21",[]],["component/42-21",[]],["title/42-22",[348,17.08]],["name/42-22",[]],["text/42-22",[]],["component/42-22",[]],["title/42-23",[2,28.986]],["name/42-23",[]],["text/42-23",[]],["component/42-23",[]],["title/42",[482,41.591]],["name/42",[482,0.539]],["text/42",[7,0.431,17,3.043,18,1.884,19,0.527,26,0.995,31,1.039,36,0.915,40,1.938,42,0.879,44,0.936,48,2.877,124,0.778,126,0.936,136,1.682,149,0.906,158,0.834,162,1.722,169,1.765,174,0.614,175,0.906,181,0.995,188,0.936,212,0.925,229,0.925,232,1.261,233,0.925,234,0.855,235,0.578,279,0.507,281,1.788,291,0.527,318,2.851,329,0.372,330,0.372,331,0.372,332,0.372,333,0.372,334,0.372,335,0.698,336,0.372,337,0.372,338,0.372,339,0.372,340,0.372,343,1.765,345,0.925,349,0.481,370,1.009,374,2.47,379,1.813,386,1.918,466,1.664,481,0.915,482,3.678,488,1.039,489,1.092,492,2.156,497,1.475,498,0.48,501,2.318,502,1.039,508,0.48,511,3.846,514,1.58,520,0.946,571,1.023,574,0.995,576,1.55,662,1.023,673,1.16,686,1.647,693,1.16,725,0.969,743,0.534,1020,2.544,1021,1.722,1031,2.924,1066,1.039,1074,1.092,1075,1.092,1076,1.092,1077,1.092,1078,1.092,1079,1.039,1080,1.039,1081,1.039,1082,1.039,1083,1.039,1084,1.039,1085,1.039,1086,1.092,1087,1.092,1088,1.55,1094,0.995,1095,1.254,1113,0.614,1114,1.254,1170,0.664,1172,0.664,1249,1.254,1264,3.425,1265,3.425,1266,0.745,1267,1.407,1268,1.407,1269,1.407,1270,1.407,1271,0.745,1272,0.745,1273,0.745,1274,0.745]],["component/42",[17,0.285]],["title/43-1",[0,31.598]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[1,42.775,2,21.233]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[3,39.881,4,31.649]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[5,54.443]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43-5",[6,28.821,7,25.881]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["title/43-6",[8,27.405,9,23.755,10,24.037]],["name/43-6",[]],["text/43-6",[]],["component/43-6",[]],["title/43-7",[11,31.465,12,27.405,13,29.109]],["name/43-7",[]],["text/43-7",[]],["component/43-7",[]],["title/43",[14,36.895,15,33.042]],["name/43",[15,0.585]],["text/43",[2,0.857,3,1.409,4,2.78,5,2.661,6,0.709,7,0.915,8,1.403,9,1.501,10,2.15,11,0.981,12,1.57,13,1.304,14,0.475,15,0.425,16,0.295,17,2.237,18,0.775,19,0.952,20,0.828,21,0.981,22,0.752,23,0.513,24,0.263,25,0.295,26,0.778,27,0.981,28,0.981,29,0.295,30,0.576,31,0.218,32,0.53,33,0.295,34,0.576,35,1.15,36,0.192,37,0.295,38,0.295,39,0.844,40,0.19,41,0.229,42,0.36,43,0.295,44,0.196,45,0.295,46,0.295,47,0.271,48,1.569,49,0.263,50,0.87,51,0.263,52,0.295,53,0.295,54,0.243,55,0.295,56,0.447,57,0.208,58,0.201,59,0.576,60,0.295,61,0.263,62,0.295,63,0.295,64,0.696,65,0.576,66,0.295,67,0.295,68,1.668,69,0.263,70,0.513,71,0.752,72,0.295,73,0.238,74,0.295,75,0.263,76,0.513,77,0.513,78,0.214,79,0.263,80,0.263,81,0.295,82,0.214,83,0.513,84,0.455,85,0.263,86,0.513,87,0.455,88,0.295,89,0.295,90,0.271,91,1.61,92,0.295,93,0.295,94,0.295,95,0.854,96,1.11,97,0.576,98,3.858,99,1.409,100,2.166,101,3.104,102,0.513,103,0.576,104,0.844,105,0.844,106,0.844,107,0.844,108,0.844,109,0.55,110,0.576,111,0.576,112,0.243,113,0.576,114,0.844,115,0.295,116,0.576,117,0.844,118,0.576,119,0.576,120,2.073,121,0.576,122,1.346,123,0.576,124,0.318,125,0.486,126,0.732,127,0.397,128,0.295,129,0.295,130,0.295,131,0.576,132,0.271,133,0.295,134,0.464,135,0.295,136,0.561,137,0.439,138,0.513,139,0.844,140,1.101,141,0.464,142,0.282,143,0.271,144,0.295,145,0.295,146,0.263,147,0.295,148,0.576,149,0.371,150,0.295,151,0.929,152,0.295,153,0.576,154,0.53,155,0.263,156,0.576,157,0.263,158,0.175,159,0.263,160,0.576,161,1.803,162,0.392,163,0.513,164,0.295,165,0.295,166,0.255,167,0.777,168,0.295,169,0.206,170,0.513,171,0.752,172,0.243,173,0.295,174,0.907,175,0.371,176,0.475,177,0.447,178,0.383,179,0.731,180,0.513,181,0.778,182,2.338,183,0.419,184,0.263,185,0.844,186,0.475,187,1.346,188,0.732,189,1.013,190,1.013,191,0.295,192,0.295,193,0.295,194,0.513,195,0.844,196,0.271,197,0.271,198,1.582,199,2.023,200,1.708,201,0.752,202,0.844,203,0.295,204,0.282,205,0.752,206,0.513,207,1.303,208,0.295,209,0.513,210,0.712,211,0.295,212,0.555,213,0.243,214,0.295,215,0.295,216,0.295,217,0.238,218,0.576,219,0.295,220,1.2,221,0.513,222,0.576,223,0.229,224,0.447,225,0.263,226,0.218,227,1.409,228,0.233,229,0.379,230,0.576,231,0.576,232,0.186,233,0.555,234,0.179,235,0.655,236,0.712,237,0.295,238,0.447,239,0.263,240,0.263,241,0.513,242,0.513,243,2.324,244,1.287,245,1.287,246,1.582,247,1.807,248,1.807,249,0.263,250,0.295,251,0.295,252,0.295,253,0.295,254,1.346,255,0.225,256,0.229,257,0.295,258,0.295,259,0.295,260,0.229,261,0.513,262,0.263,263,0.243,264,0.282,265,0.263,266,0.295,267,0.295,268,0.981,269,0.576,270,0.295,271,0.295,272,0.263,273,0.407,274,0.295,275,0.295,276,0.55,277,0.295,278,0.589,279,0.575,280,0.295,281,0.208,282,0.295,283,0.576,284,0.255,285,0.295,286,0.263,287,0.295,288,0.295,289,0.218,290,0.206,291,0.208,292,0.576,293,0.295,294,0.576,295,0.295,296,0.295,297,0.295,298,0.295,299,0.233,300,1.456,301,1.101,302,0.295,303,0.295,304,0.295,305,0.271,306,0.295,307,0.295,308,0.295,309,0.295,310,0.233,311,0.576,312,0.576,313,0.576,314,0.576,315,0.271,316,0.295,317,0.576,318,0.173,319,0.249,320,0.295,321,0.576,322,0.295,323,0.295,324,0.295,325,0.295,326,0.295,327,1.052,328,0.295,329,0.147,330,0.147,331,0.147,332,0.147,333,0.147,334,0.147,335,0.146,336,0.147,337,0.147,338,0.147,339,0.147,340,0.147]],["component/43",[17,0.285]],["title/44",[]],["name/44",[341,0.668]],["text/44",[]],["component/44",[17,0.285]],["title/45-1",[0,31.598]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[342,47.418]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45-3",[343,31.235,344,42.775]],["name/45-3",[]],["text/45-3",[]],["component/45-3",[]],["title/45-4",[345,29.439,346,42.775]],["name/45-4",[]],["text/45-4",[]],["component/45-4",[]],["title/45-5",[347,18.266]],["name/45-5",[]],["text/45-5",[]],["component/45-5",[]],["title/45-6",[348,17.08]],["name/45-6",[]],["text/45-6",[]],["component/45-6",[]],["title/45-7",[349,20.901]],["name/45-7",[]],["text/45-7",[]],["component/45-7",[]],["title/45",[17,21.973]],["name/45",[17,0.285]],["text/45",[0,0.612,17,3.217,18,0.581,20,1.565,32,1.09,36,0.771,42,0.74,48,2.689,73,1.746,82,0.861,87,0.936,96,0.976,98,4.271,124,1.196,137,0.903,141,4.265,149,0.763,167,1.09,175,0.763,179,1.025,207,0.763,217,0.955,228,2.362,232,0.747,234,0.72,236,0.999,255,1.65,256,1.679,278,1.51,290,2.575,329,0.591,330,0.591,331,0.591,332,0.591,333,0.591,334,0.591,335,0.587,336,0.591,337,0.591,338,0.591,339,0.591,340,0.591,342,4.103,343,4.233,344,6.396,345,3.748,346,1.132,350,1.254,351,0.837,352,1.254,353,1.826,354,2.292,355,1.254,356,1.09,357,1.254,358,1.254,359,1.254,360,0.955,361,2.24,362,1.055,363,3.287,364,1.025,365,2.292,366,1.055,367,1.254,368,2.292,369,1.254,370,2.142,371,0.806,372,1.254,373,1.254,374,0.849,375,2.292,376,0.999,377,1.254,378,2.292,379,0.849,380,3.164,381,1.254,382,1.254,383,2.292,384,1.254,385,3.164,386,1.205,387,2.292,388,1.09,389,1.254,390,1.254,391,1.09,392,0.936]],["component/45",[17,0.285]],["title/46-1",[249,22.126,393,23.732,394,24.829,395,24.829,396,24.829]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46",[397,50.366]],["name/46",[397,0.653]],["text/46",[18,3.23,329,3.286,330,3.286,331,3.286,332,3.286,333,3.286,334,3.286,335,3.267,336,3.286,337,3.286,338,3.286,339,3.286,340,3.286]],["component/46",[17,0.285]],["title/47-1",[398,61.094]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47-2",[82,44.435]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["title/47-3",[399,54.443]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["title/47",[17,10.486,18,14.296,19,20.619,20,15.271]],["name/47",[400,0.706]],["text/47",[14,1.112,15,0.996,17,1.466,18,1.632,19,3.333,20,2.468,21,1.202,23,1.202,24,1.202,27,1.202,28,1.202,35,1.771,36,0.878,41,1.047,42,0.843,48,1.149,49,1.202,50,1.067,54,1.112,58,0.918,61,1.202,68,1.112,69,2.17,70,2.17,71,1.202,75,1.202,76,1.202,77,1.202,78,0.981,79,2.17,80,1.202,84,1.067,137,1.029,138,1.202,146,2.17,149,1.568,155,1.202,157,1.202,182,1.202,234,0.82,235,1.047,268,1.202,329,0.673,330,0.673,331,0.673,332,1.661,333,1.215,334,1.215,335,0.669,336,0.673,337,1.215,338,1.215,339,1.215,340,1.215,397,1.112,399,1.202,401,1.202,402,1.202,403,2.435,404,1.349,405,2.435,406,1.349,407,1.349,408,1.349,409,1.349,410,1.349,411,1.349,412,1.349,413,1.349,414,1.112,415,1.202,416,1.202,417,1.012,418,1.349,419,1.349,420,1.067,421,1.349,422,1.349,423,1.242,424,1.349,425,1.349,426,2.17,427,1.349,428,1.349,429,1.349,430,0.774,431,1.349,432,1.202,433,1.349,434,1.349,435,1.349,436,1.047,437,0.813,438,2.435,439,1.349,440,1.202,441,2.435,442,1.112,443,1.349,444,1.349,445,2.435,446,1.202,447,1.349,448,1.349,449,1.349,450,1.349,451,1.349,452,1.349,453,1.202,454,1.112,455,1.349,456,1.349,457,2.435,458,1.202,459,1.349,460,1.202,461,1.349,462,1.242,463,1.349,464,2.967,465,2.967,466,0.887,467,1.349,468,1.202,469,0.918,470,1.349,471,1.349,472,1.349,473,1.349,474,1.067,475,1.349,476,1.349,477,1.349,478,1.289]],["component/47",[17,0.285]],["title/48-1",[0,31.598]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48",[234,37.152]],["name/48",[234,0.482]],["text/48",[6,1.87,7,2.726,9,1.105,10,1.977,17,3.239,18,0.806,20,0.861,36,1.069,40,1.058,41,1.275,44,1.093,48,1.371,57,2.054,78,2.839,82,1.195,95,1.275,120,1.213,126,1.093,127,1.132,134,1.325,162,1.118,175,1.058,176,1.354,178,1.093,212,2.568,234,2.867,284,1.423,290,2.027,329,0.82,330,0.82,331,0.82,332,0.82,333,0.82,334,0.82,335,1.44,336,0.82,337,0.82,338,0.82,339,0.82,340,0.82,351,1.162,392,1.299,417,1.232,479,1.275,480,1.354,481,1.069,482,1.977,483,2.657,484,1.707,485,2.144,486,2.054,487,2.588,488,3.481,489,2.254,490,1.423,491,1.118,492,0.922,493,1.512,494,1.464,495,1.213,496,1.423,497,1.213,498,1.058,499,2.588,500,1.354,501,1.954,502,1.213,503,1.464,504,1.354,505,1.464,506,1.464,507,1.643,508,1.058,509,1.643,510,1.643,511,1.118,512,2.394,513,1.643,514,1.299,515,1.643,516,1.643,517,1.643,518,1.643,519,1.643,520,1.105,521,1.643,522,1.643,523,1.643,524,1.387,525,1.643,526,1.464]],["component/48",[17,0.285]],["title/49-1",[430,35.056]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49-2",[527,54.443]],["name/49-2",[]],["text/49-2",[]],["component/49-2",[]],["title/49-3",[528,54.443]],["name/49-3",[]],["text/49-3",[]],["component/49-3",[]],["title/49-4",[529,37.834]],["name/49-4",[]],["text/49-4",[]],["component/49-4",[]],["title/49-5",[20,23.44,430,25.68]],["name/49-5",[]],["text/49-5",[]],["component/49-5",[]],["title/49-6",[530,54.443]],["name/49-6",[]],["text/49-6",[]],["component/49-6",[]],["title/49-7",[20,18.494,430,20.26,437,21.283]],["name/49-7",[]],["text/49-7",[]],["component/49-7",[]],["title/49-8",[437,26.976,529,27.715]],["name/49-8",[]],["text/49-8",[]],["component/49-8",[]],["title/49-9",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/49-9",[]],["text/49-9",[]],["component/49-9",[]],["title/49-10",[48,21.12,531,39.881]],["name/49-10",[]],["text/49-10",[]],["component/49-10",[]],["title/49-11",[4,43.206]],["name/49-11",[]],["text/49-11",[]],["component/49-11",[]],["title/49-12",[20,18.494,430,20.26,437,21.283]],["name/49-12",[]],["text/49-12",[]],["component/49-12",[]],["title/49-13",[437,26.976,529,27.715]],["name/49-13",[]],["text/49-13",[]],["component/49-13",[]],["title/49-14",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/49-14",[]],["text/49-14",[]],["component/49-14",[]],["title/49-15",[19,20.619,417,21.868,454,24.036,532,25.982]],["name/49-15",[]],["text/49-15",[]],["component/49-15",[]],["title/49-16",[533,54.443]],["name/49-16",[]],["text/49-16",[]],["component/49-16",[]],["title/49-17",[4,20.619,98,17.277,534,25.982,535,25.982]],["name/49-17",[]],["text/49-17",[]],["component/49-17",[]],["title/49-18",[20,13.005,430,14.247,437,14.967,536,22.126,537,22.126]],["name/49-18",[]],["text/49-18",[]],["component/49-18",[]],["title/49-19",[437,26.976,529,27.715]],["name/49-19",[]],["text/49-19",[]],["component/49-19",[]],["title/49-20",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/49-20",[]],["text/49-20",[]],["component/49-20",[]],["title/49-21",[48,16.663,538,29.109,539,29.109]],["name/49-21",[]],["text/49-21",[]],["component/49-21",[]],["title/49-22",[540,54.443]],["name/49-22",[]],["text/49-22",[]],["component/49-22",[]],["title/49-23",[20,18.494,430,20.26,437,21.283]],["name/49-23",[]],["text/49-23",[]],["component/49-23",[]],["title/49-24",[437,26.976,529,27.715]],["name/49-24",[]],["text/49-24",[]],["component/49-24",[]],["title/49-25",[48,13.76,58,19.849,469,19.849,529,18.056]],["name/49-25",[]],["text/49-25",[]],["component/49-25",[]],["title/49-26",[48,16.663,538,29.109,539,29.109]],["name/49-26",[]],["text/49-26",[]],["component/49-26",[]],["title/49-27",[2,16.752,42,22.073,186,29.109]],["name/49-27",[]],["text/49-27",[]],["component/49-27",[]],["title/49-28",[42,22.073,469,24.037,541,31.465]],["name/49-28",[]],["text/49-28",[]],["component/49-28",[]],["title/49",[436,34.735,437,26.976]],["name/49",[436,0.615]],["text/49",[2,2.031,4,1.248,12,2.401,13,0.275,15,0.246,17,1.871,18,0.739,19,0.459,20,2.081,41,0.259,42,4.088,48,1.636,50,0.514,51,0.846,54,0.275,56,0.259,58,1.83,68,0.783,73,0.766,83,0.297,84,0.751,85,0.297,86,1.1,87,0.514,91,1.342,95,0.259,98,1.192,127,0.654,136,0.632,151,0.281,159,1.573,163,0.297,171,0.297,172,0.535,175,0.215,176,0.783,177,0.259,178,0.222,181,0.459,186,0.275,200,0.281,206,0.297,207,0.215,226,0.246,233,0.991,234,0.203,236,1.49,238,0.259,240,0.297,242,0.297,260,0.259,265,0.579,278,0.453,279,0.227,290,0.663,291,0.873,299,0.264,310,0.264,329,0.166,330,0.166,331,0.166,332,0.166,333,0.166,334,0.166,335,0.165,336,0.166,337,0.324,338,0.166,339,0.166,340,0.166,341,0.281,364,0.289,391,1.386,392,0.264,415,0.846,417,1.13,426,0.579,430,1.013,432,3.245,436,0.259,437,3.136,453,0.297,454,1.455,458,0.846,460,0.297,464,1.573,465,0.297,468,1.573,469,2.36,491,0.442,501,0.437,502,0.246,524,0.281,527,0.579,528,0.846,529,3.557,530,0.579,531,0.846,532,1.1,533,0.846,534,0.579,535,0.297,536,1.342,537,0.846,538,1.018,539,1.242,540,1.1,541,0.579,542,0.949,543,0.333,544,0.598,545,0.333,546,0.579,547,0.307,548,1.765,549,0.333,550,2.012,551,0.333,552,0.649,553,0.333,554,0.333,555,0.649,556,0.504,557,0.333,558,0.949,559,0.333,560,0.333,561,0.333,562,0.333,563,0.333,564,0.949,565,0.949,566,0.333,567,0.649,568,0.333,569,0.333,570,0.333,571,0.898,572,0.579,573,0.949,574,0.671,575,0.949,576,1.744,577,0.649,578,0.649,579,1.506,580,0.649,581,0.333,582,0.649,583,0.649,584,0.649,585,0.649,586,1.235,587,0.333,588,0.333,589,0.333,590,0.333,591,2.473,592,0.333,593,0.846,594,4.567,595,5.428,596,2.248,597,1.506,598,0.949,599,0.649,600,0.333,601,0.949,602,0.319,603,0.333,604,0.333,605,0.333,606,0.333,607,0.333,608,0.333,609,0.333,610,0.649,611,0.269,612,0.333,613,0.649,614,0.466,615,0.333,616,0.333,617,2.689,618,0.333,619,0.949,620,0.333,621,0.333,622,0.333,623,0.333,624,0.333,625,0.333,626,0.333,627,0.333,628,0.307,629,0.949,630,0.333,631,0.649,632,0.333,633,0.333,634,0.333,635,0.319,636,0.649,637,0.649,638,0.333,639,0.333,640,0.649,641,0.649,642,0.333,643,0.649,644,0.333,645,0.333,646,0.649,647,0.333,648,0.333,649,0.333,650,0.333,651,0.333,652,0.333,653,0.333,654,0.333,655,0.333,656,0.333,657,1.765,658,1.765,659,1.506,660,0.649,661,0.649,662,0.242,663,0.333,664,1.506,665,1.506,666,0.333,667,0.949,668,0.333,669,0.504,670,0.333,671,0.333,672,0.333,673,0.275,674,0.333,675,0.333,676,0.333,677,0.333,678,0.333,679,0.333,680,1.235,681,0.333,682,0.333,683,0.333,684,0.333,685,0.333,686,0.275,687,0.333,688,0.333,689,0.333,690,0.333,691,0.333,692,0.333,693,0.275,694,0.333,695,0.246,696,0.333,697,0.333]],["component/49",[17,0.285]],["title/50-1",[0,31.598]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[347,18.266]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[348,17.08]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50-4",[349,20.901]],["name/50-4",[]],["text/50-4",[]],["component/50-4",[]],["title/50-5",[2,28.986]],["name/50-5",[]],["text/50-5",[]],["component/50-5",[]],["title/50-6",[698,25.315,699,27.405,700,22.739]],["name/50-6",[]],["text/50-6",[]],["component/50-6",[]],["title/50",[1248,50.366]],["name/50",[707,0.839]],["text/50",[6,1.228,7,1.103,8,2.324,9,1.283,12,1.782,17,0.194,20,0.282,40,0.347,48,0.487,50,0.426,82,0.392,84,2.617,87,0.426,98,1.961,100,2.669,101,1.325,124,0.298,125,0.454,126,0.687,127,4.383,134,0.434,141,0.434,149,0.347,158,0.319,166,0.466,178,0.358,179,0.466,189,0.496,190,4.449,194,0.48,196,5.306,197,4.036,200,1.255,210,0.454,233,0.354,238,2.324,243,0.987,244,0.987,245,0.987,255,0.787,256,0.801,260,0.801,261,0.92,286,0.48,290,0.376,305,0.496,310,0.426,319,0.454,327,0.987,335,1.641,345,1.748,348,0.289,361,0.404,362,0.48,371,1.012,386,0.3,414,0.444,423,0.496,484,0.607,498,2.824,501,0.362,508,1.712,520,0.362,593,0.48,614,0.386,628,0.496,635,0.987,698,5.864,699,5.495,700,0.958,702,1.369,708,0.894,709,1.369,710,0.57,711,4.385,712,0.57,713,0.987,714,0.426,715,0.466,716,0.987,717,0.466,719,0.538,725,0.711,726,0.538,727,0.57,728,1.032,729,0.57,730,0.57,731,0.57,732,2.658,733,2.658,734,0.57,735,2.02,736,0.57,737,0.496,738,0.57,739,0.57,740,1.093,741,1.093,742,1.093,743,1.906,744,0.57,745,0.57,749,0.762,750,0.538,752,0.57,753,0.57,754,0.496,755,0.57,756,0.57,757,0.57,758,0.57,759,0.57,760,0.57,761,0.57,762,0.57,763,0.57,764,0.57,765,0.57,766,0.57,768,0.57,769,0.57,770,0.57,771,0.57,772,0.57,773,0.57,774,0.57,775,0.57,776,0.57,777,0.57,778,0.57,779,0.57,780,0.538,781,0.538,782,1.421,783,1.421,784,0.57,785,0.57,786,0.57,787,0.57,788,0.57,789,0.57,790,0.496,791,0.57,792,0.57,793,0.57,794,0.538,795,1.093,796,0.57,797,0.57,798,0.57,799,1.032,800,0.57,801,0.57,802,0.57,803,0.57,804,0.57,805,2.432,806,0.57,807,0.57,808,0.57,809,0.57,810,0.57,1280,0.619,1281,1.186,1282,1.186,1283,1.186,1284,1.186,1285,1.186,1286,1.186,1287,1.186,1288,1.186,1289,1.186,1290,1.186,1291,1.186,1292,1.186,1293,1.186,1294,1.186,1295,1.186,1296,1.186,1297,1.186]],["component/50",[17,0.285]],["title/51-1",[0,31.598]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51-2",[35,44.435]],["name/51-2",[]],["text/51-2",[]],["component/51-2",[]],["title/51-3",[342,47.418]],["name/51-3",[]],["text/51-3",[]],["component/51-3",[]],["title/51-4",[347,18.266]],["name/51-4",[]],["text/51-4",[]],["component/51-4",[]],["title/51-5",[348,17.08]],["name/51-5",[]],["text/51-5",[]],["component/51-5",[]],["title/51-6",[349,20.901]],["name/51-6",[]],["text/51-6",[]],["component/51-6",[]],["title/51-7",[611,49.291]],["name/51-7",[]],["text/51-7",[]],["component/51-7",[]],["title/51-8",[347,18.266]],["name/51-8",[]],["text/51-8",[]],["component/51-8",[]],["title/51-9",[348,17.08]],["name/51-9",[]],["text/51-9",[]],["component/51-9",[]],["title/51-10",[349,20.901]],["name/51-10",[]],["text/51-10",[]],["component/51-10",[]],["title/51-11",[2,28.986]],["name/51-11",[]],["text/51-11",[]],["component/51-11",[]],["title/51-12",[860,61.094]],["name/51-12",[]],["text/51-12",[]],["component/51-12",[]],["title/51-13",[347,18.266]],["name/51-13",[]],["text/51-13",[]],["component/51-13",[]],["title/51-14",[348,17.08]],["name/51-14",[]],["text/51-14",[]],["component/51-14",[]],["title/51-15",[349,20.901]],["name/51-15",[]],["text/51-15",[]],["component/51-15",[]],["title/51-16",[371,41.591]],["name/51-16",[]],["text/51-16",[]],["component/51-16",[]],["title/51-17",[347,18.266]],["name/51-17",[]],["text/51-17",[]],["component/51-17",[]],["title/51-18",[348,17.08]],["name/51-18",[]],["text/51-18",[]],["component/51-18",[]],["title/51-19",[349,20.901]],["name/51-19",[]],["text/51-19",[]],["component/51-19",[]],["title/51-20",[698,32.087,699,34.735]],["name/51-20",[]],["text/51-20",[]],["component/51-20",[]],["title/51-21",[861,58.394]],["name/51-21",[]],["text/51-21",[]],["component/51-21",[]],["title/51",[698,43.803]],["name/51",[698,0.568]],["text/51",[17,1.27,18,0.287,20,0.307,36,0.381,40,0.377,44,0.39,47,2.271,48,1.164,87,0.463,90,0.539,95,0.455,96,0.483,98,3.765,124,0.324,126,1.069,127,0.771,132,0.539,134,0.903,136,0.745,137,0.447,141,3.095,143,0.539,151,0.495,154,1.03,158,0.952,166,0.507,174,0.483,217,1.297,232,0.37,255,2.172,256,0.869,273,0.414,278,0.781,290,2.464,299,0.463,300,1.03,315,1.03,329,0.292,330,0.292,331,0.292,332,0.292,333,0.292,334,0.292,335,0.291,336,0.292,337,0.292,338,0.292,339,0.292,340,0.292,341,0.495,342,3.602,345,2.711,351,0.792,353,0.495,356,1.48,360,0.473,361,1.851,362,0.522,363,1.432,366,1.432,371,2.403,386,1.144,388,2.947,417,1.206,420,0.463,462,0.539,474,0.463,490,2.773,493,0.539,501,0.394,506,1.432,514,0.885,520,0.753,524,0.495,547,0.539,571,0.426,611,0.903,698,6.133,699,3.957,700,0.377,702,1.892,703,1.964,704,1.964,708,0.507,709,1.03,713,1.536,714,0.463,715,0.969,716,2.358,717,1.392,725,0.771,782,1.07,783,0.56,814,1.607,815,1.607,816,1.607,817,1.607,818,1.607,819,1.607,821,0.586,822,0.586,861,1.536,862,1.186,863,0.621,864,0.539,865,1.186,866,0.621,867,3.53,868,1.186,869,1.186,870,0.621,871,0.539,872,0.621,873,0.621,874,0.621,875,0.39,876,0.621,877,1.186,878,0.539,879,0.621,880,0.621,881,0.621,882,0.621,883,0.621,884,0.621,885,1.186,886,1.186,887,1.186,888,0.621,889,1.186,890,1.186,891,0.621,892,1.186,893,0.621,894,0.621,895,0.621,896,0.621,901,1.831,902,1.607,904,0.621,908,2.177,910,2.613,911,0.621,912,0.621,913,0.621,914,1.186,915,0.495,916,0.621,917,1.186,918,0.586,919,0.621,921,0.621,922,0.621,923,0.621,924,0.621,925,0.621,926,0.621,927,0.539,928,0.621,929,1.356,930,0.621,931,0.621,932,1.356,933,1.186,934,0.621,935,0.621,936,0.621,937,0.621,938,0.621,939,1.03,940,0.621,941,0.621,942,0.621,943,0.621,944,0.522,945,0.621,1298,0.673]],["component/51",[17,0.285]],["title/52-1",[0,31.598]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52-2",[999,61.094]],["name/52-2",[]],["text/52-2",[]],["component/52-2",[]],["title/52-3",[347,18.266]],["name/52-3",[]],["text/52-3",[]],["component/52-3",[]],["title/52-4",[348,17.08]],["name/52-4",[]],["text/52-4",[]],["component/52-4",[]],["title/52-5",[349,20.901]],["name/52-5",[]],["text/52-5",[]],["component/52-5",[]],["title/52-6",[2,28.986]],["name/52-6",[]],["text/52-6",[]],["component/52-6",[]],["title/52-7",[790,56.238]],["name/52-7",[]],["text/52-7",[]],["component/52-7",[]],["title/52-8",[347,18.266]],["name/52-8",[]],["text/52-8",[]],["component/52-8",[]],["title/52-9",[348,17.08]],["name/52-9",[]],["text/52-9",[]],["component/52-9",[]],["title/52-10",[349,20.901]],["name/52-10",[]],["text/52-10",[]],["component/52-10",[]],["title/52-11",[319,51.561]],["name/52-11",[]],["text/52-11",[]],["component/52-11",[]],["title/52-12",[347,18.266]],["name/52-12",[]],["text/52-12",[]],["component/52-12",[]],["title/52-13",[348,17.08]],["name/52-13",[]],["text/52-13",[]],["component/52-13",[]],["title/52-14",[349,20.901]],["name/52-14",[]],["text/52-14",[]],["component/52-14",[]],["title/52-15",[1000,61.094]],["name/52-15",[]],["text/52-15",[]],["component/52-15",[]],["title/52-16",[347,18.266]],["name/52-16",[]],["text/52-16",[]],["component/52-16",[]],["title/52-17",[348,17.08]],["name/52-17",[]],["text/52-17",[]],["component/52-17",[]],["title/52-18",[349,20.901]],["name/52-18",[]],["text/52-18",[]],["component/52-18",[]],["title/52-19",[1001,61.094]],["name/52-19",[]],["text/52-19",[]],["component/52-19",[]],["title/52-20",[347,18.266]],["name/52-20",[]],["text/52-20",[]],["component/52-20",[]],["title/52-21",[348,17.08]],["name/52-21",[]],["text/52-21",[]],["component/52-21",[]],["title/52-22",[349,20.901]],["name/52-22",[]],["text/52-22",[]],["component/52-22",[]],["title/52-23",[2,28.986]],["name/52-23",[]],["text/52-23",[]],["component/52-23",[]],["title/52-24",[1002,61.094]],["name/52-24",[]],["text/52-24",[]],["component/52-24",[]],["title/52-25",[347,18.266]],["name/52-25",[]],["text/52-25",[]],["component/52-25",[]],["title/52-26",[348,17.08]],["name/52-26",[]],["text/52-26",[]],["component/52-26",[]],["title/52-27",[349,20.901]],["name/52-27",[]],["text/52-27",[]],["component/52-27",[]],["title/52-28",[1003,61.094]],["name/52-28",[]],["text/52-28",[]],["component/52-28",[]],["title/52-29",[347,18.266]],["name/52-29",[]],["text/52-29",[]],["component/52-29",[]],["title/52-30",[348,17.08]],["name/52-30",[]],["text/52-30",[]],["component/52-30",[]],["title/52-31",[349,20.901]],["name/52-31",[]],["text/52-31",[]],["component/52-31",[]],["title/52-32",[1004,61.094]],["name/52-32",[]],["text/52-32",[]],["component/52-32",[]],["title/52-33",[347,18.266]],["name/52-33",[]],["text/52-33",[]],["component/52-33",[]],["title/52-34",[348,17.08]],["name/52-34",[]],["text/52-34",[]],["component/52-34",[]],["title/52-35",[349,20.901]],["name/52-35",[]],["text/52-35",[]],["component/52-35",[]],["title/52-36",[1005,61.094]],["name/52-36",[]],["text/52-36",[]],["component/52-36",[]],["title/52-37",[347,18.266]],["name/52-37",[]],["text/52-37",[]],["component/52-37",[]],["title/52-38",[348,17.08]],["name/52-38",[]],["text/52-38",[]],["component/52-38",[]],["title/52-39",[349,20.901]],["name/52-39",[]],["text/52-39",[]],["component/52-39",[]],["title/52-40",[1006,61.094]],["name/52-40",[]],["text/52-40",[]],["component/52-40",[]],["title/52-41",[347,18.266]],["name/52-41",[]],["text/52-41",[]],["component/52-41",[]],["title/52-42",[348,17.08]],["name/52-42",[]],["text/52-42",[]],["component/52-42",[]],["title/52-43",[349,20.901]],["name/52-43",[]],["text/52-43",[]],["component/52-43",[]],["title/52-44",[1007,61.094]],["name/52-44",[]],["text/52-44",[]],["component/52-44",[]],["title/52-45",[347,18.266]],["name/52-45",[]],["text/52-45",[]],["component/52-45",[]],["title/52-46",[348,17.08]],["name/52-46",[]],["text/52-46",[]],["component/52-46",[]],["title/52-47",[349,20.901]],["name/52-47",[]],["text/52-47",[]],["component/52-47",[]],["title/52-48",[1008,61.094]],["name/52-48",[]],["text/52-48",[]],["component/52-48",[]],["title/52-49",[347,18.266]],["name/52-49",[]],["text/52-49",[]],["component/52-49",[]],["title/52-50",[348,17.08]],["name/52-50",[]],["text/52-50",[]],["component/52-50",[]],["title/52-51",[349,20.901]],["name/52-51",[]],["text/52-51",[]],["component/52-51",[]],["title/52-52",[227,54.443]],["name/52-52",[]],["text/52-52",[]],["component/52-52",[]],["title/52-53",[347,18.266]],["name/52-53",[]],["text/52-53",[]],["component/52-53",[]],["title/52-54",[348,17.08]],["name/52-54",[]],["text/52-54",[]],["component/52-54",[]],["title/52-55",[349,20.901]],["name/52-55",[]],["text/52-55",[]],["component/52-55",[]],["title/52-56",[1009,61.094]],["name/52-56",[]],["text/52-56",[]],["component/52-56",[]],["title/52-57",[347,18.266]],["name/52-57",[]],["text/52-57",[]],["component/52-57",[]],["title/52-58",[348,17.08]],["name/52-58",[]],["text/52-58",[]],["component/52-58",[]],["title/52-59",[349,20.901]],["name/52-59",[]],["text/52-59",[]],["component/52-59",[]],["title/52-60",[1010,61.094]],["name/52-60",[]],["text/52-60",[]],["component/52-60",[]],["title/52-61",[347,18.266]],["name/52-61",[]],["text/52-61",[]],["component/52-61",[]],["title/52-62",[348,17.08]],["name/52-62",[]],["text/52-62",[]],["component/52-62",[]],["title/52-63",[349,20.901]],["name/52-63",[]],["text/52-63",[]],["component/52-63",[]],["title/52-64",[1011,61.094]],["name/52-64",[]],["text/52-64",[]],["component/52-64",[]],["title/52-65",[347,18.266]],["name/52-65",[]],["text/52-65",[]],["component/52-65",[]],["title/52-66",[348,17.08]],["name/52-66",[]],["text/52-66",[]],["component/52-66",[]],["title/52-67",[349,20.901]],["name/52-67",[]],["text/52-67",[]],["component/52-67",[]],["title/52-68",[1012,61.094]],["name/52-68",[]],["text/52-68",[]],["component/52-68",[]],["title/52-69",[347,18.266]],["name/52-69",[]],["text/52-69",[]],["component/52-69",[]],["title/52-70",[348,17.08]],["name/52-70",[]],["text/52-70",[]],["component/52-70",[]],["title/52-71",[349,20.901]],["name/52-71",[]],["text/52-71",[]],["component/52-71",[]],["title/52",[6,39.345]],["name/52",[6,0.51]],["text/52",[6,5.18,17,3.128,18,0.347,20,0.371,48,0.334,98,2.405,124,3.493,158,0.794,210,2.437,212,0.882,223,1.88,224,1.041,225,2.573,226,1.788,232,0.447,278,0.494,289,0.523,318,0.788,329,0.353,330,0.353,331,0.353,332,0.353,333,0.353,334,0.353,335,1.835,336,0.353,337,0.353,338,0.353,339,0.353,340,0.353,351,0.501,386,4.675,479,0.55,484,0.788,492,0.752,498,1.86,508,1.86,511,0.913,556,0.55,614,0.508,695,0.99,743,1.736,749,0.523,875,6.302,1013,0.708,1014,0.584,1015,0.523,1016,0.584,1017,4.301,1018,0.708,1019,1.341,1020,0.99,1021,0.913,1022,4.301,1023,1.341,1024,1.341,1025,1.341,1026,0.708,1027,5.927,1028,0.708,1029,0.708,1030,0.708,1031,0.808,1032,1.341,1033,1.341,1034,1.341,1035,0.708,1036,0.708,1037,0.708,1038,0.708,1039,0.708,1040,0.708,1041,0.708,1042,0.708,1043,0.708,1044,0.708,1045,0.708,1046,0.708,1047,0.708,1048,0.708,1049,0.708,1050,0.708,1051,0.708,1052,0.708,1053,0.708,1054,0.708,1055,0.708]],["component/52",[17,0.285]],["title/53-1",[0,31.598]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53-2",[349,20.901]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["title/53-3",[1056,47.418]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["title/53-4",[347,18.266]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["title/53-5",[348,17.08]],["name/53-5",[]],["text/53-5",[]],["component/53-5",[]],["title/53-6",[2,28.986]],["name/53-6",[]],["text/53-6",[]],["component/53-6",[]],["title/53-7",[430,35.056]],["name/53-7",[]],["text/53-7",[]],["component/53-7",[]],["title/53-8",[1057,54.443]],["name/53-8",[]],["text/53-8",[]],["component/53-8",[]],["title/53-9",[347,18.266]],["name/53-9",[]],["text/53-9",[]],["component/53-9",[]],["title/53-10",[348,17.08]],["name/53-10",[]],["text/53-10",[]],["component/53-10",[]],["title/53-11",[2,28.986]],["name/53-11",[]],["text/53-11",[]],["component/53-11",[]],["title/53",[1056,47.418]],["name/53",[1056,0.615]],["text/53",[10,2.49,17,3.153,18,2.179,22,1.35,26,1.911,31,1.118,36,0.986,40,0.975,42,0.947,44,1.007,48,2.097,56,1.176,124,0.837,126,1.797,136,1.797,149,0.975,158,0.897,162,1.839,169,1.886,175,0.975,178,1.007,188,1.007,207,0.975,224,1.176,229,1.777,233,0.996,239,1.35,256,1.176,260,1.176,273,1.071,329,0.756,330,0.756,331,0.756,332,0.756,333,0.756,334,0.756,335,0.751,336,0.756,337,0.756,338,0.756,339,0.756,340,0.756,343,1.886,345,0.996,349,0.924,370,1.937,374,2.623,376,1.278,379,1.937,386,2.475,440,1.35,466,2.923,508,0.975,520,1.019,574,1.071,614,1.086,662,1.102,700,0.975,725,1.044,754,3.367,1056,3.96,1057,5.473,1058,1.35,1059,1.515,1060,3.658,1061,1.35,1062,1.35,1063,1.35,1064,1.35,1065,1.249,1066,1.995,1067,2.228,1068,1.249,1069,1.515,1070,1.515,1071,1.515,1072,1.515,1073,1.515,1074,1.176,1075,1.176,1076,1.176,1077,1.176,1078,1.176,1079,1.118,1080,1.118,1081,1.118,1082,1.118,1083,1.118,1084,1.118,1085,1.118,1086,1.176,1087,1.176,1088,1.176]],["component/53",[17,0.285]],["title/54-1",[0,31.598]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[484,35.905]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[347,18.266]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54-4",[348,17.08]],["name/54-4",[]],["text/54-4",[]],["component/54-4",[]],["title/54-5",[349,20.901]],["name/54-5",[]],["text/54-5",[]],["component/54-5",[]],["title/54",[484,35.905]],["name/54",[484,0.465]],["text/54",[17,2.89,18,1.413,40,3.016,78,2.096,99,4.174,120,3.458,124,1.593,183,3.406,207,1.855,212,3.081,228,2.278,234,1.752,281,3.312,329,1.437,330,1.437,331,1.437,332,1.437,333,1.437,334,1.437,335,2.935,336,1.437,337,1.437,338,1.437,339,1.437,340,1.437,386,2.608,484,4.006,492,2.627,495,2.127,496,2.495,498,1.855,505,2.567,508,3.016,743,3.358,875,4.987,1017,3.188,1022,1.961,1089,2.881,1090,2.881,1091,2.567,1092,2.127]],["component/54",[17,0.285]],["title/55-1",[0,31.598]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[1093,54.443]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[347,18.266]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[348,17.08]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55-5",[2,28.986]],["name/55-5",[]],["text/55-5",[]],["component/55-5",[]],["title/55-6",[57,43.206]],["name/55-6",[]],["text/55-6",[]],["component/55-6",[]],["title/55-7",[347,18.266]],["name/55-7",[]],["text/55-7",[]],["component/55-7",[]],["title/55-8",[348,17.08]],["name/55-8",[]],["text/55-8",[]],["component/55-8",[]],["title/55-9",[349,20.901]],["name/55-9",[]],["text/55-9",[]],["component/55-9",[]],["title/55",[57,43.206]],["name/55",[57,0.56]],["text/55",[7,0.866,17,2.874,18,2.483,26,2.564,48,2.08,57,3.581,64,2.206,120,1.106,124,0.828,126,0.996,136,0.996,149,0.965,161,1.335,162,2.468,169,1.867,175,0.965,177,1.163,184,1.335,188,0.996,207,0.965,234,0.911,238,1.163,279,1.02,291,1.059,318,0.88,329,0.747,330,0.747,331,0.747,332,0.747,333,0.747,334,0.747,335,1.327,336,0.747,337,0.747,338,0.747,339,0.747,340,0.747,343,1.045,345,0.985,370,1.074,374,2.599,379,1.918,386,2.455,392,1.184,466,0.985,480,2.206,481,3.658,487,1.335,488,3.739,492,1.501,497,1.106,498,0.965,499,1.335,500,1.235,501,2.439,502,1.106,503,2.384,504,1.235,520,1.008,571,1.946,572,1.335,725,1.032,737,1.379,812,1.432,871,2.463,929,1.264,1031,0.903,1066,1.106,1077,1.163,1078,1.163,1079,1.106,1080,1.106,1081,1.106,1082,1.106,1083,1.106,1084,1.106,1085,1.106,1093,5.809,1094,3.117,1095,1.335,1096,1.892,1097,1.498,1098,1.498,1099,1.498,1100,1.235,1101,1.163,1102,1.498,1103,1.498,1104,1.498,1105,1.498]],["component/55",[17,0.285]],["title/56-1",[0,31.598]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[318,26.301,483,30.467]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56-3",[349,20.901]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["title/56-4",[1106,61.094]],["name/56-4",[]],["text/56-4",[]],["component/56-4",[]],["title/56-5",[347,18.266]],["name/56-5",[]],["text/56-5",[]],["component/56-5",[]],["title/56-6",[348,17.08]],["name/56-6",[]],["text/56-6",[]],["component/56-6",[]],["title/56-7",[2,28.986]],["name/56-7",[]],["text/56-7",[]],["component/56-7",[]],["title/56-8",[430,35.056]],["name/56-8",[]],["text/56-8",[]],["component/56-8",[]],["title/56-9",[349,20.901]],["name/56-9",[]],["text/56-9",[]],["component/56-9",[]],["title/56-10",[1107,54.443]],["name/56-10",[]],["text/56-10",[]],["component/56-10",[]],["title/56-11",[347,18.266]],["name/56-11",[]],["text/56-11",[]],["component/56-11",[]],["title/56-12",[348,17.08]],["name/56-12",[]],["text/56-12",[]],["component/56-12",[]],["title/56-13",[2,28.986]],["name/56-13",[]],["text/56-13",[]],["component/56-13",[]],["title/56-14",[430,35.056]],["name/56-14",[]],["text/56-14",[]],["component/56-14",[]],["title/56-15",[483,30.467,1031,26.976]],["name/56-15",[]],["text/56-15",[]],["component/56-15",[]],["title/56-16",[349,20.901]],["name/56-16",[]],["text/56-16",[]],["component/56-16",[]],["title/56-17",[1108,61.094]],["name/56-17",[]],["text/56-17",[]],["component/56-17",[]],["title/56-18",[347,18.266]],["name/56-18",[]],["text/56-18",[]],["component/56-18",[]],["title/56-19",[348,17.08]],["name/56-19",[]],["text/56-19",[]],["component/56-19",[]],["title/56-20",[2,28.986]],["name/56-20",[]],["text/56-20",[]],["component/56-20",[]],["title/56-21",[430,35.056]],["name/56-21",[]],["text/56-21",[]],["component/56-21",[]],["title/56-22",[349,20.901]],["name/56-22",[]],["text/56-22",[]],["component/56-22",[]],["title/56-23",[1109,54.443]],["name/56-23",[]],["text/56-23",[]],["component/56-23",[]],["title/56-24",[347,18.266]],["name/56-24",[]],["text/56-24",[]],["component/56-24",[]],["title/56-25",[348,17.08]],["name/56-25",[]],["text/56-25",[]],["component/56-25",[]],["title/56-26",[2,28.986]],["name/56-26",[]],["text/56-26",[]],["component/56-26",[]],["title/56-27",[430,35.056]],["name/56-27",[]],["text/56-27",[]],["component/56-27",[]],["title/56",[483,41.591]],["name/56",[483,0.539]],["text/56",[6,0.301,7,0.521,17,2.905,18,0.996,26,0.33,31,0.665,36,0.586,40,0.84,42,0.815,44,0.599,48,1.65,98,1.399,125,1.418,136,1.117,149,1.521,158,0.534,162,1.818,169,1.172,170,3.115,175,1.082,178,0.599,183,0.655,188,0.599,201,0.802,212,4.557,213,0.742,229,0.858,232,0.295,233,1.105,235,0.362,255,1.801,263,0.385,273,1.67,279,0.613,281,0.33,291,0.637,318,1.902,329,0.233,330,0.233,331,0.233,332,0.233,333,0.233,334,0.233,335,0.647,336,0.233,337,0.233,338,0.233,339,0.233,340,0.233,343,1.172,345,0.858,370,1.204,371,1.383,374,1.693,376,0.394,379,1.204,386,1.131,400,2.639,416,3.115,442,1.385,466,2.299,480,0.742,481,0.848,482,0.613,483,2.203,484,0.529,486,1.67,488,1.24,489,0.699,491,1.383,492,2.228,494,0.416,495,1.24,497,1.24,498,1.308,501,0.877,502,0.345,508,0.84,511,0.887,512,0.742,514,0.369,520,0.606,556,0.362,571,0.655,574,1.188,576,0.362,673,0.385,686,0.385,693,0.385,695,1.24,700,0.58,714,0.369,717,1.129,725,0.62,749,1.24,751,0.369,878,0.43,944,0.802,976,0.861,1014,0.742,1015,0.665,1020,0.665,1021,1.607,1031,1.61,1065,0.385,1066,1.5,1067,1.675,1068,1.075,1074,0.699,1075,0.699,1076,0.699,1079,0.665,1080,0.665,1081,0.665,1082,0.665,1083,0.665,1084,0.665,1085,0.665,1086,0.699,1087,0.699,1088,0.699,1092,0.665,1094,0.33,1096,1.67,1107,2.38,1109,2.38,1110,3.236,1111,0.467,1112,0.467,1113,2.442,1114,0.416,1115,0.467,1116,0.9,1117,0.802,1118,0.416,1119,0.416,1120,0.416,1121,0.416,1122,0.467,1123,0.467,1124,0.9,1125,0.9,1126,0.802,1127,0.9,1128,0.9,1129,0.9,1130,1.68,1131,1.304,1132,1.68,1133,1.68,1134,1.68,1135,1.68,1136,1.68,1137,1.68,1138,0.9,1139,0.9,1140,0.9,1141,0.467]],["component/56",[17,0.285]],["title/57-1",[0,31.598]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[349,20.901]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[10,41.591]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57-4",[347,18.266]],["name/57-4",[]],["text/57-4",[]],["component/57-4",[]],["title/57-5",[348,17.08]],["name/57-5",[]],["text/57-5",[]],["component/57-5",[]],["title/57-6",[2,28.986]],["name/57-6",[]],["text/57-6",[]],["component/57-6",[]],["title/57-7",[349,20.901]],["name/57-7",[]],["text/57-7",[]],["component/57-7",[]],["title/57-8",[1142,54.443]],["name/57-8",[]],["text/57-8",[]],["component/57-8",[]],["title/57-9",[347,18.266]],["name/57-9",[]],["text/57-9",[]],["component/57-9",[]],["title/57-10",[348,17.08]],["name/57-10",[]],["text/57-10",[]],["component/57-10",[]],["title/57-11",[2,28.986]],["name/57-11",[]],["text/57-11",[]],["component/57-11",[]],["title/57",[234,37.152]],["name/57",[10,0.539]],["text/57",[6,0.635,7,0.57,10,2.889,17,3.14,18,1.564,20,0.517,26,1.293,31,0.728,36,0.642,40,1.177,42,0.617,44,0.656,48,1.506,56,1.419,124,0.545,126,1.216,136,1.216,137,0.752,149,1.177,158,1.083,162,2.172,169,1.276,175,0.635,178,0.656,188,0.656,207,0.635,217,0.796,224,1.984,229,1.203,233,0.649,263,0.813,273,1.293,279,0.671,291,0.697,318,0.58,329,0.492,330,0.492,331,0.492,332,0.492,333,0.492,334,0.492,335,0.489,336,0.492,337,0.492,338,0.492,339,0.492,340,0.492,343,1.276,345,0.649,349,0.337,370,1.311,374,1.832,379,1.311,386,1.777,442,0.813,466,2.099,481,0.642,491,1.245,492,3.403,495,0.728,497,1.887,498,0.635,508,2.055,512,1.507,520,0.664,546,2.278,574,1.293,611,0.796,662,0.717,669,0.765,714,0.78,725,0.68,743,2.688,751,0.78,927,0.908,939,0.908,1015,1.35,1020,0.728,1021,2.889,1031,0.594,1058,2.278,1061,0.879,1062,0.879,1063,0.879,1064,0.879,1065,0.813,1066,1.35,1067,1.507,1068,0.813,1074,0.765,1075,0.765,1076,0.765,1077,0.765,1078,0.765,1079,0.728,1080,0.728,1081,0.728,1082,0.728,1083,0.728,1084,0.728,1085,0.728,1086,0.765,1087,0.765,1088,0.765,1092,0.728,1094,0.697,1096,3.002,1113,3.864,1117,1.629,1118,0.879,1119,2.278,1120,0.879,1121,0.879,1142,4.177,1143,0.879,1144,0.986,1145,0.986,1146,3.749,1147,0.986,1148,0.986,1149,0.986,1150,0.986,1151,1.828,1152,0.986,1153,0.986]],["component/57",[17,0.285]],["title/58-1",[0,31.598]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58-2",[1154,50.366]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["title/58-3",[35,44.435]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["title/58-4",[347,18.266]],["name/58-4",[]],["text/58-4",[]],["component/58-4",[]],["title/58-5",[1155,54.443]],["name/58-5",[]],["text/58-5",[]],["component/58-5",[]],["title/58-6",[2,28.986]],["name/58-6",[]],["text/58-6",[]],["component/58-6",[]],["title/58-7",[348,12.512,1156,39.881]],["name/58-7",[]],["text/58-7",[]],["component/58-7",[]],["title/58",[492,34.27]],["name/58",[492,0.444]],["text/58",[4,0.764,7,2.618,17,2.391,18,0.53,44,0.719,48,0.939,78,0.786,82,0.786,98,4.087,102,0.963,120,0.798,172,0.891,177,0.839,180,0.963,181,1.407,183,0.786,205,0.963,207,0.696,209,0.963,212,0.711,213,1.64,221,5.683,223,0.839,226,0.798,229,2.641,232,0.682,272,0.963,289,0.798,290,0.754,310,2.714,318,2.661,329,0.539,330,0.539,331,0.539,332,0.539,333,0.539,334,0.539,335,0.536,336,0.539,337,0.539,338,0.539,339,0.539,340,0.539,348,0.773,353,0.912,420,1.573,466,0.711,492,4.42,495,0.798,500,0.891,501,0.727,504,1.64,511,1.354,526,0.963,576,0.839,669,0.839,700,0.696,708,0.936,715,1.723,901,1.773,932,1.679,1014,2.83,1015,0.798,1021,3.082,1031,2.729,1096,3.202,1100,1.64,1101,0.839,1143,0.963,1154,2.279,1155,1.773,1156,0.963,1157,2.463,1158,2.463,1159,1.08,1160,2.764,1161,4.528,1162,1.08,1163,1.08,1164,1.08,1165,1.08,1166,1.08,1167,1.08,1168,0.963,1169,0.963,1170,3.578,1171,4.015,1172,3.578,1173,4.015,1174,1.773,1175,1.989,1176,1.08,1177,1.08,1178,1.08]],["component/58",[17,0.285]],["title/59-1",[0,31.598]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[9,41.103]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[347,18.266]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[348,17.08]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59-5",[349,20.901]],["name/59-5",[]],["text/59-5",[]],["component/59-5",[]],["title/59-6",[1179,54.443]],["name/59-6",[]],["text/59-6",[]],["component/59-6",[]],["title/59-7",[347,18.266]],["name/59-7",[]],["text/59-7",[]],["component/59-7",[]],["title/59-8",[348,17.08]],["name/59-8",[]],["text/59-8",[]],["component/59-8",[]],["title/59-9",[349,20.901]],["name/59-9",[]],["text/59-9",[]],["component/59-9",[]],["title/59-10",[1180,54.443]],["name/59-10",[]],["text/59-10",[]],["component/59-10",[]],["title/59-11",[347,18.266]],["name/59-11",[]],["text/59-11",[]],["component/59-11",[]],["title/59-12",[348,17.08]],["name/59-12",[]],["text/59-12",[]],["component/59-12",[]],["title/59-13",[349,20.901]],["name/59-13",[]],["text/59-13",[]],["component/59-13",[]],["title/59-14",[1181,54.443]],["name/59-14",[]],["text/59-14",[]],["component/59-14",[]],["title/59-15",[347,18.266]],["name/59-15",[]],["text/59-15",[]],["component/59-15",[]],["title/59-16",[348,17.08]],["name/59-16",[]],["text/59-16",[]],["component/59-16",[]],["title/59-17",[349,20.901]],["name/59-17",[]],["text/59-17",[]],["component/59-17",[]],["title/59-18",[1182,54.443]],["name/59-18",[]],["text/59-18",[]],["component/59-18",[]],["title/59-19",[347,18.266]],["name/59-19",[]],["text/59-19",[]],["component/59-19",[]],["title/59-20",[348,17.08]],["name/59-20",[]],["text/59-20",[]],["component/59-20",[]],["title/59-21",[349,20.901]],["name/59-21",[]],["text/59-21",[]],["component/59-21",[]],["title/59-22",[1183,54.443]],["name/59-22",[]],["text/59-22",[]],["component/59-22",[]],["title/59-23",[348,17.08]],["name/59-23",[]],["text/59-23",[]],["component/59-23",[]],["title/59-24",[349,20.901]],["name/59-24",[]],["text/59-24",[]],["component/59-24",[]],["title/59-25",[1184,54.443]],["name/59-25",[]],["text/59-25",[]],["component/59-25",[]],["title/59-26",[347,18.266]],["name/59-26",[]],["text/59-26",[]],["component/59-26",[]],["title/59-27",[348,17.08]],["name/59-27",[]],["text/59-27",[]],["component/59-27",[]],["title/59-28",[349,20.901]],["name/59-28",[]],["text/59-28",[]],["component/59-28",[]],["title/59-29",[1185,54.443]],["name/59-29",[]],["text/59-29",[]],["component/59-29",[]],["title/59-30",[347,18.266]],["name/59-30",[]],["text/59-30",[]],["component/59-30",[]],["title/59-31",[348,17.08]],["name/59-31",[]],["text/59-31",[]],["component/59-31",[]],["title/59-32",[349,20.901]],["name/59-32",[]],["text/59-32",[]],["component/59-32",[]],["title/59-33",[1186,54.443]],["name/59-33",[]],["text/59-33",[]],["component/59-33",[]],["title/59-34",[347,18.266]],["name/59-34",[]],["text/59-34",[]],["component/59-34",[]],["title/59-35",[348,17.08]],["name/59-35",[]],["text/59-35",[]],["component/59-35",[]],["title/59-36",[349,20.901]],["name/59-36",[]],["text/59-36",[]],["component/59-36",[]],["title/59-37",[1187,54.443]],["name/59-37",[]],["text/59-37",[]],["component/59-37",[]],["title/59-38",[347,18.266]],["name/59-38",[]],["text/59-38",[]],["component/59-38",[]],["title/59-39",[348,17.08]],["name/59-39",[]],["text/59-39",[]],["component/59-39",[]],["title/59-40",[349,20.901]],["name/59-40",[]],["text/59-40",[]],["component/59-40",[]],["title/59-41",[1188,54.443]],["name/59-41",[]],["text/59-41",[]],["component/59-41",[]],["title/59-42",[347,18.266]],["name/59-42",[]],["text/59-42",[]],["component/59-42",[]],["title/59-43",[348,17.08]],["name/59-43",[]],["text/59-43",[]],["component/59-43",[]],["title/59-44",[349,20.901]],["name/59-44",[]],["text/59-44",[]],["component/59-44",[]],["title/59",[9,41.103]],["name/59",[9,0.533]],["text/59",[9,3.029,17,2.148,18,0.208,20,0.222,48,0.2,98,2.668,124,1.928,158,2.066,181,2.466,188,2.468,232,0.268,241,0.732,255,1.661,256,1.69,260,0.637,261,0.732,278,0.296,279,0.559,281,2.466,289,0.313,329,0.212,330,0.212,331,0.212,332,0.212,333,0.212,334,0.212,335,2.561,336,0.212,337,0.212,338,0.212,339,0.212,340,0.212,351,0.3,386,3.037,474,2.758,479,0.33,484,2.049,491,2.374,492,3.059,498,2.656,508,3.225,511,3.806,614,0.304,662,2.536,743,4.009,820,3.333,875,5.787,1016,0.35,1017,2.374,1022,2.374,1091,3.108,1092,2.575,1157,3.108,1158,3.108,1168,3.108,1179,0.732,1180,0.732,1181,0.732,1182,0.732,1183,0.732,1184,0.732,1185,0.732,1186,0.732,1187,0.732,1188,0.732,1189,0.425,1190,3.487,1191,3.487,1192,3.487,1193,0.425,1194,0.425,1195,0.425,1196,0.425,1197,0.425,1198,3.306,1199,0.425,1200,0.425,1201,0.425,1202,0.425,1203,6.204,1204,0.425,1205,0.425,1206,0.425,1207,0.425,1208,0.425,1209,0.425,1210,0.425,1211,0.425,1212,0.425,1213,0.425,1214,0.425,1215,0.425,1216,0.425]],["component/59",[17,0.285]],["title/60-1",[0,31.598]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[485,45.107]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[347,18.266]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60-4",[348,17.08]],["name/60-4",[]],["text/60-4",[]],["component/60-4",[]],["title/60-5",[349,20.901]],["name/60-5",[]],["text/60-5",[]],["component/60-5",[]],["title/60",[485,45.107]],["name/60",[485,0.585]],["text/60",[17,2.948,18,1.475,20,1.576,98,2.875,124,1.663,158,1.783,329,1.501,330,1.501,331,1.501,332,1.501,333,1.501,334,1.501,335,1.492,336,1.501,337,1.501,338,1.501,339,1.501,340,1.501,371,4.149,386,2.701,401,2.681,402,2.681,481,1.958,484,1.768,485,6.622,669,3.765,700,1.938,749,4.5,875,4.65,929,2.539,1017,2.048,1022,2.048,1217,4.851,1218,3.009,1219,4.851,1220,3.009,1221,4.851]],["component/60",[17,0.285]],["title/61-1",[0,31.598]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["title/61-2",[492,34.27]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["title/61-3",[347,18.266]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["title/61-4",[348,17.08]],["name/61-4",[]],["text/61-4",[]],["component/61-4",[]],["title/61-5",[349,20.901]],["name/61-5",[]],["text/61-5",[]],["component/61-5",[]],["title/61-6",[220,54.443]],["name/61-6",[]],["text/61-6",[]],["component/61-6",[]],["title/61-7",[347,18.266]],["name/61-7",[]],["text/61-7",[]],["component/61-7",[]],["title/61-8",[348,17.08]],["name/61-8",[]],["text/61-8",[]],["component/61-8",[]],["title/61-9",[349,20.901]],["name/61-9",[]],["text/61-9",[]],["component/61-9",[]],["title/61-10",[1222,61.094]],["name/61-10",[]],["text/61-10",[]],["component/61-10",[]],["title/61-11",[347,18.266]],["name/61-11",[]],["text/61-11",[]],["component/61-11",[]],["title/61-12",[348,17.08]],["name/61-12",[]],["text/61-12",[]],["component/61-12",[]],["title/61-13",[349,20.901]],["name/61-13",[]],["text/61-13",[]],["component/61-13",[]],["title/61-14",[1223,61.094]],["name/61-14",[]],["text/61-14",[]],["component/61-14",[]],["title/61-15",[347,18.266]],["name/61-15",[]],["text/61-15",[]],["component/61-15",[]],["title/61-16",[348,17.08]],["name/61-16",[]],["text/61-16",[]],["component/61-16",[]],["title/61-17",[349,20.901]],["name/61-17",[]],["text/61-17",[]],["component/61-17",[]],["title/61-18",[1224,61.094]],["name/61-18",[]],["text/61-18",[]],["component/61-18",[]],["title/61-19",[347,18.266]],["name/61-19",[]],["text/61-19",[]],["component/61-19",[]],["title/61-20",[348,17.08]],["name/61-20",[]],["text/61-20",[]],["component/61-20",[]],["title/61-21",[349,20.901]],["name/61-21",[]],["text/61-21",[]],["component/61-21",[]],["title/61-22",[1225,61.094]],["name/61-22",[]],["text/61-22",[]],["component/61-22",[]],["title/61-23",[347,18.266]],["name/61-23",[]],["text/61-23",[]],["component/61-23",[]],["title/61-24",[348,17.08]],["name/61-24",[]],["text/61-24",[]],["component/61-24",[]],["title/61-25",[349,20.901]],["name/61-25",[]],["text/61-25",[]],["component/61-25",[]],["title/61-26",[1226,61.094]],["name/61-26",[]],["text/61-26",[]],["component/61-26",[]],["title/61-27",[347,18.266]],["name/61-27",[]],["text/61-27",[]],["component/61-27",[]],["title/61-28",[348,17.08]],["name/61-28",[]],["text/61-28",[]],["component/61-28",[]],["title/61-29",[349,20.901]],["name/61-29",[]],["text/61-29",[]],["component/61-29",[]],["title/61-30",[1227,61.094]],["name/61-30",[]],["text/61-30",[]],["component/61-30",[]],["title/61-31",[347,18.266]],["name/61-31",[]],["text/61-31",[]],["component/61-31",[]],["title/61-32",[348,17.08]],["name/61-32",[]],["text/61-32",[]],["component/61-32",[]],["title/61-33",[349,20.901]],["name/61-33",[]],["text/61-33",[]],["component/61-33",[]],["title/61-34",[1228,61.094]],["name/61-34",[]],["text/61-34",[]],["component/61-34",[]],["title/61-35",[347,18.266]],["name/61-35",[]],["text/61-35",[]],["component/61-35",[]],["title/61-36",[348,17.08]],["name/61-36",[]],["text/61-36",[]],["component/61-36",[]],["title/61-37",[349,20.901]],["name/61-37",[]],["text/61-37",[]],["component/61-37",[]],["title/61-38",[1229,61.094]],["name/61-38",[]],["text/61-38",[]],["component/61-38",[]],["title/61-39",[347,18.266]],["name/61-39",[]],["text/61-39",[]],["component/61-39",[]],["title/61-40",[348,17.08]],["name/61-40",[]],["text/61-40",[]],["component/61-40",[]],["title/61-41",[349,20.901]],["name/61-41",[]],["text/61-41",[]],["component/61-41",[]],["title/61",[7,35.332]],["name/61",[7,0.458]],["text/61",[7,1.592,17,2.987,18,0.328,20,0.35,48,0.315,124,2.495,127,2.441,183,2.576,228,3.569,229,2.081,232,0.422,278,0.466,281,4.9,289,0.493,318,2.968,329,0.333,330,0.333,331,0.333,332,0.333,333,0.333,334,0.333,335,0.331,336,0.333,337,0.333,338,0.333,339,0.333,340,0.333,351,0.473,386,3.778,479,0.519,481,1.179,484,2.476,492,4.863,614,0.479,720,3.077,875,6.175,1016,0.551,1017,3.072,1021,3.438,1022,3.072,1031,3.044,1092,3.332,1094,1.281,1096,3.572,1100,4.728,1154,0.551,1174,4.501,1230,0.668,1231,0.668,1232,0.668,1233,0.668,1234,1.269,1235,0.668,1236,0.668,1237,0.668,1238,0.668,1239,0.668,1240,0.668,1278,0.708]],["component/61",[17,0.285]],["title/62-1",[0,31.598]],["name/62-1",[]],["text/62-1",[]],["component/62-1",[]],["title/62-2",[486,43.206]],["name/62-2",[]],["text/62-2",[]],["component/62-2",[]],["title/62-3",[347,18.266]],["name/62-3",[]],["text/62-3",[]],["component/62-3",[]],["title/62-4",[348,17.08]],["name/62-4",[]],["text/62-4",[]],["component/62-4",[]],["title/62-5",[349,20.901]],["name/62-5",[]],["text/62-5",[]],["component/62-5",[]],["title/62",[486,43.206]],["name/62",[486,0.56]],["text/62",[17,2.596,18,1.315,48,1.266,112,2.211,124,1.483,127,1.848,158,1.589,178,2.938,212,1.764,233,1.764,318,1.576,329,1.338,330,1.338,331,1.338,332,1.338,333,1.338,334,1.338,335,1.33,336,1.338,337,1.338,338,1.338,339,1.338,340,1.338,360,2.164,361,3.313,371,3.007,386,2.46,466,1.764,483,3.834,486,6.287,488,3.261,489,3.428,491,1.826,695,1.98,700,1.727,720,2.121,875,4.342,915,2.263,1017,1.826,1022,1.826,1031,1.617,1101,2.081,1241,2.682,1242,4.417,1243,4.417,1244,4.417,1245,2.682]],["component/62",[17,0.285]],["title/63-1",[0,31.598]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63-2",[1246,61.094]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["title/63-3",[347,18.266]],["name/63-3",[]],["text/63-3",[]],["component/63-3",[]],["title/63-4",[348,17.08]],["name/63-4",[]],["text/63-4",[]],["component/63-4",[]],["title/63-5",[349,20.901]],["name/63-5",[]],["text/63-5",[]],["component/63-5",[]],["title/63-6",[1247,61.094]],["name/63-6",[]],["text/63-6",[]],["component/63-6",[]],["title/63-7",[347,18.266]],["name/63-7",[]],["text/63-7",[]],["component/63-7",[]],["title/63-8",[348,17.08]],["name/63-8",[]],["text/63-8",[]],["component/63-8",[]],["title/63-9",[349,20.901]],["name/63-9",[]],["text/63-9",[]],["component/63-9",[]],["title/63",[1248,50.366]],["name/63",[1248,0.653]],["text/63",[2,0.965,7,0.64,17,2.802,18,0.543,35,0.805,64,2.884,98,2.073,112,0.913,124,1.124,158,1.672,181,1.995,207,0.713,223,2.716,226,2.583,229,1.338,232,0.699,262,1.812,273,1.438,299,0.875,318,1.195,329,0.552,330,0.552,331,0.552,332,0.552,333,0.552,334,0.552,335,0.549,336,0.552,337,0.552,338,0.552,339,0.552,340,0.552,360,0.893,361,0.83,371,4.398,386,1.948,414,0.913,420,0.875,446,1.812,474,1.608,481,1.324,484,1.195,491,1.921,492,1.963,511,1.385,556,0.859,574,1.438,695,2.083,700,1.817,720,1.608,749,3.737,751,1.608,864,1.872,875,3.637,915,1.716,932,1.716,1015,1.502,1017,1.385,1020,0.817,1021,1.385,1022,1.385,1031,1.226,1094,1.438,1096,0.783,1101,2.19,1126,1.812,1169,0.986,1198,1.812,1248,6.559,1249,1.812,1250,3.118,1251,1.812,1252,4.604,1253,3.499,1254,2.821,1255,2.034,1256,2.034,1257,2.034,1258,1.107,1259,2.034,1260,2.034,1261,1.107,1262,2.034,1263,2.034]],["component/63",[17,0.285]],["title/64-1",[0,31.598]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64-2",[318,26.301,482,30.467]],["name/64-2",[]],["text/64-2",[]],["component/64-2",[]],["title/64-3",[349,20.901]],["name/64-3",[]],["text/64-3",[]],["component/64-3",[]],["title/64-4",[1250,54.443]],["name/64-4",[]],["text/64-4",[]],["component/64-4",[]],["title/64-5",[347,18.266]],["name/64-5",[]],["text/64-5",[]],["component/64-5",[]],["title/64-6",[348,17.08]],["name/64-6",[]],["text/64-6",[]],["component/64-6",[]],["title/64-7",[2,28.986]],["name/64-7",[]],["text/64-7",[]],["component/64-7",[]],["title/64-8",[349,20.901]],["name/64-8",[]],["text/64-8",[]],["component/64-8",[]],["title/64-9",[1264,54.443]],["name/64-9",[]],["text/64-9",[]],["component/64-9",[]],["title/64-10",[347,18.266]],["name/64-10",[]],["text/64-10",[]],["component/64-10",[]],["title/64-11",[348,17.08]],["name/64-11",[]],["text/64-11",[]],["component/64-11",[]],["title/64-12",[2,28.986]],["name/64-12",[]],["text/64-12",[]],["component/64-12",[]],["title/64-13",[482,30.467,1031,26.976]],["name/64-13",[]],["text/64-13",[]],["component/64-13",[]],["title/64-14",[349,20.901]],["name/64-14",[]],["text/64-14",[]],["component/64-14",[]],["title/64-15",[1251,54.443]],["name/64-15",[]],["text/64-15",[]],["component/64-15",[]],["title/64-16",[347,18.266]],["name/64-16",[]],["text/64-16",[]],["component/64-16",[]],["title/64-17",[348,17.08]],["name/64-17",[]],["text/64-17",[]],["component/64-17",[]],["title/64-18",[2,28.986]],["name/64-18",[]],["text/64-18",[]],["component/64-18",[]],["title/64-19",[349,20.901]],["name/64-19",[]],["text/64-19",[]],["component/64-19",[]],["title/64-20",[1265,54.443]],["name/64-20",[]],["text/64-20",[]],["component/64-20",[]],["title/64-21",[347,18.266]],["name/64-21",[]],["text/64-21",[]],["component/64-21",[]],["title/64-22",[348,17.08]],["name/64-22",[]],["text/64-22",[]],["component/64-22",[]],["title/64-23",[2,28.986]],["name/64-23",[]],["text/64-23",[]],["component/64-23",[]],["title/64",[482,41.591]],["name/64",[482,0.539]],["text/64",[7,0.431,17,3.043,18,1.884,19,0.527,26,0.995,31,1.039,36,0.915,40,1.938,42,0.879,44,0.936,48,2.877,124,0.778,126,0.936,136,1.682,149,0.906,158,0.834,162,1.722,169,1.765,174,0.614,175,0.906,181,0.995,188,0.936,212,0.925,229,0.925,232,1.261,233,0.925,234,0.855,235,0.578,279,0.507,281,1.788,291,0.527,318,2.851,329,0.372,330,0.372,331,0.372,332,0.372,333,0.372,334,0.372,335,0.698,336,0.372,337,0.372,338,0.372,339,0.372,340,0.372,343,1.765,345,0.925,349,0.481,370,1.009,374,2.47,379,1.813,386,1.918,466,1.664,481,0.915,482,3.678,488,1.039,489,1.092,492,2.156,497,1.475,498,0.48,501,2.318,502,1.039,508,0.48,511,3.846,514,1.58,520,0.946,571,1.023,574,0.995,576,1.55,662,1.023,673,1.16,686,1.647,693,1.16,725,0.969,743,0.534,1020,2.544,1021,1.722,1031,2.924,1066,1.039,1074,1.092,1075,1.092,1076,1.092,1077,1.092,1078,1.092,1079,1.039,1080,1.039,1081,1.039,1082,1.039,1083,1.039,1084,1.039,1085,1.039,1086,1.092,1087,1.092,1088,1.55,1094,0.995,1095,1.254,1113,0.614,1114,1.254,1170,0.664,1172,0.664,1249,1.254,1264,3.425,1265,3.425,1266,0.745,1267,1.407,1268,1.407,1269,1.407,1270,1.407,1271,0.745,1272,0.745,1273,0.745,1274,0.745]],["component/64",[17,0.285]]],"invertedIndex":[["",{"_index":98,"title":{"7-17":{},"29-17":{},"49-17":{}},"name":{},"text":{"1":{},"3":{},"7":{},"8":{},"9":{},"10":{},"11":{},"15":{},"17":{},"18":{},"19":{},"20":{},"22":{},"24":{},"29":{},"30":{},"34":{},"36":{},"37":{},"38":{},"41":{},"43":{},"45":{},"49":{},"50":{},"51":{},"52":{},"56":{},"58":{},"59":{},"60":{},"63":{}},"component":{}}],["0",{"_index":125,"title":{},"name":{},"text":{"1":{},"8":{},"15":{},"24":{},"34":{},"43":{},"50":{},"56":{}},"component":{}}],["0(off",{"_index":936,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["0.0",{"_index":1014,"title":{},"name":{},"text":{"11":{},"15":{},"17":{},"30":{},"34":{},"36":{},"52":{},"56":{},"58":{}},"component":{}}],["0.25",{"_index":1125,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["0.5",{"_index":1126,"title":{},"name":{},"text":{"15":{},"22":{},"34":{},"41":{},"56":{},"63":{}},"component":{}}],["0.75",{"_index":1127,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["1",{"_index":255,"title":{},"name":{},"text":{"1":{},"3":{},"9":{},"15":{},"24":{},"34":{},"37":{},"43":{},"45":{},"50":{},"51":{},"56":{},"59":{}},"component":{}}],["1(on",{"_index":937,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["1.0",{"_index":749,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"15":{},"19":{},"22":{},"30":{},"34":{},"38":{},"41":{},"50":{},"52":{},"56":{},"60":{},"63":{}},"component":{}}],["1.0f",{"_index":794,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["1.5",{"_index":1262,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["10",{"_index":200,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"24":{},"29":{},"43":{},"49":{},"50":{}},"component":{}}],["100",{"_index":221,"title":{},"name":{},"text":{"1":{},"17":{},"24":{},"36":{},"43":{},"58":{}},"component":{}}],["100x50",{"_index":218,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["11",{"_index":1285,"title":{},"name":{},"text":{"50":{}},"component":{}}],["12",{"_index":1286,"title":{},"name":{},"text":{"50":{}},"component":{}}],["13",{"_index":1287,"title":{},"name":{},"text":{"50":{}},"component":{}}],["14",{"_index":1288,"title":{},"name":{},"text":{"50":{}},"component":{}}],["15",{"_index":1289,"title":{},"name":{},"text":{"50":{}},"component":{}}],["16",{"_index":1290,"title":{},"name":{},"text":{"50":{}},"component":{}}],["17",{"_index":635,"title":{},"name":{},"text":{"7":{},"29":{},"49":{},"50":{}},"component":{}}],["18",{"_index":245,"title":{},"name":{},"text":{"1":{},"24":{},"43":{},"50":{}},"component":{}}],["19",{"_index":1291,"title":{},"name":{},"text":{"50":{}},"component":{}}],["2",{"_index":256,"title":{},"name":{},"text":{"1":{},"3":{},"12":{},"24":{},"31":{},"37":{},"43":{},"45":{},"50":{},"51":{},"53":{},"59":{}},"component":{}}],["2.0",{"_index":1254,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["20",{"_index":244,"title":{},"name":{},"text":{"1":{},"24":{},"43":{},"50":{}},"component":{}}],["200",{"_index":1175,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["2014",{"_index":330,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["2019",{"_index":645,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["2022",{"_index":532,"title":{"7-15":{},"29-15":{},"49-15":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["2024",{"_index":331,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["21",{"_index":1292,"title":{},"name":{},"text":{"50":{}},"component":{}}],["22",{"_index":1293,"title":{},"name":{},"text":{"50":{}},"component":{}}],["23",{"_index":1294,"title":{},"name":{},"text":{"50":{}},"component":{}}],["24",{"_index":1295,"title":{},"name":{},"text":{"50":{}},"component":{}}],["25",{"_index":243,"title":{},"name":{},"text":{"1":{},"24":{},"43":{},"50":{}},"component":{}}],["255",{"_index":107,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["26",{"_index":1296,"title":{},"name":{},"text":{"50":{}},"component":{}}],["27",{"_index":1297,"title":{},"name":{},"text":{"50":{}},"component":{}}],["2d",{"_index":1143,"title":{},"name":{},"text":{"16":{},"17":{},"35":{},"36":{},"57":{},"58":{}},"component":{}}],["3",{"_index":260,"title":{},"name":{},"text":{"1":{},"7":{},"12":{},"24":{},"29":{},"31":{},"37":{},"43":{},"49":{},"50":{},"53":{},"59":{}},"component":{}}],["3.15",{"_index":570,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["3.16",{"_index":545,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["32",{"_index":656,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["35",{"_index":105,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["37",{"_index":106,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["4",{"_index":261,"title":{},"name":{},"text":{"1":{},"24":{},"37":{},"43":{},"50":{},"59":{}},"component":{}}],["5",{"_index":327,"title":{},"name":{},"text":{"1":{},"24":{},"43":{},"50":{}},"component":{}}],["50",{"_index":222,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["6",{"_index":1281,"title":{},"name":{},"text":{"50":{}},"component":{}}],["64",{"_index":643,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["7",{"_index":1282,"title":{},"name":{},"text":{"50":{}},"component":{}}],["8",{"_index":1283,"title":{},"name":{},"text":{"50":{}},"component":{}}],["80",{"_index":439,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["9",{"_index":1284,"title":{},"name":{},"text":{"50":{}},"component":{}}],["_app",{"_index":118,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["_app(\"aspect",{"_index":328,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["_app(argc",{"_index":115,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["_app.run",{"_index":123,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["_app.stop",{"_index":119,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["_win(_app.nam",{"_index":116,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["_win.on_clos",{"_index":117,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["abov",{"_index":615,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["accordingli",{"_index":930,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["account",{"_index":1192,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["achiev",{"_index":33,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["action",{"_index":315,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["activ",{"_index":754,"title":{},"name":{},"text":{"8":{},"12":{},"31":{},"50":{},"53":{}},"component":{}}],["active_body_color",{"_index":797,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["actual",{"_index":205,"title":{},"name":{},"text":{"1":{},"17":{},"24":{},"36":{},"43":{},"58":{}},"component":{}}],["ad",{"_index":1190,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["adapt",{"_index":522,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["add",{"_index":188,"title":{},"name":{},"text":{"1":{},"8":{},"10":{},"12":{},"14":{},"15":{},"16":{},"18":{},"23":{},"24":{},"31":{},"33":{},"34":{},"35":{},"37":{},"42":{},"43":{},"53":{},"55":{},"56":{},"57":{},"59":{},"64":{}},"component":{}}],["addit",{"_index":662,"title":{},"name":{},"text":{"7":{},"12":{},"15":{},"16":{},"18":{},"23":{},"29":{},"31":{},"35":{},"37":{},"42":{},"49":{},"53":{},"57":{},"59":{},"64":{}},"component":{}}],["addition",{"_index":587,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["adher",{"_index":888,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["adjust",{"_index":514,"title":{},"name":{},"text":{"6":{},"9":{},"15":{},"23":{},"28":{},"34":{},"42":{},"48":{},"51":{},"56":{},"64":{}},"component":{}}],["advanc",{"_index":462,"title":{},"name":{},"text":{"5":{},"9":{},"27":{},"47":{},"51":{}},"component":{}}],["advoc",{"_index":463,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["affect",{"_index":1234,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["again",{"_index":647,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["algorithm",{"_index":1268,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["alias",{"_index":346,"title":{"3-4":{},"45-4":{}},"name":{},"text":{"3":{},"45":{}},"component":{}}],["align",{"_index":6,"title":{"11":{},"30":{},"52":{},"1-5":{},"24-5":{},"43-5":{}},"name":{"11":{},"52":{}},"text":{"1":{},"6":{},"8":{},"10":{},"11":{},"15":{},"16":{},"24":{},"28":{},"30":{},"34":{},"35":{},"43":{},"48":{},"50":{},"52":{},"56":{},"57":{}},"component":{}}],["align_bottom",{"_index":1004,"title":{"11-25":{},"30-32":{},"52-32":{}},"name":{},"text":{},"component":{}}],["align_bottom(subject",{"_index":1037,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_cent",{"_index":319,"title":{"11-9":{},"30-11":{},"52-11":{}},"name":{},"text":{"1":{},"8":{},"24":{},"43":{},"50":{}},"component":{}}],["align_center(align_bottom(subject",{"_index":1053,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_center(align_middle(subject",{"_index":1047,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_center(align_top(subject",{"_index":1041,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_center(funny_slid",{"_index":317,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["align_center(subject",{"_index":1028,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_center_bottom",{"_index":1011,"title":{"11-49":{},"30-64":{},"52-64":{}},"name":{},"text":{},"component":{}}],["align_center_bottom(subject",{"_index":1052,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_center_middl",{"_index":227,"title":{"11-40":{},"30-52":{},"52-52":{}},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["align_center_middle(subject",{"_index":1046,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_center_top",{"_index":1006,"title":{"11-31":{},"30-40":{},"52-40":{}},"name":{},"text":{},"component":{}}],["align_center_top(subject",{"_index":1040,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_el",{"_index":1275,"title":{},"name":{"30":{}},"text":{},"component":{}}],["align_left",{"_index":790,"title":{"11-6":{},"30-7":{},"52-7":{}},"name":{},"text":{"8":{},"50":{}},"component":{}}],["align_left(align_bottom(subject",{"_index":1051,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_left(align_middle(subject",{"_index":1045,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_left(align_top(subject",{"_index":1039,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_left(subject",{"_index":1026,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_left_bottom",{"_index":1010,"title":{"11-46":{},"30-60":{},"52-60":{}},"name":{},"text":{},"component":{}}],["align_left_bottom(subject",{"_index":1050,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_left_middl",{"_index":1008,"title":{"11-37":{},"30-48":{},"52-48":{}},"name":{},"text":{},"component":{}}],["align_left_middle(subject",{"_index":1044,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_left_top",{"_index":1005,"title":{"11-28":{},"30-36":{},"52-36":{}},"name":{},"text":{},"component":{}}],["align_left_top(subject",{"_index":1038,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_middl",{"_index":1003,"title":{"11-22":{},"30-28":{},"52-28":{}},"name":{},"text":{},"component":{}}],["align_middle(subject",{"_index":1036,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right",{"_index":1000,"title":{"11-12":{},"30-15":{},"52-15":{}},"name":{},"text":{},"component":{}}],["align_right(align_bottom(subject",{"_index":1055,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right(align_middle(subject",{"_index":1049,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right(align_top(subject",{"_index":1043,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right(subject",{"_index":1029,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right_bottom",{"_index":1012,"title":{"11-52":{},"30-68":{},"52-68":{}},"name":{},"text":{},"component":{}}],["align_right_bottom(subject",{"_index":1054,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right_middl",{"_index":1009,"title":{"11-43":{},"30-56":{},"52-56":{}},"name":{},"text":{},"component":{}}],["align_right_middle(subject",{"_index":1048,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_right_top",{"_index":1007,"title":{"11-34":{},"30-44":{},"52-44":{}},"name":{},"text":{},"component":{}}],["align_right_top(subject",{"_index":1042,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["align_top",{"_index":1002,"title":{"11-19":{},"30-24":{},"52-24":{}},"name":{},"text":{},"component":{}}],["align_top(subject",{"_index":1035,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["all_build",{"_index":610,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["alloc",{"_index":1020,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"22":{},"23":{},"30":{},"34":{},"35":{},"41":{},"42":{},"52":{},"56":{},"57":{},"63":{},"64":{}},"component":{}}],["allow",{"_index":40,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"9":{},"10":{},"12":{},"13":{},"15":{},"16":{},"23":{},"24":{},"28":{},"31":{},"32":{},"34":{},"35":{},"42":{},"43":{},"48":{},"50":{},"51":{},"53":{},"54":{},"56":{},"57":{},"64":{}},"component":{}}],["alongsid",{"_index":240,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["alreadi",{"_index":206,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["altern",{"_index":866,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["although",{"_index":551,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["alway",{"_index":393,"title":{"4-1":{},"26-1":{},"46-1":{}},"name":{},"text":{"9":{}},"component":{}}],["annot",{"_index":949,"title":{},"name":{},"text":{"10":{}},"component":{}}],["anoth",{"_index":148,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["anyth",{"_index":164,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["anywher",{"_index":216,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["apart",{"_index":251,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["api",{"_index":47,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["app",{"_index":3,"title":{"1-3":{},"24-3":{},"43-3":{}},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["appear",{"_index":709,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"50":{},"51":{}},"component":{}}],["applic",{"_index":68,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"24":{},"27":{},"29":{},"43":{},"47":{},"49":{}},"component":{}}],["apt",{"_index":664,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["arbitrari",{"_index":505,"title":{},"name":{},"text":{"6":{},"13":{},"28":{},"32":{},"48":{},"54":{}},"component":{}}],["arbitrarili",{"_index":1013,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["architect",{"_index":456,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["argc",{"_index":111,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["argument",{"_index":905,"title":{},"name":{},"text":{"9":{},"10":{}},"component":{}}],["argv",{"_index":114,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["around",{"_index":241,"title":{},"name":{},"text":{"1":{},"18":{},"24":{},"37":{},"43":{},"59":{}},"component":{}}],["arrang",{"_index":487,"title":{},"name":{},"text":{"6":{},"14":{},"28":{},"33":{},"48":{},"55":{}},"component":{}}],["array",{"_index":1122,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["aspect",{"_index":15,"title":{"1":{},"24":{},"43":{}},"name":{"1":{},"24":{},"43":{}},"text":{"1":{},"5":{},"7":{},"24":{},"27":{},"29":{},"43":{},"47":{},"49":{}},"component":{}}],["assign",{"_index":897,"title":{},"name":{},"text":{"9":{}},"component":{}}],["assum",{"_index":695,"title":{},"name":{},"text":{"7":{},"11":{},"15":{},"21":{},"22":{},"29":{},"30":{},"34":{},"40":{},"41":{},"49":{},"52":{},"56":{},"62":{},"63":{}},"component":{}}],["atom",{"_index":285,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["au",{"_index":425,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["author",{"_index":399,"title":{"5-3":{},"27-3":{},"47-3":{}},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["auto",{"_index":101,"title":{},"name":{},"text":{"1":{},"8":{},"10":{},"24":{},"43":{},"50":{}},"component":{}}],["automat",{"_index":184,"title":{},"name":{},"text":{"1":{},"14":{},"24":{},"33":{},"43":{},"55":{}},"component":{}}],["avail",{"_index":232,"title":{},"name":{},"text":{"1":{},"3":{},"9":{},"11":{},"15":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"30":{},"34":{},"36":{},"37":{},"39":{},"41":{},"42":{},"43":{},"45":{},"51":{},"52":{},"56":{},"58":{},"59":{},"61":{},"63":{},"64":{}},"component":{}}],["axi",{"_index":224,"title":{},"name":{},"text":{"1":{},"11":{},"12":{},"16":{},"24":{},"30":{},"31":{},"35":{},"43":{},"52":{},"53":{},"57":{}},"component":{}}],["background",{"_index":5,"title":{"1-4":{},"24-4":{},"43-4":{}},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["base",{"_index":490,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"10":{},"28":{},"48":{},"51":{}},"component":{}}],["basic",{"_index":87,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"8":{},"24":{},"29":{},"43":{},"45":{},"49":{},"50":{},"51":{}},"component":{}}],["basic_button",{"_index":882,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["basic_latching_button",{"_index":884,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["basic_toggle_button",{"_index":883,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["be",{"_index":942,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["becom",{"_index":61,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["befor",{"_index":276,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{}},"component":{}}],["behavior",{"_index":717,"title":{},"name":{},"text":{"8":{},"9":{},"15":{},"34":{},"50":{},"51":{},"56":{}},"component":{}}],["below",{"_index":574,"title":{},"name":{},"text":{"7":{},"12":{},"15":{},"16":{},"22":{},"23":{},"29":{},"31":{},"34":{},"35":{},"41":{},"42":{},"49":{},"53":{},"56":{},"57":{},"63":{},"64":{}},"component":{}}],["best",{"_index":1111,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["between",{"_index":870,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["beyond",{"_index":1169,"title":{},"name":{},"text":{"17":{},"22":{},"36":{},"41":{},"58":{},"63":{}},"component":{}}],["binari",{"_index":649,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["bit",{"_index":265,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["bkd_color",{"_index":103,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["bl",{"_index":741,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["black",{"_index":303,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["block",{"_index":350,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["blue",{"_index":189,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{},"50":{}},"component":{}}],["blue_rbox",{"_index":198,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["bodi",{"_index":755,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["body_color",{"_index":795,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["body_color(body_color",{"_index":830,"title":{},"name":{},"text":{"8":{}},"component":{}}],["body_color(colors::blu",{"_index":787,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["boilerpl",{"_index":684,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["bool",{"_index":908,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["boolean",{"_index":918,"title":{},"name":{},"text":{"9":{},"10":{},"51":{}},"component":{}}],["boost",{"_index":473,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["boost.fus",{"_index":472,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["boost.phoenix",{"_index":471,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["boost.spirit",{"_index":470,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["bootstrap",{"_index":618,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["border",{"_index":710,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["both",{"_index":556,"title":{},"name":{},"text":{"7":{},"11":{},"15":{},"22":{},"29":{},"30":{},"34":{},"41":{},"49":{},"52":{},"56":{},"63":{}},"component":{}}],["bottom",{"_index":743,"title":{},"name":{},"text":{"8":{},"11":{},"13":{},"16":{},"18":{},"23":{},"30":{},"32":{},"35":{},"37":{},"42":{},"50":{},"52":{},"54":{},"57":{},"59":{},"64":{}},"component":{}}],["box",{"_index":182,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["box(bkd_color",{"_index":108,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["box(colors::black",{"_index":312,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["br",{"_index":742,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["brew",{"_index":591,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["bring",{"_index":627,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["bst",{"_index":727,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.active_body_color(color",{"_index":753,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.align_cent",{"_index":762,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.align_left",{"_index":761,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.align_right",{"_index":763,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.color(color",{"_index":752,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.corner_radius(r",{"_index":765,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.get_active_body_color",{"_index":839,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_body_color",{"_index":837,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_corner_radiu",{"_index":853,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_corner_radius_bottom_left",{"_index":858,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_corner_radius_bottom_right",{"_index":859,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_corner_radius_top_left",{"_index":856,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_corner_radius_top_right",{"_index":857,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_icon",{"_index":843,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_icon_color",{"_index":847,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_icon_plac",{"_index":845,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_label_align",{"_index":849,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_margin",{"_index":851,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_siz",{"_index":834,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_text",{"_index":832,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.get_text_color",{"_index":841,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.icon(icon_id",{"_index":757,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.icon_color(color",{"_index":760,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.icon_left",{"_index":758,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.icon_right",{"_index":759,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.margin(margin",{"_index":764,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.set_active_body_color(color",{"_index":840,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_body_color(color",{"_index":838,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_corner_radiu",{"_index":855,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_corner_radius(r",{"_index":854,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_icon(icon_id",{"_index":844,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_icon_color(color",{"_index":848,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_icon_placement(plac",{"_index":846,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_label_alignment(align",{"_index":850,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_margin(margin",{"_index":852,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_size(s",{"_index":835,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_text(label",{"_index":831,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.set_text_color(color",{"_index":842,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bst.size(s",{"_index":745,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bst.text_color(color",{"_index":756,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["btn",{"_index":782,"title":{},"name":{},"text":{"8":{},"9":{},"50":{},"51":{}},"component":{}}],["btn.on_click",{"_index":896,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["btn.valu",{"_index":920,"title":{},"name":{},"text":{"9":{}},"component":{}}],["btn.value(v",{"_index":919,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["btn.vauel",{"_index":1298,"title":{},"name":{},"text":{"51":{}},"component":{}}],["bts.corner_radius(tl",{"_index":766,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_bottom",{"_index":769,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_bottom(r",{"_index":773,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_corner_bottom_left(r",{"_index":778,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_corner_bottom_right(r",{"_index":779,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_corner_top_left(r",{"_index":776,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_corner_top_right(r",{"_index":777,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_left",{"_index":770,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_left(r",{"_index":774,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_right",{"_index":771,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_right(r",{"_index":775,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_top",{"_index":768,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["bts.rounded_top(r",{"_index":772,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["build",{"_index":42,"title":{"7-27":{},"7-28":{},"29-27":{},"29-28":{},"49-27":{},"49-28":{}},"name":{},"text":{"1":{},"3":{},"5":{},"7":{},"12":{},"15":{},"16":{},"23":{},"24":{},"27":{},"29":{},"31":{},"34":{},"35":{},"42":{},"43":{},"45":{},"47":{},"49":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["buttion",{"_index":1280,"title":{},"name":{},"text":{"50":{}},"component":{}}],["button",{"_index":698,"title":{"8":{},"9":{},"51":{},"8-7":{},"8-11":{},"8-12":{},"8-13":{},"9-16":{},"50-6":{},"51-20":{}},"name":{"9":{},"51":{}},"text":{"8":{},"9":{},"10":{},"50":{},"51":{}},"component":{}}],["button_corner_radiu",{"_index":806,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["button_margin",{"_index":804,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["button_st",{"_index":861,"title":{"9-17":{},"51-21":{}},"name":{},"text":{"9":{},"51":{}},"component":{}}],["button_styl",{"_index":707,"title":{},"name":{"8":{},"50":{}},"text":{},"component":{}}],["button_styler{\"lock",{"_index":786,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["button_styler{\"mi",{"_index":784,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["button_styler{\"round",{"_index":789,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["button_styler{label",{"_index":744,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["button_styler{std::move(label",{"_index":828,"title":{},"name":{},"text":{"8":{}},"component":{}}],["buttonstyl",{"_index":724,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["button’",{"_index":716,"title":{},"name":{},"text":{"8":{},"9":{},"50":{},"51":{}},"component":{}}],["bzip2",{"_index":582,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["c",{"_index":18,"title":{"5":{},"27":{},"47":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["c++17",{"_index":404,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["c++20",{"_index":527,"title":{"7-2":{},"29-2":{},"49-2":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["c.push_back(share(child",{"_index":1084,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["c:\\program",{"_index":620,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["cairo",{"_index":579,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["call",{"_index":132,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["callabl",{"_index":890,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["callback",{"_index":893,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["captur",{"_index":935,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["case",{"_index":154,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["catalogu",{"_index":1016,"title":{},"name":{},"text":{"11":{},"18":{},"20":{},"30":{},"37":{},"39":{},"52":{},"59":{},"61":{}},"component":{}}],["cd",{"_index":594,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["cell",{"_index":517,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["center",{"_index":210,"title":{},"name":{},"text":{"1":{},"8":{},"11":{},"24":{},"30":{},"43":{},"50":{},"52":{}},"component":{}}],["certain",{"_index":143,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["chain",{"_index":780,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["chanc",{"_index":1062,"title":{},"name":{},"text":{"12":{},"16":{},"31":{},"35":{},"53":{},"57":{}},"component":{}}],["chang",{"_index":929,"title":{},"name":{},"text":{"9":{},"14":{},"19":{},"33":{},"38":{},"51":{},"55":{},"60":{}},"component":{}}],["char",{"_index":113,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["checkbox",{"_index":881,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["child",{"_index":162,"title":{},"name":{},"text":{"1":{},"6":{},"12":{},"14":{},"15":{},"16":{},"23":{},"24":{},"28":{},"31":{},"33":{},"34":{},"35":{},"42":{},"43":{},"48":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["children",{"_index":497,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"16":{},"23":{},"28":{},"33":{},"34":{},"35":{},"42":{},"48":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["children’",{"_index":1267,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["child’",{"_index":1095,"title":{},"name":{},"text":{"14":{},"23":{},"33":{},"42":{},"55":{},"64":{}},"component":{}}],["choos",{"_index":612,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["clamp",{"_index":1117,"title":{},"name":{},"text":{"15":{},"16":{},"34":{},"35":{},"56":{},"57":{}},"component":{}}],["clang",{"_index":557,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["class",{"_index":141,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"9":{},"10":{},"24":{},"43":{},"45":{},"50":{},"51":{}},"component":{}}],["clear",{"_index":85,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["click",{"_index":611,"title":{"9-6":{},"51-7":{}},"name":{},"text":{"7":{},"9":{},"16":{},"29":{},"35":{},"49":{},"51":{},"57":{}},"component":{}}],["client",{"_index":169,"title":{},"name":{},"text":{"1":{},"9":{},"12":{},"14":{},"15":{},"16":{},"23":{},"24":{},"31":{},"33":{},"34":{},"35":{},"42":{},"43":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["clion",{"_index":560,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["clone",{"_index":565,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["close",{"_index":133,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["cmake",{"_index":529,"title":{"7-4":{},"7-8":{},"7-9":{},"7-13":{},"7-14":{},"7-19":{},"7-20":{},"7-24":{},"7-25":{},"29-4":{},"29-8":{},"29-9":{},"29-13":{},"29-14":{},"29-19":{},"29-20":{},"29-24":{},"29-25":{},"49-4":{},"49-8":{},"49-9":{},"49-13":{},"49-14":{},"49-19":{},"49-20":{},"49-24":{},"49-25":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["cmake_toolchain_file=c:/vcpkg/scripts/buildsystems/vcpkg.cmak",{"_index":637,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["cmake_xcode_attribute_code_signing_allow",{"_index":603,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["cmakelists.txt",{"_index":562,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["co",{"_index":75,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["code",{"_index":50,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"24":{},"27":{},"29":{},"43":{},"47":{},"49":{},"50":{}},"component":{}}],["collabor",{"_index":477,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["collect",{"_index":292,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["color",{"_index":100,"title":{},"name":{},"text":{"1":{},"8":{},"10":{},"24":{},"43":{},"50":{}},"component":{}}],["column",{"_index":489,"title":{},"name":{},"text":{"6":{},"15":{},"21":{},"23":{},"28":{},"34":{},"40":{},"42":{},"48":{},"56":{},"62":{},"64":{}},"component":{}}],["combin",{"_index":518,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["command",{"_index":629,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["common",{"_index":341,"title":{},"name":{"2":{},"25":{},"44":{}},"text":{"7":{},"9":{},"29":{},"49":{},"51":{}},"component":{}}],["commonli",{"_index":811,"title":{},"name":{},"text":{"8":{}},"component":{}}],["commun",{"_index":926,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["compar",{"_index":1256,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["compil",{"_index":544,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"29":{},"49":{}},"component":{}}],["complet",{"_index":323,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["complex",{"_index":31,"title":{},"name":{},"text":{"1":{},"12":{},"15":{},"16":{},"23":{},"24":{},"31":{},"34":{},"35":{},"42":{},"43":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["compon",{"_index":77,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["compos",{"_index":235,"title":{},"name":{},"text":{"1":{},"5":{},"15":{},"23":{},"24":{},"27":{},"34":{},"42":{},"43":{},"47":{},"56":{},"64":{}},"component":{}}],["composit",{"_index":26,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"15":{},"16":{},"23":{},"24":{},"31":{},"33":{},"34":{},"35":{},"42":{},"43":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["composite’",{"_index":1080,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["comprehens",{"_index":479,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"20":{},"28":{},"30":{},"37":{},"39":{},"48":{},"52":{},"59":{},"61":{}},"component":{}}],["comput",{"_index":1113,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"34":{},"35":{},"42":{},"56":{},"57":{},"64":{}},"component":{}}],["concept",{"_index":342,"title":{"3-2":{},"8-3":{},"9-3":{},"10-3":{},"45-2":{},"51-3":{}},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"45":{},"51":{}},"component":{}}],["config",{"_index":578,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["conform",{"_index":388,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"45":{},"51":{}},"component":{}}],["consist",{"_index":521,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["const",{"_index":112,"title":{},"name":{},"text":{"1":{},"21":{},"22":{},"24":{},"40":{},"41":{},"43":{},"62":{},"63":{}},"component":{}}],["constantli",{"_index":296,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["constexpr",{"_index":102,"title":{},"name":{},"text":{"1":{},"17":{},"24":{},"36":{},"43":{},"58":{}},"component":{}}],["constitu",{"_index":252,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["constrain",{"_index":228,"title":{},"name":{},"text":{"1":{},"3":{},"13":{},"20":{},"24":{},"32":{},"39":{},"43":{},"45":{},"54":{},"61":{}},"component":{}}],["constraint",{"_index":1168,"title":{},"name":{},"text":{"17":{},"18":{},"36":{},"37":{},"58":{},"59":{}},"component":{}}],["construct",{"_index":157,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["contain",{"_index":175,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"7":{},"12":{},"14":{},"15":{},"16":{},"23":{},"24":{},"28":{},"29":{},"31":{},"33":{},"34":{},"35":{},"42":{},"43":{},"45":{},"48":{},"49":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["content",{"_index":161,"title":{},"name":{},"text":{"1":{},"14":{},"24":{},"33":{},"43":{},"55":{}},"component":{}}],["context",{"_index":1167,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["contrast",{"_index":52,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["control",{"_index":56,"title":{},"name":{},"text":{"1":{},"7":{},"12":{},"16":{},"24":{},"29":{},"31":{},"35":{},"43":{},"49":{},"53":{},"57":{}},"component":{}}],["conveni",{"_index":701,"title":{"8-8":{}},"name":{},"text":{"8":{}},"component":{}}],["convert",{"_index":375,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["coordin",{"_index":495,"title":{},"name":{},"text":{"6":{},"13":{},"15":{},"16":{},"17":{},"28":{},"32":{},"34":{},"35":{},"36":{},"48":{},"54":{},"56":{},"57":{},"58":{}},"component":{}}],["copi",{"_index":391,"title":{},"name":{},"text":{"3":{},"7":{},"29":{},"45":{},"49":{}},"component":{}}],["copyright",{"_index":329,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["corner",{"_index":196,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{},"50":{}},"component":{}}],["corner_radiu",{"_index":805,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["corner_radius_bottom_left",{"_index":809,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["corner_radius_bottom_right",{"_index":810,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["corner_radius_top_left",{"_index":807,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["corner_radius_top_right",{"_index":808,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["correct",{"_index":513,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["correspond",{"_index":825,"title":{},"name":{},"text":{"8":{}},"component":{}}],["counterpart",{"_index":683,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["coupl",{"_index":73,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"8":{},"10":{},"24":{},"29":{},"43":{},"45":{},"49":{}},"component":{}}],["creat",{"_index":126,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"9":{},"10":{},"12":{},"14":{},"16":{},"23":{},"24":{},"28":{},"31":{},"33":{},"35":{},"42":{},"43":{},"48":{},"50":{},"51":{},"53":{},"55":{},"57":{},"64":{}},"component":{}}],["creation",{"_index":423,"title":{},"name":{},"text":{"5":{},"8":{},"27":{},"47":{},"50":{}},"component":{}}],["creativ",{"_index":322,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["crop",{"_index":1120,"title":{},"name":{},"text":{"15":{},"16":{},"34":{},"35":{},"56":{},"57":{}},"component":{}}],["current",{"_index":547,"title":{},"name":{},"text":{"7":{},"9":{},"29":{},"49":{},"51":{}},"component":{}}],["custom",{"_index":356,"title":{},"name":{},"text":{"3":{},"9":{},"10":{},"45":{},"51":{}},"component":{}}],["cycfi",{"_index":458,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["cycfi::artist::color",{"_index":326,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["cycfi::artist::rgba",{"_index":325,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["cycfi::el",{"_index":97,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["c{posit",{"_index":1138,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["d",{"_index":636,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["dark",{"_index":88,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["data",{"_index":1165,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["dcmake_xcode_attribute_code_signing_allowed=no",{"_index":605,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["de",{"_index":333,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["deal",{"_index":354,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["dealt",{"_index":287,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["debian",{"_index":663,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["deck",{"_index":1056,"title":{"12":{},"53":{},"12-3":{},"31-1":{},"31-4":{},"53-3":{}},"name":{"12":{},"31":{},"53":{}},"text":{"12":{},"31":{},"53":{}},"component":{}}],["deck(e1",{"_index":1069,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["deck(item1",{"_index":1073,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["deck_composit",{"_index":1057,"title":{"12-8":{},"31-9":{},"53-8":{}},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["declar",{"_index":35,"title":{"8-2":{},"9-2":{},"10-2":{},"17-3":{},"36-3":{},"51-2":{},"58-3":{}},"name":{},"text":{"1":{},"5":{},"22":{},"24":{},"27":{},"41":{},"43":{},"47":{},"63":{}},"component":{}}],["deep",{"_index":266,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["default",{"_index":700,"title":{"8-7":{},"10-10":{},"10-11":{},"50-6":{}},"name":{},"text":{"8":{},"10":{},"12":{},"15":{},"17":{},"19":{},"21":{},"22":{},"31":{},"34":{},"36":{},"38":{},"40":{},"41":{},"50":{},"51":{},"53":{},"56":{},"58":{},"60":{},"62":{},"63":{}},"component":{}}],["default_button_color",{"_index":796,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["default_button_styl",{"_index":718,"title":{},"name":{},"text":{"8":{}},"component":{}}],["default_label_styl",{"_index":954,"title":{},"name":{},"text":{"10":{}},"component":{}}],["defin",{"_index":708,"title":{},"name":{},"text":{"8":{},"9":{},"17":{},"36":{},"50":{},"51":{},"58":{}},"component":{}}],["deleg",{"_index":874,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["delements_host_ui_library=gtk",{"_index":661,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["delements_root=\"../el",{"_index":697,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["delements_root=\"path/to/el",{"_index":692,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["demonstr",{"_index":83,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["depend",{"_index":576,"title":{},"name":{},"text":{"7":{},"15":{},"17":{},"23":{},"29":{},"34":{},"36":{},"42":{},"49":{},"56":{},"58":{},"64":{}},"component":{}}],["depict",{"_index":1102,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["deriv",{"_index":364,"title":{},"name":{},"text":{"3":{},"7":{},"8":{},"10":{},"29":{},"45":{},"49":{}},"component":{}}],["descript",{"_index":412,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["descriptor",{"_index":957,"title":{},"name":{},"text":{"10":{}},"component":{}}],["design",{"_index":14,"title":{"1":{},"24":{},"43":{}},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["desir",{"_index":593,"title":{},"name":{},"text":{"7":{},"8":{},"10":{},"29":{},"49":{},"50":{}},"component":{}}],["detail",{"_index":509,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["determin",{"_index":1101,"title":{},"name":{},"text":{"14":{},"17":{},"21":{},"22":{},"33":{},"36":{},"40":{},"41":{},"55":{},"58":{},"62":{},"63":{}},"component":{}}],["dev",{"_index":667,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["develop",{"_index":41,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"24":{},"27":{},"28":{},"29":{},"43":{},"47":{},"48":{},"49":{}},"component":{}}],["devic",{"_index":525,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["dictat",{"_index":746,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["differ",{"_index":524,"title":{},"name":{},"text":{"6":{},"7":{},"9":{},"28":{},"29":{},"48":{},"49":{},"51":{}},"component":{}}],["digit",{"_index":444,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["dimens",{"_index":1015,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"22":{},"30":{},"34":{},"35":{},"36":{},"41":{},"52":{},"56":{},"57":{},"58":{},"63":{}},"component":{}}],["directli",{"_index":156,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["directori",{"_index":595,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["disabl",{"_index":602,"title":{},"name":{},"text":{"7":{},"10":{},"29":{},"49":{}},"component":{}}],["discuss",{"_index":277,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["display",{"_index":947,"title":{},"name":{},"text":{"10":{}},"component":{}}],["distort",{"_index":449,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["distribut",{"_index":337,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["distro",{"_index":650,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["document",{"_index":82,"title":{"5-2":{},"27-2":{},"47-2":{}},"name":{},"text":{"1":{},"3":{},"6":{},"8":{},"17":{},"24":{},"28":{},"36":{},"43":{},"45":{},"48":{},"50":{},"58":{}},"component":{}}],["dog",{"_index":304,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["domain",{"_index":408,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["done",{"_index":927,"title":{},"name":{},"text":{"9":{},"16":{},"35":{},"51":{},"57":{}},"component":{}}],["down",{"_index":1217,"title":{},"name":{},"text":{"19":{},"38":{},"60":{}},"component":{}}],["download",{"_index":651,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["drag",{"_index":588,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["draw",{"_index":165,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["drawn",{"_index":1061,"title":{},"name":{},"text":{"12":{},"16":{},"31":{},"35":{},"53":{},"57":{}},"component":{}}],["dsel",{"_index":410,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["dynam",{"_index":1078,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"23":{},"31":{},"33":{},"35":{},"42":{},"53":{},"55":{},"57":{},"64":{}},"component":{}}],["e",{"_index":385,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["e.g",{"_index":145,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["e1,...en",{"_index":1067,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"31":{},"34":{},"35":{},"53":{},"56":{},"57":{}},"component":{}}],["e2",{"_index":1070,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["e3",{"_index":1071,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["each",{"_index":501,"title":{},"name":{},"text":{"6":{},"7":{},"8":{},"9":{},"14":{},"15":{},"17":{},"23":{},"28":{},"29":{},"33":{},"34":{},"36":{},"42":{},"48":{},"49":{},"50":{},"51":{},"55":{},"56":{},"58":{},"64":{}},"component":{}}],["easi",{"_index":80,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["easier",{"_index":269,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["easili",{"_index":690,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["edg",{"_index":899,"title":{},"name":{},"text":{"9":{}},"component":{}}],["editor",{"_index":418,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["effect",{"_index":446,"title":{},"name":{},"text":{"5":{},"22":{},"27":{},"41":{},"47":{},"63":{}},"component":{}}],["effici",{"_index":45,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["effort",{"_index":478,"title":{},"name":{},"text":{"5":{},"8":{},"27":{},"47":{}},"component":{}}],["electron",{"_index":438,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["element",{"_index":17,"title":{"3":{},"5":{},"27":{},"30":{},"37":{},"39":{},"41":{},"45":{},"47":{}},"name":{"3":{},"45":{}},"text":{"1":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}}}],["element_const_ptr",{"_index":381,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["element_ptr",{"_index":379,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"45":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["elementptr",{"_index":365,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["elements.sln",{"_index":639,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["elements.xcodeproj",{"_index":606,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["element’",{"_index":491,"title":{},"name":{},"text":{"6":{},"7":{},"15":{},"16":{},"18":{},"21":{},"22":{},"28":{},"29":{},"34":{},"35":{},"37":{},"40":{},"41":{},"48":{},"49":{},"56":{},"57":{},"59":{},"62":{},"63":{}},"component":{}}],["emb",{"_index":155,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["embed",{"_index":409,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["embedd",{"_index":419,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["emphasi",{"_index":38,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["empti",{"_index":172,"title":{},"name":{},"text":{"1":{},"7":{},"17":{},"24":{},"29":{},"36":{},"43":{},"49":{},"58":{}},"component":{}}],["en",{"_index":1072,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["enabl",{"_index":506,"title":{},"name":{},"text":{"6":{},"9":{},"10":{},"28":{},"48":{},"51":{}},"component":{}}],["enable/dis",{"_index":860,"title":{"9-10":{},"10-7":{},"51-12":{}},"name":{},"text":{},"component":{}}],["enclos",{"_index":1017,"title":{},"name":{},"text":{"11":{},"13":{},"18":{},"19":{},"20":{},"21":{},"22":{},"30":{},"32":{},"37":{},"38":{},"39":{},"40":{},"41":{},"52":{},"54":{},"59":{},"60":{},"61":{},"62":{},"63":{}},"component":{}}],["end",{"_index":1097,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["engin",{"_index":457,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["enjoy",{"_index":448,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["ensur",{"_index":512,"title":{},"name":{},"text":{"6":{},"15":{},"16":{},"28":{},"34":{},"35":{},"48":{},"56":{},"57":{}},"component":{}}],["entir",{"_index":59,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["environ",{"_index":575,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["ep",{"_index":387,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["equival",{"_index":1027,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["error",{"_index":836,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["essenti",{"_index":1079,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["etc",{"_index":259,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["even",{"_index":211,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["event",{"_index":137,"title":{},"name":{},"text":{"1":{},"3":{},"5":{},"9":{},"16":{},"24":{},"27":{},"35":{},"43":{},"45":{},"47":{},"51":{},"57":{}},"component":{}}],["everyth",{"_index":440,"title":{},"name":{},"text":{"5":{},"12":{},"27":{},"31":{},"47":{},"53":{}},"component":{}}],["everywher",{"_index":1266,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["exactli",{"_index":1090,"title":{},"name":{},"text":{"13":{},"32":{},"54":{}},"component":{}}],["exampl",{"_index":2,"title":{"1-2":{},"7-27":{},"8-6":{},"9-9":{},"10-6":{},"11-5":{},"11-18":{},"12-6":{},"12-11":{},"14-5":{},"15-7":{},"15-13":{},"15-20":{},"15-26":{},"16-6":{},"16-10":{},"17-6":{},"23-7":{},"23-11":{},"23-17":{},"23-21":{},"24-2":{},"29-27":{},"30-6":{},"30-23":{},"31-7":{},"31-12":{},"33-5":{},"34-7":{},"34-13":{},"34-20":{},"34-26":{},"35-6":{},"35-11":{},"36-6":{},"42-7":{},"42-12":{},"42-18":{},"42-23":{},"43-2":{},"49-27":{},"50-5":{},"51-11":{},"52-6":{},"52-23":{},"53-6":{},"53-11":{},"55-5":{},"56-7":{},"56-13":{},"56-20":{},"56-26":{},"57-6":{},"57-11":{},"58-6":{},"64-7":{},"64-12":{},"64-18":{},"64-23":{}},"name":{},"text":{"1":{},"7":{},"8":{},"22":{},"24":{},"29":{},"41":{},"43":{},"49":{},"63":{}},"component":{}}],["exce",{"_index":1269,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["exceed",{"_index":1121,"title":{},"name":{},"text":{"15":{},"16":{},"34":{},"35":{},"56":{},"57":{}},"component":{}}],["except",{"_index":239,"title":{},"name":{},"text":{"1":{},"12":{},"24":{},"31":{},"43":{},"53":{}},"component":{}}],["exclus",{"_index":413,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["exist",{"_index":76,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["expat",{"_index":583,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["expos",{"_index":46,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["express",{"_index":348,"title":{"3-6":{},"8-5":{},"8-10":{},"8-16":{},"9-5":{},"9-8":{},"9-12":{},"9-15":{},"10-5":{},"10-9":{},"10-14":{},"11-4":{},"11-8":{},"11-11":{},"11-14":{},"11-17":{},"11-21":{},"11-24":{},"11-27":{},"11-30":{},"11-33":{},"11-36":{},"11-39":{},"11-42":{},"11-45":{},"11-48":{},"11-51":{},"11-54":{},"12-5":{},"12-10":{},"13-4":{},"14-4":{},"14-8":{},"15-6":{},"15-12":{},"15-19":{},"15-25":{},"16-5":{},"16-9":{},"17-7":{},"18-4":{},"18-7":{},"18-10":{},"18-13":{},"18-16":{},"18-18":{},"18-21":{},"18-24":{},"18-27":{},"18-30":{},"18-33":{},"19-4":{},"20-4":{},"20-7":{},"20-10":{},"20-13":{},"20-16":{},"20-19":{},"20-22":{},"20-25":{},"20-28":{},"20-31":{},"21-4":{},"22-4":{},"22-7":{},"23-6":{},"23-10":{},"23-16":{},"23-20":{},"30-4":{},"30-9":{},"30-13":{},"30-17":{},"30-21":{},"30-26":{},"30-30":{},"30-34":{},"30-38":{},"30-42":{},"30-46":{},"30-50":{},"30-54":{},"30-58":{},"30-62":{},"30-66":{},"30-70":{},"31-6":{},"31-11":{},"32-4":{},"33-4":{},"33-8":{},"34-6":{},"34-12":{},"34-19":{},"34-25":{},"35-5":{},"35-10":{},"36-7":{},"37-4":{},"37-8":{},"37-12":{},"37-16":{},"37-20":{},"37-23":{},"37-27":{},"37-31":{},"37-35":{},"37-39":{},"37-43":{},"38-4":{},"39-4":{},"39-8":{},"39-12":{},"39-16":{},"39-20":{},"39-24":{},"39-28":{},"39-32":{},"39-36":{},"39-40":{},"40-4":{},"41-4":{},"41-8":{},"42-6":{},"42-11":{},"42-17":{},"42-22":{},"45-6":{},"50-3":{},"51-5":{},"51-9":{},"51-14":{},"51-18":{},"52-4":{},"52-9":{},"52-13":{},"52-17":{},"52-21":{},"52-26":{},"52-30":{},"52-34":{},"52-38":{},"52-42":{},"52-46":{},"52-50":{},"52-54":{},"52-58":{},"52-62":{},"52-66":{},"52-70":{},"53-5":{},"53-10":{},"54-4":{},"55-4":{},"55-8":{},"56-6":{},"56-12":{},"56-19":{},"56-25":{},"57-5":{},"57-10":{},"58-7":{},"59-4":{},"59-8":{},"59-12":{},"59-16":{},"59-20":{},"59-23":{},"59-27":{},"59-31":{},"59-35":{},"59-39":{},"59-43":{},"60-4":{},"61-4":{},"61-8":{},"61-12":{},"61-16":{},"61-20":{},"61-24":{},"61-28":{},"61-32":{},"61-36":{},"61-40":{},"62-4":{},"63-4":{},"63-8":{},"64-6":{},"64-11":{},"64-17":{},"64-22":{}},"name":{},"text":{"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"36":{},"50":{},"58":{}},"component":{}}],["extend",{"_index":516,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["extent",{"_index":1160,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["extern",{"_index":416,"title":{},"name":{},"text":{"5":{},"15":{},"27":{},"34":{},"47":{},"56":{}},"component":{}}],["extra",{"_index":1249,"title":{},"name":{},"text":{"22":{},"23":{},"41":{},"42":{},"63":{},"64":{}},"component":{}}],["extrem",{"_index":24,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["f",{"_index":892,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["facil",{"_index":377,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["facilit",{"_index":25,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["fals",{"_index":902,"title":{},"name":{},"text":{"9":{},"10":{},"51":{}},"component":{}}],["familiar",{"_index":62,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["favorit",{"_index":247,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["featur",{"_index":406,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["feel",{"_index":675,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["few",{"_index":431,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["field",{"_index":951,"title":{},"name":{},"text":{"10":{}},"component":{}}],["file",{"_index":432,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["fill",{"_index":1098,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["final",{"_index":263,"title":{},"name":{},"text":{"1":{},"15":{},"16":{},"24":{},"34":{},"35":{},"43":{},"56":{},"57":{}},"component":{}}],["find",{"_index":633,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["find_packag",{"_index":632,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["fine",{"_index":27,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["finger",{"_index":687,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["first",{"_index":442,"title":{},"name":{},"text":{"5":{},"15":{},"16":{},"27":{},"34":{},"35":{},"47":{},"56":{},"57":{}},"component":{}}],["fit",{"_index":499,"title":{},"name":{},"text":{"6":{},"14":{},"28":{},"33":{},"48":{},"55":{}},"component":{}}],["fix",{"_index":229,"title":{},"name":{},"text":{"1":{},"12":{},"15":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"31":{},"34":{},"35":{},"36":{},"39":{},"41":{},"42":{},"43":{},"53":{},"56":{},"57":{},"58":{},"61":{},"63":{},"64":{}},"component":{}}],["fixed_s",{"_index":220,"title":{"20-5":{},"39-6":{},"61-6":{}},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["fixed_size({width",{"_index":1232,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["flexibl",{"_index":715,"title":{},"name":{},"text":{"8":{},"9":{},"17":{},"36":{},"50":{},"51":{},"58":{}},"component":{}}],["float",{"_index":484,"title":{"13":{},"32":{},"54":{},"13-2":{},"32-2":{},"54-2":{}},"name":{"13":{},"32":{},"54":{}},"text":{"6":{},"8":{},"10":{},"11":{},"13":{},"15":{},"18":{},"19":{},"20":{},"22":{},"28":{},"30":{},"32":{},"34":{},"37":{},"38":{},"39":{},"41":{},"48":{},"50":{},"52":{},"54":{},"56":{},"59":{},"60":{},"61":{},"63":{}},"component":{}}],["float[n",{"_index":1123,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["floating({left",{"_index":1089,"title":{},"name":{},"text":{"13":{},"32":{},"54":{}},"component":{}}],["flow",{"_index":57,"title":{"14":{},"33":{},"55":{},"14-6":{},"33-6":{},"55-6":{}},"name":{"14":{},"33":{},"55":{}},"text":{"1":{},"6":{},"14":{},"24":{},"28":{},"33":{},"43":{},"48":{},"55":{}},"component":{}}],["flow(c",{"_index":1105,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["flow_composit",{"_index":1093,"title":{"14-2":{},"33-2":{},"55-2":{}},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["fluidli",{"_index":686,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"29":{},"34":{},"42":{},"49":{},"56":{},"64":{}},"component":{}}],["flyweight",{"_index":29,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["focu",{"_index":352,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["follow",{"_index":571,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"10":{},"14":{},"15":{},"23":{},"29":{},"33":{},"34":{},"42":{},"49":{},"51":{},"55":{},"56":{},"64":{}},"component":{}}],["font",{"_index":953,"title":{},"name":{},"text":{"10":{}},"component":{}}],["font(font_descr{\"open",{"_index":969,"title":{},"name":{},"text":{"10":{}},"component":{}}],["font_color",{"_index":980,"title":{},"name":{},"text":{"10":{}},"component":{}}],["font_color(colors::antique_whit",{"_index":971,"title":{},"name":{},"text":{"10":{}},"component":{}}],["font_descr",{"_index":958,"title":{},"name":{},"text":{"10":{}},"component":{}}],["font_siz",{"_index":977,"title":{},"name":{},"text":{"10":{}},"component":{}}],["font_size(18",{"_index":972,"title":{},"name":{},"text":{"10":{}},"component":{}}],["fontconfig",{"_index":580,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["forward",{"_index":824,"title":{},"name":{},"text":{"8":{}},"component":{}}],["found",{"_index":92,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["fraction",{"_index":1110,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["framework",{"_index":71,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["free",{"_index":676,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["freetype2",{"_index":581,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["full",{"_index":504,"title":{},"name":{},"text":{"6":{},"14":{},"17":{},"28":{},"33":{},"36":{},"48":{},"55":{},"58":{}},"component":{}}],["full_ext",{"_index":1161,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["full_limit",{"_index":1155,"title":{"17-5":{},"36-5":{},"58-5":{}},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["fun",{"_index":298,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["function",{"_index":361,"title":{"8-8":{}},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"21":{},"22":{},"40":{},"41":{},"45":{},"50":{},"51":{},"62":{},"63":{}},"component":{}}],["funni",{"_index":316,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["funny_slid",{"_index":313,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["g",{"_index":558,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["g\"nmake",{"_index":648,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["g\"visual",{"_index":634,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["galleri",{"_index":397,"title":{"4":{},"26":{},"46":{}},"name":{"4":{},"26":{},"46":{}},"text":{"5":{},"27":{},"47":{}},"component":{}}],["gener",{"_index":58,"title":{"7-9":{},"7-14":{},"7-20":{},"7-25":{},"29-9":{},"29-14":{},"29-20":{},"29-25":{},"49-9":{},"49-14":{},"49-20":{},"49-25":{}},"name":{},"text":{"1":{},"5":{},"7":{},"24":{},"27":{},"29":{},"43":{},"47":{},"49":{}},"component":{}}],["get",{"_index":264,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{}},"component":{}}],["get(ep",{"_index":390,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["get_theme().default_button_color",{"_index":827,"title":{},"name":{},"text":{"8":{}},"component":{}}],["getter",{"_index":705,"title":{"8-14":{},"10-12":{}},"name":{},"text":{},"component":{}}],["git",{"_index":528,"title":{"7-3":{},"29-3":{},"49-3":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["give",{"_index":209,"title":{},"name":{},"text":{"1":{},"17":{},"24":{},"36":{},"43":{},"58":{}},"component":{}}],["given",{"_index":158,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"10":{},"11":{},"12":{},"15":{},"16":{},"18":{},"19":{},"21":{},"22":{},"23":{},"24":{},"30":{},"31":{},"34":{},"35":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"50":{},"51":{},"52":{},"53":{},"56":{},"57":{},"59":{},"60":{},"62":{},"63":{},"64":{}},"component":{}}],["global",{"_index":732,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["go",{"_index":321,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["goal",{"_index":237,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["grain",{"_index":28,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["graphic",{"_index":177,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"17":{},"24":{},"29":{},"33":{},"36":{},"43":{},"49":{},"55":{},"58":{}},"component":{}}],["gray",{"_index":973,"title":{},"name":{},"text":{"10":{}},"component":{}}],["greater",{"_index":714,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"15":{},"16":{},"34":{},"35":{},"50":{},"51":{},"56":{},"57":{}},"component":{}}],["grey",{"_index":89,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["grid",{"_index":483,"title":{"15":{},"34":{},"56":{},"15-2":{},"15-15":{},"34-2":{},"34-15":{},"56-2":{},"56-15":{}},"name":{"15":{},"34":{},"56":{}},"text":{"6":{},"15":{},"21":{},"28":{},"34":{},"40":{},"48":{},"56":{},"62":{}},"component":{}}],["grid’",{"_index":1116,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["groundwork",{"_index":589,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["group",{"_index":1145,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["grow",{"_index":297,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["gtk",{"_index":535,"title":{"7-17":{},"29-17":{},"49-17":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["gtk3",{"_index":660,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["gui",{"_index":19,"title":{"5":{},"27":{},"47":{},"7-15":{},"29-15":{},"49-15":{}},"name":{},"text":{"1":{},"5":{},"7":{},"23":{},"24":{},"27":{},"29":{},"42":{},"43":{},"47":{},"49":{},"64":{}},"component":{}}],["guid",{"_index":654,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["guitar",{"_index":445,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["guzman",{"_index":334,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["gxcode",{"_index":598,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["half",{"_index":1263,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["halign",{"_index":999,"title":{"11-2":{},"30-2":{},"52-2":{}},"name":{},"text":{},"component":{}}],["halign(0.0",{"_index":1023,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["halign(0.5",{"_index":1025,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["halign(1.0",{"_index":1024,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["halign(align",{"_index":1018,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["handl",{"_index":362,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"45":{},"50":{},"51":{}},"component":{}}],["hassl",{"_index":694,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["have",{"_index":599,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["head",{"_index":946,"title":{"10-11":{}},"name":{},"text":{"10":{}},"component":{}}],["heading(str",{"_index":960,"title":{},"name":{},"text":{"10":{}},"component":{}}],["heading_font",{"_index":983,"title":{},"name":{},"text":{"10":{}},"component":{}}],["heading_font.s",{"_index":984,"title":{},"name":{},"text":{"10":{}},"component":{}}],["heading_font_color",{"_index":985,"title":{},"name":{},"text":{"10":{}},"component":{}}],["heading_text_align",{"_index":986,"title":{},"name":{},"text":{"10":{}},"component":{}}],["heavi",{"_index":37,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["height",{"_index":1100,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"33":{},"36":{},"39":{},"55":{},"58":{},"61":{}},"component":{}}],["held",{"_index":370,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"45":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["hello",{"_index":681,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["hello_univers",{"_index":680,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["here",{"_index":91,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["here’",{"_index":242,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["hey",{"_index":308,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["hgrid",{"_index":1106,"title":{"15-4":{},"34-4":{},"56-4":{}},"name":{},"text":{},"component":{}}],["hgrid(posit",{"_index":1124,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["hgrid_composit",{"_index":1107,"title":{"15-10":{},"34-10":{},"56-10":{}},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["hide",{"_index":1148,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["hierarch",{"_index":1088,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"35":{},"42":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["hierarchi",{"_index":32,"title":{},"name":{},"text":{"1":{},"3":{},"24":{},"43":{},"45":{}},"component":{}}],["higher",{"_index":546,"title":{},"name":{},"text":{"7":{},"16":{},"29":{},"35":{},"49":{},"57":{}},"component":{}}],["highli",{"_index":467,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["highlight",{"_index":938,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["hilit",{"_index":933,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["hint",{"_index":1159,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["hmargin",{"_index":1183,"title":{"18-17":{},"37-22":{},"59-22":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["hmargin(left",{"_index":1200,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["hmargin({left",{"_index":1199,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["hmax_siz",{"_index":1228,"title":{"20-26":{},"39-34":{},"61-34":{}},"name":{},"text":{},"component":{}}],["hmax_size(width",{"_index":1278,"title":{},"name":{},"text":{"39":{},"61":{}},"component":{}}],["hmin_siz",{"_index":1225,"title":{"20-17":{},"39-22":{},"61-22":{}},"name":{},"text":{},"component":{}}],["hmin_size(width",{"_index":1237,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["hog",{"_index":208,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["hold",{"_index":271,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["home",{"_index":453,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["homebrew",{"_index":590,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["homogen",{"_index":373,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["horizont",{"_index":318,"title":{"15-2":{},"23-2":{},"34-2":{},"42-2":{},"56-2":{},"64-2":{}},"name":{},"text":{"1":{},"11":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"24":{},"30":{},"33":{},"34":{},"35":{},"36":{},"39":{},"40":{},"41":{},"42":{},"43":{},"52":{},"55":{},"56":{},"57":{},"58":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["host",{"_index":79,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["hover",{"_index":940,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["hsize",{"_index":1222,"title":{"20-8":{},"39-10":{},"61-10":{}},"name":{},"text":{},"component":{}}],["hsize(10",{"_index":311,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["hsize(width",{"_index":1233,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["hstretch",{"_index":1246,"title":{"22-2":{},"41-2":{},"63-2":{}},"name":{},"text":{},"component":{}}],["hstretch(stretch",{"_index":1258,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["htile",{"_index":1250,"title":{"23-4":{},"42-4":{},"64-4":{}},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["htile(e1,...en",{"_index":1271,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["htile(item1",{"_index":1272,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["htile_composit",{"_index":1264,"title":{"23-8":{},"42-9":{},"64-9":{}},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["html",{"_index":65,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["https://github.com/cycfi/elements.git",{"_index":568,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["https://github.com/cycfi/elements/tree/master/examples/doc_aspect",{"_index":94,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["https://github.com/microsoft/vcpkg",{"_index":623,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["huge",{"_index":1162,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["icon",{"_index":711,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon(icons::left_circl",{"_index":791,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon_color",{"_index":802,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon_font",{"_index":734,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon_id",{"_index":729,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon_left",{"_index":792,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon_non",{"_index":801,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["icon_plac",{"_index":800,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["id",{"_index":550,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["ident",{"_index":609,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["illustr",{"_index":283,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["imag",{"_index":1259,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["immedi",{"_index":693,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"29":{},"34":{},"42":{},"49":{},"56":{},"64":{}},"component":{}}],["imper",{"_index":53,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["implement",{"_index":353,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"17":{},"36":{},"45":{},"51":{},"58":{}},"component":{}}],["impli",{"_index":421,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["import",{"_index":152,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["includ",{"_index":95,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"9":{},"10":{},"24":{},"28":{},"29":{},"43":{},"48":{},"49":{},"51":{}},"component":{}}],["incorpor",{"_index":147,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["increas",{"_index":1136,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["independ",{"_index":402,"title":{},"name":{},"text":{"5":{},"19":{},"27":{},"38":{},"47":{},"60":{}},"component":{}}],["indetermin",{"_index":1077,"title":{},"name":{},"text":{"12":{},"14":{},"16":{},"23":{},"31":{},"33":{},"35":{},"42":{},"53":{},"55":{},"57":{},"64":{}},"component":{}}],["index",{"_index":400,"title":{},"name":{"5":{},"27":{},"47":{}},"text":{"15":{},"34":{},"56":{}},"component":{}}],["indic",{"_index":906,"title":{},"name":{},"text":{"9":{},"10":{}},"component":{}}],["individu",{"_index":767,"title":{},"name":{},"text":{"8":{}},"component":{}}],["infinit",{"_index":180,"title":{},"name":{},"text":{"1":{},"17":{},"24":{},"36":{},"43":{},"58":{}},"component":{}}],["info",{"_index":966,"title":{},"name":{},"text":{"10":{}},"component":{}}],["inform",{"_index":213,"title":{},"name":{},"text":{"1":{},"15":{},"17":{},"24":{},"34":{},"36":{},"43":{},"56":{},"58":{}},"component":{}}],["infra",{"_index":564,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["inher",{"_index":214,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["inlin",{"_index":826,"title":{},"name":{},"text":{"8":{}},"component":{}}],["input",{"_index":950,"title":{},"name":{},"text":{"10":{}},"component":{}}],["insid",{"_index":236,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"24":{},"29":{},"43":{},"45":{},"49":{}},"component":{}}],["inspect",{"_index":677,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["instal",{"_index":437,"title":{"7":{},"29":{},"49":{},"7-7":{},"7-8":{},"7-12":{},"7-13":{},"7-18":{},"7-19":{},"7-23":{},"7-24":{},"29-7":{},"29-8":{},"29-12":{},"29-13":{},"29-18":{},"29-19":{},"29-23":{},"29-24":{},"49-7":{},"49-8":{},"49-12":{},"49-13":{},"49-18":{},"49-19":{},"49-23":{},"49-24":{}},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["instanc",{"_index":386,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"45":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["instead",{"_index":167,"title":{},"name":{},"text":{"1":{},"3":{},"24":{},"43":{},"45":{}},"component":{}}],["instruct",{"_index":573,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["int",{"_index":109,"title":{},"name":{},"text":{"1":{},"10":{},"24":{},"43":{}},"component":{}}],["integ",{"_index":1243,"title":{},"name":{},"text":{"21":{},"40":{},"62":{}},"component":{}}],["integr",{"_index":81,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["interact",{"_index":166,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"24":{},"43":{},"50":{},"51":{}},"component":{}}],["interest",{"_index":153,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["interfac",{"_index":36,"title":{},"name":{},"text":{"1":{},"3":{},"5":{},"6":{},"9":{},"12":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{},"31":{},"34":{},"35":{},"42":{},"43":{},"45":{},"47":{},"48":{},"51":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["interoper",{"_index":66,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["interven",{"_index":1114,"title":{},"name":{},"text":{"15":{},"23":{},"34":{},"42":{},"56":{},"64":{}},"component":{}}],["introduct",{"_index":398,"title":{"5-1":{},"27-1":{},"47-1":{}},"name":{},"text":{},"component":{}}],["intuit",{"_index":63,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["invok",{"_index":596,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["involv",{"_index":55,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["issu",{"_index":600,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["item",{"_index":1066,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["item1",{"_index":1128,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["item2",{"_index":1074,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"35":{},"42":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["item3",{"_index":1075,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"35":{},"42":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["item4",{"_index":1076,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"35":{},"42":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["itself",{"_index":1086,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"35":{},"42":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["it’",{"_index":249,"title":{"4-1":{},"26-1":{},"46-1":{}},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["joel",{"_index":332,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["key",{"_index":16,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["knob",{"_index":689,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["know",{"_index":163,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["label",{"_index":8,"title":{"10":{},"1-6":{},"10-10":{},"24-6":{},"43-6":{}},"name":{"10":{}},"text":{"1":{},"8":{},"10":{},"24":{},"43":{},"50":{}},"component":{}}],["label(\"mi",{"_index":968,"title":{},"name":{},"text":{"10":{}},"component":{}}],["label(\"“dog",{"_index":246,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["label(str",{"_index":959,"title":{},"name":{},"text":{"10":{}},"component":{}}],["label_align",{"_index":803,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["label_font",{"_index":748,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["label_font.s",{"_index":978,"title":{},"name":{},"text":{"10":{}},"component":{}}],["label_font_color",{"_index":799,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["label_text_align",{"_index":982,"title":{},"name":{},"text":{"10":{}},"component":{}}],["label’",{"_index":952,"title":{},"name":{},"text":{"10":{}},"component":{}}],["laden",{"_index":450,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["laid",{"_index":1094,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"20":{},"22":{},"23":{},"33":{},"34":{},"35":{},"39":{},"41":{},"42":{},"55":{},"56":{},"57":{},"61":{},"63":{},"64":{}},"component":{}}],["lambda",{"_index":903,"title":{},"name":{},"text":{"9":{}},"component":{}}],["languag",{"_index":405,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["larger",{"_index":750,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["latch",{"_index":704,"title":{"8-13":{}},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["latching_button",{"_index":822,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["latching_button(styl",{"_index":887,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["latchingbutton",{"_index":819,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["latest",{"_index":559,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["latter",{"_index":355,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["lay",{"_index":480,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"28":{},"33":{},"34":{},"48":{},"55":{},"56":{}},"component":{}}],["layer",{"_index":10,"title":{"1-6":{},"16-3":{},"24-6":{},"35-3":{},"43-6":{},"57-3":{}},"name":{"16":{},"35":{},"57":{}},"text":{"1":{},"6":{},"12":{},"16":{},"24":{},"28":{},"31":{},"35":{},"43":{},"48":{},"53":{},"57":{}},"component":{}}],["layer(e1,...en",{"_index":1152,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["layer(item1",{"_index":1153,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["layer_composit",{"_index":1142,"title":{"16-7":{},"35-8":{},"57-8":{}},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["layer’",{"_index":1151,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["layout",{"_index":234,"title":{"6":{},"16":{},"28":{},"35":{},"48":{},"57":{}},"name":{"6":{},"28":{},"48":{}},"text":{"1":{},"3":{},"5":{},"6":{},"7":{},"13":{},"14":{},"23":{},"24":{},"27":{},"28":{},"29":{},"32":{},"33":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"54":{},"55":{},"64":{}},"component":{}}],["lbase",{"_index":818,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["learn",{"_index":671,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["left",{"_index":498,"title":{},"name":{},"text":{"6":{},"8":{},"11":{},"13":{},"14":{},"15":{},"16":{},"18":{},"23":{},"28":{},"30":{},"32":{},"33":{},"34":{},"35":{},"37":{},"42":{},"48":{},"50":{},"52":{},"54":{},"55":{},"56":{},"57":{},"59":{},"64":{}},"component":{}}],["left_circl",{"_index":788,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["left_margin",{"_index":257,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["less",{"_index":751,"title":{},"name":{},"text":{"8":{},"10":{},"15":{},"16":{},"22":{},"34":{},"35":{},"41":{},"56":{},"57":{},"63":{}},"component":{}}],["let’",{"_index":11,"title":{"1-7":{},"24-7":{},"43-7":{}},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["level",{"_index":1146,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["lib",{"_index":696,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["libcairo2",{"_index":666,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["liber",{"_index":433,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["libgtk",{"_index":668,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["libpng",{"_index":585,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["librari",{"_index":20,"title":{"5":{},"27":{},"47":{},"7-5":{},"7-7":{},"7-12":{},"7-18":{},"7-23":{},"29-5":{},"29-7":{},"29-12":{},"29-18":{},"29-23":{},"49-5":{},"49-7":{},"49-12":{},"49-18":{},"49-23":{}},"name":{},"text":{"1":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"16":{},"18":{},"19":{},"20":{},"24":{},"27":{},"28":{},"29":{},"30":{},"35":{},"37":{},"38":{},"39":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"57":{},"59":{},"60":{},"61":{}},"component":{}}],["libwebp",{"_index":586,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["licens",{"_index":340,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["lifetim",{"_index":1081,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["lightweight",{"_index":23,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["likewis",{"_index":1118,"title":{},"name":{},"text":{"15":{},"16":{},"34":{},"35":{},"56":{},"57":{}},"component":{}}],["limit",{"_index":492,"title":{"17":{},"36":{},"58":{},"20-2":{},"39-2":{},"61-2":{}},"name":{"17":{},"36":{},"58":{}},"text":{"6":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"30":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"39":{},"41":{},"42":{},"48":{},"52":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"61":{},"63":{},"64":{}},"component":{}}],["limit(limit",{"_index":1231,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["limits.max",{"_index":1178,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["limits.max.i",{"_index":1173,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["limits.max.x",{"_index":1171,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["limits.min",{"_index":1177,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["limits.min.i",{"_index":1172,"title":{},"name":{},"text":{"17":{},"23":{},"36":{},"42":{},"58":{},"64":{}},"component":{}}],["limits.min.x",{"_index":1170,"title":{},"name":{},"text":{"17":{},"23":{},"36":{},"42":{},"58":{},"64":{}},"component":{}}],["line",{"_index":630,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["link",{"_index":93,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["linux",{"_index":540,"title":{"7-22":{},"29-22":{},"49-22":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["list",{"_index":614,"title":{},"name":{},"text":{"7":{},"8":{},"11":{},"12":{},"18":{},"20":{},"29":{},"30":{},"31":{},"37":{},"39":{},"49":{},"50":{},"52":{},"53":{},"59":{},"61":{}},"component":{}}],["locat",{"_index":631,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["lock",{"_index":785,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["look",{"_index":306,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["loop",{"_index":138,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["loos",{"_index":72,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["love",{"_index":443,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["lower",{"_index":1119,"title":{},"name":{},"text":{"15":{},"16":{},"34":{},"35":{},"56":{},"57":{}},"component":{}}],["lst",{"_index":956,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.enable(st",{"_index":974,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.font(font",{"_index":961,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.font_color(color",{"_index":964,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.font_size(s",{"_index":962,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.get_default_font_s",{"_index":992,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.get_font",{"_index":989,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.get_font_color",{"_index":995,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.get_font_s",{"_index":991,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.get_text",{"_index":987,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.get_text_align",{"_index":997,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.is_en",{"_index":975,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.relative_font_size(s",{"_index":963,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.set_font(font",{"_index":990,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.set_font_color(color",{"_index":996,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.set_font_size(s",{"_index":993,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.set_text(str",{"_index":988,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.set_text_align(align",{"_index":998,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst.text_align(align",{"_index":965,"title":{},"name":{},"text":{"10":{}},"component":{}}],["lst_set_relative_font_size(s",{"_index":994,"title":{},"name":{},"text":{"10":{}},"component":{}}],["mac",{"_index":549,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["maco",{"_index":530,"title":{"7-6":{},"29-6":{},"49-6":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["made",{"_index":294,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["main",{"_index":99,"title":{},"name":{},"text":{"1":{},"13":{},"24":{},"32":{},"43":{},"54":{}},"component":{}}],["main(int",{"_index":110,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["main.cpp",{"_index":674,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["maintain",{"_index":934,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["make",{"_index":12,"title":{"1-7":{},"24-7":{},"43-7":{}},"name":{},"text":{"1":{},"7":{},"8":{},"10":{},"24":{},"29":{},"43":{},"49":{},"50":{}},"component":{}}],["makefil",{"_index":539,"title":{"7-21":{},"7-26":{},"29-21":{},"29-26":{},"49-21":{},"49-26":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["manag",{"_index":136,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"12":{},"14":{},"15":{},"16":{},"23":{},"24":{},"29":{},"31":{},"33":{},"34":{},"35":{},"42":{},"43":{},"49":{},"51":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["mani",{"_index":284,"title":{},"name":{},"text":{"1":{},"6":{},"14":{},"24":{},"28":{},"43":{},"48":{}},"component":{}}],["margin",{"_index":9,"title":{"18":{},"37":{},"59":{},"1-6":{},"18-2":{},"24-6":{},"37-2":{},"43-6":{},"59-2":{}},"name":{"18":{},"59":{}},"text":{"1":{},"6":{},"8":{},"18":{},"24":{},"28":{},"37":{},"43":{},"48":{},"50":{},"59":{}},"component":{}}],["margin({left",{"_index":1189,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_bottom",{"_index":1182,"title":{"18-14":{},"37-18":{},"59-18":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_bottom(bottom",{"_index":1196,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_el",{"_index":1276,"title":{},"name":{"37":{}},"text":{},"component":{}}],["margin_left",{"_index":1179,"title":{"18-5":{},"37-6":{},"59-6":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left(left",{"_index":1193,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_bottom",{"_index":1186,"title":{"18-25":{},"37-33":{},"59-33":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_bottom(left",{"_index":1212,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_bottom({left",{"_index":1211,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_right",{"_index":1197,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_right(left",{"_index":1202,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_right({left",{"_index":1201,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_top",{"_index":1185,"title":{"18-22":{},"37-29":{},"59-29":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_top(left",{"_index":1210,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_left_top({left",{"_index":1209,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right",{"_index":1180,"title":{"18-8":{},"37-10":{},"59-10":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right(right",{"_index":1194,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right_bottom",{"_index":1188,"title":{"18-31":{},"37-41":{},"59-41":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right_bottom(right",{"_index":1216,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right_bottom({right",{"_index":1215,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right_top",{"_index":1187,"title":{"18-28":{},"37-37":{},"59-37":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right_top(right",{"_index":1214,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_right_top({right",{"_index":1213,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_top",{"_index":1181,"title":{"18-11":{},"37-14":{},"59-14":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_top(top",{"_index":1195,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_top_bottom",{"_index":1204,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_top_bottom(top",{"_index":1208,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["margin_top_bottom({top",{"_index":1207,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["match",{"_index":1130,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["matter",{"_index":622,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["max",{"_index":1158,"title":{},"name":{},"text":{"17":{},"18":{},"36":{},"37":{},"58":{},"59":{}},"component":{}}],["max_siz",{"_index":1227,"title":{"20-23":{},"39-30":{},"61-30":{}},"name":{},"text":{},"component":{}}],["max_size({width",{"_index":1239,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["maximum",{"_index":1096,"title":{},"name":{},"text":{"14":{},"15":{},"16":{},"17":{},"20":{},"22":{},"33":{},"34":{},"35":{},"36":{},"39":{},"41":{},"55":{},"56":{},"57":{},"58":{},"61":{},"63":{}},"component":{}}],["mbase",{"_index":814,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["mean",{"_index":420,"title":{},"name":{},"text":{"5":{},"9":{},"17":{},"22":{},"27":{},"36":{},"41":{},"47":{},"51":{},"58":{},"63":{}},"component":{}}],["member",{"_index":915,"title":{},"name":{},"text":{"9":{},"21":{},"22":{},"40":{},"41":{},"51":{},"62":{},"63":{}},"component":{}}],["mention",{"_index":275,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["menu",{"_index":646,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["mess",{"_index":678,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["middl",{"_index":225,"title":{},"name":{},"text":{"1":{},"11":{},"24":{},"30":{},"43":{},"52":{}},"component":{}}],["min",{"_index":1157,"title":{},"name":{},"text":{"17":{},"18":{},"36":{},"37":{},"58":{},"59":{}},"component":{}}],["min_siz",{"_index":1224,"title":{"20-14":{},"39-18":{},"61-18":{}},"name":{},"text":{},"component":{}}],["min_size({width",{"_index":1236,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["mingw",{"_index":534,"title":{"7-17":{},"29-17":{},"49-17":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["mingw_package_prefix",{"_index":659,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["minim",{"_index":1,"title":{"1-2":{},"24-2":{},"43-2":{}},"name":{},"text":{"8":{}},"component":{}}],["minimum",{"_index":1021,"title":{},"name":{},"text":{"11":{},"15":{},"16":{},"17":{},"20":{},"22":{},"23":{},"30":{},"34":{},"35":{},"36":{},"39":{},"41":{},"42":{},"52":{},"56":{},"57":{},"58":{},"61":{},"63":{},"64":{}},"component":{}}],["mit",{"_index":339,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["mixin",{"_index":911,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["mkdir",{"_index":597,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["modern",{"_index":49,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["modular",{"_index":21,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["momentari",{"_index":702,"title":{"8-11":{}},"name":{},"text":{"8":{},"9":{},"50":{},"51":{}},"component":{}}],["momentary_button",{"_index":783,"title":{},"name":{},"text":{"8":{},"9":{},"50":{},"51":{}},"component":{}}],["momentary_button(styl",{"_index":885,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["momentarybutton",{"_index":815,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["more",{"_index":273,"title":{},"name":{},"text":{"1":{},"9":{},"10":{},"12":{},"15":{},"16":{},"22":{},"24":{},"31":{},"34":{},"35":{},"41":{},"43":{},"51":{},"53":{},"56":{},"57":{},"63":{}},"component":{}}],["mous",{"_index":939,"title":{},"name":{},"text":{"9":{},"16":{},"35":{},"51":{},"57":{}},"component":{}}],["move",{"_index":392,"title":{},"name":{},"text":{"3":{},"6":{},"7":{},"14":{},"28":{},"29":{},"33":{},"45":{},"48":{},"49":{},"55":{}},"component":{}}],["msys2",{"_index":536,"title":{"7-18":{},"29-18":{},"49-18":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["much",{"_index":64,"title":{},"name":{},"text":{"1":{},"14":{},"22":{},"24":{},"33":{},"41":{},"43":{},"55":{},"63":{}},"component":{}}],["multipl",{"_index":176,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"24":{},"28":{},"29":{},"43":{},"48":{},"49":{}},"component":{}}],["multipli",{"_index":1129,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["multitud",{"_index":231,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["music",{"_index":441,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["my_label",{"_index":967,"title":{},"name":{},"text":{"10":{}},"component":{}}],["n",{"_index":1065,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"31":{},"34":{},"35":{},"53":{},"56":{},"57":{}},"component":{}}],["name",{"_index":202,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["namespac",{"_index":96,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"9":{},"10":{},"24":{},"43":{},"45":{},"51":{}},"component":{}}],["native/cross",{"_index":644,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["natur",{"_index":281,"title":{},"name":{},"text":{"1":{},"13":{},"15":{},"18":{},"20":{},"23":{},"24":{},"32":{},"34":{},"37":{},"39":{},"42":{},"43":{},"54":{},"56":{},"59":{},"61":{},"64":{}},"component":{}}],["necessari",{"_index":372,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["need",{"_index":415,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["new",{"_index":427,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["next",{"_index":502,"title":{},"name":{},"text":{"6":{},"7":{},"14":{},"15":{},"23":{},"28":{},"29":{},"33":{},"34":{},"42":{},"48":{},"49":{},"55":{},"56":{},"64":{}},"component":{}}],["nice",{"_index":394,"title":{"4-1":{},"26-1":{},"46-1":{}},"name":{},"text":{},"component":{}}],["nmake",{"_index":533,"title":{"7-16":{},"29-16":{},"49-16":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["non",{"_index":434,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["normal",{"_index":494,"title":{},"name":{},"text":{"6":{},"15":{},"28":{},"34":{},"48":{},"56":{}},"component":{}}],["notat",{"_index":347,"title":{"3-5":{},"8-4":{},"8-9":{},"8-15":{},"9-4":{},"9-7":{},"9-11":{},"9-14":{},"10-4":{},"10-8":{},"10-13":{},"11-3":{},"11-7":{},"11-10":{},"11-13":{},"11-16":{},"11-20":{},"11-23":{},"11-26":{},"11-29":{},"11-32":{},"11-35":{},"11-38":{},"11-41":{},"11-44":{},"11-47":{},"11-50":{},"11-53":{},"12-4":{},"12-9":{},"13-3":{},"14-3":{},"14-7":{},"15-5":{},"15-11":{},"15-18":{},"15-24":{},"16-4":{},"16-8":{},"17-4":{},"18-3":{},"18-6":{},"18-9":{},"18-12":{},"18-15":{},"18-20":{},"18-23":{},"18-26":{},"18-29":{},"18-32":{},"19-3":{},"20-3":{},"20-6":{},"20-9":{},"20-12":{},"20-15":{},"20-18":{},"20-21":{},"20-24":{},"20-27":{},"20-30":{},"21-3":{},"22-3":{},"22-6":{},"23-5":{},"23-9":{},"23-15":{},"23-19":{},"30-3":{},"30-8":{},"30-12":{},"30-16":{},"30-20":{},"30-25":{},"30-29":{},"30-33":{},"30-37":{},"30-41":{},"30-45":{},"30-49":{},"30-53":{},"30-57":{},"30-61":{},"30-65":{},"30-69":{},"31-5":{},"31-10":{},"32-3":{},"33-3":{},"33-7":{},"34-5":{},"34-11":{},"34-18":{},"34-24":{},"35-4":{},"35-9":{},"36-4":{},"37-3":{},"37-7":{},"37-11":{},"37-15":{},"37-19":{},"37-26":{},"37-30":{},"37-34":{},"37-38":{},"37-42":{},"38-3":{},"39-3":{},"39-7":{},"39-11":{},"39-15":{},"39-19":{},"39-23":{},"39-27":{},"39-31":{},"39-35":{},"39-39":{},"40-3":{},"41-3":{},"41-7":{},"42-5":{},"42-10":{},"42-16":{},"42-21":{},"45-5":{},"50-2":{},"51-4":{},"51-8":{},"51-13":{},"51-17":{},"52-3":{},"52-8":{},"52-12":{},"52-16":{},"52-20":{},"52-25":{},"52-29":{},"52-33":{},"52-37":{},"52-41":{},"52-45":{},"52-49":{},"52-53":{},"52-57":{},"52-61":{},"52-65":{},"52-69":{},"53-4":{},"53-9":{},"54-3":{},"55-3":{},"55-7":{},"56-5":{},"56-11":{},"56-18":{},"56-24":{},"57-4":{},"57-9":{},"58-4":{},"59-3":{},"59-7":{},"59-11":{},"59-15":{},"59-19":{},"59-26":{},"59-30":{},"59-34":{},"59-38":{},"59-42":{},"60-3":{},"61-3":{},"61-7":{},"61-11":{},"61-15":{},"61-19":{},"61-23":{},"61-27":{},"61-31":{},"61-35":{},"61-39":{},"62-3":{},"63-3":{},"63-7":{},"64-5":{},"64-10":{},"64-16":{},"64-21":{}},"name":{},"text":{},"component":{}}],["note",{"_index":140,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["notic",{"_index":274,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["now",{"_index":187,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["nspan",{"_index":1244,"title":{},"name":{},"text":{"21":{},"40":{},"62":{}},"component":{}}],["number",{"_index":466,"title":{},"name":{},"text":{"5":{},"12":{},"14":{},"15":{},"16":{},"17":{},"21":{},"23":{},"27":{},"31":{},"33":{},"34":{},"35":{},"36":{},"40":{},"42":{},"47":{},"53":{},"55":{},"56":{},"57":{},"58":{},"62":{},"64":{}},"component":{}}],["object",{"_index":725,"title":{},"name":{},"text":{"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"50":{},"51":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["obscur",{"_index":1147,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["obviou",{"_index":250,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["occupi",{"_index":1241,"title":{},"name":{},"text":{"21":{},"40":{},"62":{}},"component":{}}],["offer",{"_index":493,"title":{},"name":{},"text":{"6":{},"9":{},"28":{},"48":{},"51":{}},"component":{}}],["offici",{"_index":652,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["ok",{"_index":320,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["old",{"_index":302,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["older",{"_index":554,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["on",{"_index":178,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"12":{},"15":{},"16":{},"21":{},"24":{},"28":{},"29":{},"31":{},"34":{},"35":{},"40":{},"43":{},"48":{},"49":{},"50":{},"53":{},"56":{},"57":{},"62":{}},"component":{}}],["on_click",{"_index":889,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["on_clos",{"_index":129,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["onc",{"_index":503,"title":{},"name":{},"text":{"6":{},"14":{},"28":{},"33":{},"48":{},"55":{}},"component":{}}],["open",{"_index":464,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["option",{"_index":142,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{}},"component":{}}],["order",{"_index":543,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["otherwis",{"_index":976,"title":{},"name":{},"text":{"10":{},"15":{},"34":{},"56":{}},"component":{}}],["out",{"_index":481,"title":{},"name":{},"text":{"6":{},"10":{},"14":{},"15":{},"16":{},"19":{},"20":{},"22":{},"23":{},"28":{},"33":{},"34":{},"35":{},"38":{},"39":{},"41":{},"42":{},"48":{},"55":{},"56":{},"57":{},"60":{},"61":{},"63":{},"64":{}},"component":{}}],["outsid",{"_index":541,"title":{"7-28":{},"29-28":{},"49-28":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["over",{"_index":941,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["overload",{"_index":823,"title":{},"name":{},"text":{"8":{}},"component":{}}],["overrid",{"_index":720,"title":{},"name":{},"text":{"8":{},"10":{},"20":{},"21":{},"22":{},"39":{},"40":{},"41":{},"61":{},"62":{},"63":{}},"component":{}}],["overridden",{"_index":1191,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["overview",{"_index":0,"title":{"1-1":{},"3-1":{},"6-1":{},"8-1":{},"9-1":{},"10-1":{},"11-1":{},"12-1":{},"13-1":{},"14-1":{},"15-1":{},"16-1":{},"17-1":{},"18-1":{},"19-1":{},"20-1":{},"21-1":{},"22-1":{},"23-1":{},"24-1":{},"28-1":{},"30-1":{},"31-2":{},"32-1":{},"33-1":{},"34-1":{},"35-1":{},"36-1":{},"37-1":{},"38-1":{},"39-1":{},"40-1":{},"41-1":{},"42-1":{},"43-1":{},"45-1":{},"48-1":{},"50-1":{},"51-1":{},"52-1":{},"53-1":{},"54-1":{},"55-1":{},"56-1":{},"57-1":{},"58-1":{},"59-1":{},"60-1":{},"61-1":{},"62-1":{},"63-1":{},"64-1":{}},"name":{},"text":{"3":{},"45":{}},"component":{}}],["p",{"_index":368,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["packag",{"_index":613,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["pacman",{"_index":657,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["page",{"_index":655,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["palett",{"_index":60,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["paramet",{"_index":820,"title":{},"name":{},"text":{"8":{},"18":{},"37":{},"59":{}},"component":{}}],["part",{"_index":268,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["pass",{"_index":194,"title":{},"name":{},"text":{"1":{},"8":{},"10":{},"24":{},"43":{},"50":{}},"component":{}}],["past",{"_index":691,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["pattern",{"_index":876,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["peer",{"_index":475,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["peopl",{"_index":248,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["perhap",{"_index":282,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["pertain",{"_index":1144,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["pictur",{"_index":396,"title":{"4-1":{},"26-1":{},"46-1":{}},"name":{},"text":{},"component":{}}],["piec",{"_index":253,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["pixel",{"_index":735,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["pkg",{"_index":577,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["pkgconf",{"_index":626,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["place",{"_index":207,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"12":{},"13":{},"14":{},"16":{},"17":{},"22":{},"24":{},"29":{},"31":{},"32":{},"33":{},"35":{},"36":{},"41":{},"43":{},"45":{},"49":{},"53":{},"54":{},"55":{},"57":{},"58":{},"63":{}},"component":{}}],["placement",{"_index":496,"title":{},"name":{},"text":{"6":{},"8":{},"13":{},"28":{},"32":{},"48":{},"54":{}},"component":{}}],["plain",{"_index":878,"title":{},"name":{},"text":{"9":{},"15":{},"34":{},"51":{},"56":{}},"component":{}}],["platform",{"_index":159,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["play",{"_index":69,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["plu",{"_index":563,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["plugin",{"_index":146,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["point",{"_index":310,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"17":{},"24":{},"29":{},"36":{},"43":{},"49":{},"50":{},"58":{}},"component":{}}],["pointer",{"_index":344,"title":{"3-3":{},"45-3":{}},"name":{},"text":{"3":{},"45":{}},"component":{}}],["polymorph",{"_index":359,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["popular",{"_index":616,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["port",{"_index":426,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["posit",{"_index":212,"title":{},"name":{},"text":{"1":{},"6":{},"11":{},"13":{},"15":{},"17":{},"21":{},"23":{},"24":{},"28":{},"30":{},"32":{},"34":{},"36":{},"40":{},"42":{},"43":{},"48":{},"52":{},"54":{},"56":{},"58":{},"62":{},"64":{}},"component":{}}],["positions[n",{"_index":1137,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["positions[n+1",{"_index":1141,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["possibl",{"_index":500,"title":{},"name":{},"text":{"6":{},"14":{},"17":{},"28":{},"33":{},"36":{},"48":{},"55":{},"58":{}},"component":{}}],["pre",{"_index":293,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["predefin",{"_index":203,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["present",{"_index":90,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["press",{"_index":868,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["pretti",{"_index":395,"title":{"4-1":{},"26-1":{},"46-1":{}},"name":{},"text":{},"component":{}}],["previou",{"_index":288,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["prgram",{"_index":324,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["princip",{"_index":455,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["prioriti",{"_index":1150,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["privat",{"_index":723,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["probabl",{"_index":552,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["problem",{"_index":607,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["proce",{"_index":1149,"title":{},"name":{},"text":{"16":{},"35":{},"57":{}},"component":{}}],["procedur",{"_index":572,"title":{},"name":{},"text":{"7":{},"14":{},"29":{},"33":{},"49":{},"55":{}},"component":{}}],["process",{"_index":1063,"title":{},"name":{},"text":{"12":{},"16":{},"31":{},"35":{},"53":{},"57":{}},"component":{}}],["produc",{"_index":452,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["program",{"_index":54,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"24":{},"27":{},"29":{},"43":{},"47":{},"49":{}},"component":{}}],["programmat",{"_index":872,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["project",{"_index":469,"title":{"7-9":{},"7-14":{},"7-20":{},"7-25":{},"7-28":{},"29-9":{},"29-14":{},"29-20":{},"29-25":{},"29-28":{},"49-9":{},"49-14":{},"49-20":{},"49-25":{},"49-28":{}},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["prompt",{"_index":640,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["proper",{"_index":510,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["properti",{"_index":719,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["proportion",{"_index":515,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["provid",{"_index":290,"title":{},"name":{},"text":{"1":{},"3":{},"6":{},"7":{},"8":{},"9":{},"10":{},"17":{},"24":{},"28":{},"29":{},"36":{},"43":{},"45":{},"48":{},"49":{},"50":{},"51":{},"58":{}},"component":{}}],["proxi",{"_index":1022,"title":{},"name":{},"text":{"11":{},"13":{},"18":{},"19":{},"20":{},"21":{},"22":{},"30":{},"32":{},"37":{},"38":{},"39":{},"40":{},"41":{},"52":{},"54":{},"59":{},"60":{},"61":{},"62":{},"63":{}},"component":{}}],["purpos",{"_index":289,"title":{},"name":{},"text":{"1":{},"11":{},"17":{},"18":{},"20":{},"24":{},"30":{},"36":{},"37":{},"39":{},"43":{},"52":{},"58":{},"59":{},"61":{}},"component":{}}],["push_back",{"_index":1082,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["qt",{"_index":150,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["queri",{"_index":912,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["quickli",{"_index":813,"title":{},"name":{},"text":{"8":{}},"component":{}}],["quit",{"_index":131,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["r",{"_index":737,"title":{},"name":{},"text":{"8":{},"14":{},"33":{},"50":{},"55":{}},"component":{}}],["radio",{"_index":879,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["radiu",{"_index":197,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{},"50":{}},"component":{}}],["rang",{"_index":1115,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["rbox",{"_index":195,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["rbox(colors::medium_blu",{"_index":199,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["re",{"_index":1104,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["realli",{"_index":621,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["receiv",{"_index":910,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["rect",{"_index":736,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["rectangl",{"_index":191,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["recurs",{"_index":566,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["refin",{"_index":295,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["rel",{"_index":728,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["relat",{"_index":1230,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["relative_font_s",{"_index":979,"title":{},"name":{},"text":{"10":{}},"component":{}}],["releas",{"_index":900,"title":{},"name":{},"text":{"9":{}},"component":{}}],["relev",{"_index":922,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["reli",{"_index":168,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["relocat",{"_index":215,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["remain",{"_index":722,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["rememb",{"_index":1083,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["render",{"_index":217,"title":{},"name":{},"text":{"1":{},"3":{},"9":{},"16":{},"24":{},"35":{},"43":{},"45":{},"51":{},"57":{}},"component":{}}],["repeat",{"_index":1099,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["repres",{"_index":1166,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["represent",{"_index":877,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["requir",{"_index":430,"title":{"7-1":{},"7-5":{},"7-7":{},"7-12":{},"7-18":{},"7-23":{},"12-7":{},"15-8":{},"15-14":{},"15-21":{},"15-27":{},"29-1":{},"29-5":{},"29-7":{},"29-12":{},"29-18":{},"29-23":{},"31-8":{},"34-8":{},"34-14":{},"34-21":{},"34-27":{},"49-1":{},"49-5":{},"49-7":{},"49-12":{},"49-18":{},"49-23":{},"53-7":{},"56-8":{},"56-14":{},"56-21":{},"56-27":{}},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["requires(t",{"_index":367,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["research",{"_index":459,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["reserv",{"_index":336,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["reset",{"_index":873,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["resiz",{"_index":181,"title":{},"name":{},"text":{"1":{},"7":{},"17":{},"18":{},"22":{},"23":{},"24":{},"29":{},"36":{},"37":{},"41":{},"42":{},"43":{},"49":{},"58":{},"59":{},"63":{},"64":{}},"component":{}}],["resolut",{"_index":401,"title":{},"name":{},"text":{"5":{},"19":{},"27":{},"38":{},"47":{},"60":{}},"component":{}}],["respect",{"_index":474,"title":{},"name":{},"text":{"5":{},"9":{},"18":{},"22":{},"27":{},"37":{},"41":{},"47":{},"51":{},"59":{},"63":{}},"component":{}}],["respons",{"_index":520,"title":{},"name":{},"text":{"6":{},"8":{},"9":{},"12":{},"14":{},"15":{},"16":{},"23":{},"28":{},"31":{},"33":{},"34":{},"35":{},"42":{},"48":{},"50":{},"51":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["result",{"_index":305,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{},"50":{}},"component":{}}],["return",{"_index":124,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"30":{},"31":{},"32":{},"33":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"57":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["reus",{"_index":39,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["reusabl",{"_index":30,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["review",{"_index":476,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["rgba(35",{"_index":104,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["right",{"_index":335,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["right_margin",{"_index":258,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["rock",{"_index":451,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["root",{"_index":358,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["round",{"_index":190,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{},"50":{}},"component":{}}],["rounded_left(10",{"_index":793,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["row",{"_index":488,"title":{},"name":{},"text":{"6":{},"14":{},"15":{},"21":{},"23":{},"28":{},"33":{},"34":{},"40":{},"42":{},"48":{},"55":{},"56":{},"62":{},"64":{}},"component":{}}],["run",{"_index":186,"title":{"7-27":{},"29-27":{},"49-27":{}},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["s",{"_index":658,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["same",{"_index":279,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"15":{},"16":{},"18":{},"23":{},"24":{},"29":{},"33":{},"34":{},"35":{},"37":{},"42":{},"43":{},"49":{},"55":{},"56":{},"57":{},"59":{},"64":{}},"component":{}}],["sans\"}.semi_bold",{"_index":970,"title":{},"name":{},"text":{"10":{}},"component":{}}],["scalar",{"_index":1257,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["scale",{"_index":485,"title":{"19":{},"38":{},"60":{},"19-2":{},"38-2":{},"60-2":{}},"name":{"19":{},"38":{},"60":{}},"text":{"6":{},"19":{},"28":{},"38":{},"48":{},"60":{}},"component":{}}],["scale(scale_",{"_index":1220,"title":{},"name":{},"text":{"19":{},"38":{},"60":{}},"component":{}}],["scale_",{"_index":1219,"title":{},"name":{},"text":{"19":{},"38":{},"60":{}},"component":{}}],["scenario",{"_index":1103,"title":{},"name":{},"text":{"14":{},"33":{},"55":{}},"component":{}}],["screen",{"_index":526,"title":{},"name":{},"text":{"6":{},"17":{},"28":{},"36":{},"48":{},"58":{}},"component":{}}],["seamlessli",{"_index":523,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["second",{"_index":1133,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["section",{"_index":278,"title":{},"name":{},"text":{"1":{},"3":{},"7":{},"9":{},"11":{},"18":{},"20":{},"24":{},"29":{},"30":{},"37":{},"39":{},"43":{},"45":{},"49":{},"51":{},"52":{},"59":{},"61":{}},"component":{}}],["see",{"_index":233,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"10":{},"12":{},"15":{},"16":{},"21":{},"23":{},"24":{},"29":{},"31":{},"34":{},"35":{},"40":{},"42":{},"43":{},"49":{},"50":{},"53":{},"56":{},"57":{},"62":{},"64":{}},"component":{}}],["seen",{"_index":193,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["select",{"_index":1060,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["semant",{"_index":349,"title":{"3-7":{},"12-2":{},"14-9":{},"15-3":{},"15-9":{},"15-16":{},"15-22":{},"16-2":{},"23-3":{},"23-13":{},"30-5":{},"30-10":{},"30-14":{},"30-18":{},"30-22":{},"30-27":{},"30-31":{},"30-35":{},"30-39":{},"30-43":{},"30-47":{},"30-51":{},"30-55":{},"30-59":{},"30-63":{},"30-67":{},"30-71":{},"31-3":{},"32-5":{},"33-9":{},"34-3":{},"34-9":{},"34-16":{},"34-22":{},"35-2":{},"35-7":{},"37-5":{},"37-9":{},"37-13":{},"37-17":{},"37-21":{},"37-24":{},"37-28":{},"37-32":{},"37-36":{},"37-40":{},"37-44":{},"38-5":{},"39-5":{},"39-9":{},"39-13":{},"39-17":{},"39-21":{},"39-25":{},"39-29":{},"39-33":{},"39-37":{},"39-41":{},"40-5":{},"41-5":{},"41-9":{},"42-3":{},"42-8":{},"42-14":{},"42-19":{},"45-7":{},"50-4":{},"51-6":{},"51-10":{},"51-15":{},"51-19":{},"52-5":{},"52-10":{},"52-14":{},"52-18":{},"52-22":{},"52-27":{},"52-31":{},"52-35":{},"52-39":{},"52-43":{},"52-47":{},"52-51":{},"52-55":{},"52-59":{},"52-63":{},"52-67":{},"52-71":{},"53-2":{},"54-5":{},"55-9":{},"56-3":{},"56-9":{},"56-16":{},"56-22":{},"57-2":{},"57-7":{},"59-5":{},"59-9":{},"59-13":{},"59-17":{},"59-21":{},"59-24":{},"59-28":{},"59-32":{},"59-36":{},"59-40":{},"59-44":{},"60-5":{},"61-5":{},"61-9":{},"61-13":{},"61-17":{},"61-21":{},"61-25":{},"61-29":{},"61-33":{},"61-37":{},"61-41":{},"62-5":{},"63-5":{},"63-9":{},"64-3":{},"64-8":{},"64-14":{},"64-19":{}},"name":{},"text":{"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"31":{},"35":{},"42":{},"53":{},"57":{},"64":{}},"component":{}}],["semi",{"_index":1176,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["sensibl",{"_index":407,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["separ",{"_index":713,"title":{},"name":{},"text":{"8":{},"9":{},"50":{},"51":{}},"component":{}}],["set",{"_index":127,"title":{},"name":{},"text":{"1":{},"6":{},"7":{},"8":{},"9":{},"10":{},"20":{},"21":{},"24":{},"28":{},"29":{},"39":{},"40":{},"43":{},"48":{},"49":{},"50":{},"51":{},"61":{},"62":{}},"component":{}}],["setter",{"_index":706,"title":{"8-14":{},"10-12":{}},"name":{},"text":{},"component":{}}],["settings→cod",{"_index":608,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["setup",{"_index":436,"title":{"7":{},"29":{},"49":{}},"name":{"7":{},"29":{},"49":{}},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["shall",{"_index":721,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["shape",{"_index":712,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["share",{"_index":343,"title":{"3-3":{},"45-3":{}},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"45":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["share(",{"_index":389,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["shell",{"_index":173,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["show",{"_index":1260,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["sibl",{"_index":262,"title":{},"name":{},"text":{"1":{},"22":{},"24":{},"41":{},"43":{},"63":{}},"component":{}}],["side",{"_index":1198,"title":{},"name":{},"text":{"18":{},"22":{},"37":{},"41":{},"59":{},"63":{}},"component":{}}],["sign",{"_index":601,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["signatur",{"_index":894,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["signifi",{"_index":1163,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["silli",{"_index":307,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["similar",{"_index":376,"title":{},"name":{},"text":{"3":{},"12":{},"15":{},"31":{},"34":{},"45":{},"53":{},"56":{}},"component":{}}],["simpl",{"_index":179,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"24":{},"43":{},"45":{},"50":{}},"component":{}}],["simpli",{"_index":561,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["simplic",{"_index":672,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["simplifi",{"_index":812,"title":{},"name":{},"text":{"8":{},"14":{},"33":{},"55":{}},"component":{}}],["singl",{"_index":673,"title":{},"name":{},"text":{"7":{},"15":{},"23":{},"29":{},"34":{},"42":{},"49":{},"56":{},"64":{}},"component":{}}],["situat",{"_index":144,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["size",{"_index":7,"title":{"20":{},"39":{},"61":{},"1-5":{},"24-5":{},"43-5":{}},"name":{"20":{},"61":{}},"text":{"1":{},"6":{},"8":{},"10":{},"14":{},"15":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"28":{},"33":{},"34":{},"35":{},"36":{},"39":{},"41":{},"42":{},"43":{},"48":{},"50":{},"55":{},"56":{},"57":{},"58":{},"61":{},"63":{},"64":{}},"component":{}}],["size(s",{"_index":829,"title":{},"name":{},"text":{"8":{}},"component":{}}],["size_el",{"_index":1277,"title":{},"name":{"39":{}},"text":{},"component":{}}],["skip",{"_index":925,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["slide",{"_index":880,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["slider",{"_index":13,"title":{"1-7":{},"24-7":{},"43-7":{}},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["slider(thumb",{"_index":314,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["smaller",{"_index":286,"title":{},"name":{},"text":{"1":{},"8":{},"10":{},"24":{},"43":{},"50":{}},"component":{}}],["softwar",{"_index":460,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["solut",{"_index":638,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["sophist",{"_index":43,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["sort",{"_index":1135,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["sourc",{"_index":465,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["space",{"_index":511,"title":{},"name":{},"text":{"6":{},"11":{},"15":{},"17":{},"18":{},"22":{},"23":{},"28":{},"30":{},"34":{},"36":{},"37":{},"41":{},"42":{},"48":{},"52":{},"56":{},"58":{},"59":{},"63":{},"64":{}},"component":{}}],["span",{"_index":486,"title":{"21":{},"40":{},"62":{},"21-2":{},"40-2":{},"62-2":{}},"name":{"21":{},"40":{},"62":{}},"text":{"6":{},"15":{},"21":{},"28":{},"34":{},"40":{},"48":{},"56":{},"62":{}},"component":{}}],["span(nspan",{"_index":1245,"title":{},"name":{},"text":{"21":{},"40":{},"62":{}},"component":{}}],["special",{"_index":461,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["specif",{"_index":84,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"24":{},"27":{},"29":{},"43":{},"47":{},"49":{},"50":{}},"component":{}}],["specifi",{"_index":183,"title":{},"name":{},"text":{"1":{},"8":{},"13":{},"15":{},"17":{},"20":{},"24":{},"32":{},"34":{},"36":{},"39":{},"43":{},"54":{},"56":{},"58":{},"61":{}},"component":{}}],["speed",{"_index":670,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["stack",{"_index":507,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["standard",{"_index":204,"title":{},"name":{},"text":{"1":{},"8":{},"24":{},"43":{}},"component":{}}],["start",{"_index":86,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["state",{"_index":867,"title":{},"name":{},"text":{"9":{},"10":{},"51":{}},"component":{}}],["static",{"_index":944,"title":{},"name":{},"text":{"9":{},"10":{},"15":{},"34":{},"51":{},"56":{}},"component":{}}],["stay",{"_index":865,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["std::array",{"_index":1068,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"31":{},"34":{},"35":{},"53":{},"56":{},"57":{}},"component":{}}],["std::convertible_to",{"_index":369,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["std::cout",{"_index":909,"title":{},"name":{},"text":{"9":{}},"component":{}}],["std::function",{"_index":904,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["std::is_base_of_v",{"_index":366,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"45":{},"51":{}},"component":{}}],["std::shared_ptr",{"_index":380,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["std::string",{"_index":726,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["std::string_view",{"_index":833,"title":{},"name":{},"text":{"8":{}},"component":{}}],["std::uint32_t",{"_index":731,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["std::vector",{"_index":374,"title":{},"name":{},"text":{"3":{},"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"45":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["std::vector'",{"_index":1087,"title":{},"name":{},"text":{"12":{},"15":{},"16":{},"23":{},"31":{},"34":{},"35":{},"42":{},"53":{},"56":{},"57":{},"64":{}},"component":{}}],["std::weak_ptr",{"_index":383,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["step",{"_index":254,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["still",{"_index":945,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["stop",{"_index":130,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["str",{"_index":955,"title":{},"name":{},"text":{"10":{}},"component":{}}],["straightforward",{"_index":429,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["stretch",{"_index":1248,"title":{"22":{},"41":{},"50":{},"63":{}},"name":{"22":{},"63":{}},"text":{"22":{},"41":{},"63":{}},"component":{}}],["stretch_el",{"_index":1279,"title":{},"name":{"41":{}},"text":{},"component":{}}],["stretchi",{"_index":1252,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["struct",{"_index":932,"title":{},"name":{},"text":{"9":{},"17":{},"22":{},"36":{},"41":{},"51":{},"58":{},"63":{}},"component":{}}],["structur",{"_index":44,"title":{},"name":{},"text":{"1":{},"6":{},"9":{},"12":{},"15":{},"16":{},"17":{},"23":{},"24":{},"28":{},"31":{},"34":{},"35":{},"36":{},"42":{},"43":{},"48":{},"51":{},"53":{},"56":{},"57":{},"58":{},"64":{}},"component":{}}],["studio",{"_index":454,"title":{"7-15":{},"29-15":{},"49-15":{}},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["stylabl",{"_index":863,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["style",{"_index":628,"title":{},"name":{},"text":{"7":{},"8":{},"29":{},"49":{},"50":{}},"component":{}}],["styler",{"_index":699,"title":{"8":{},"8-7":{},"9-16":{},"10-10":{},"10-11":{},"50-6":{},"51-20":{}},"name":{},"text":{"8":{},"9":{},"10":{},"50":{},"51":{}},"component":{}}],["sub",{"_index":267,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["subclass",{"_index":931,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["subject",{"_index":875,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"18":{},"19":{},"20":{},"21":{},"22":{},"30":{},"32":{},"37":{},"38":{},"39":{},"40":{},"41":{},"51":{},"52":{},"54":{},"59":{},"60":{},"61":{},"62":{},"63":{}},"component":{}}],["subject’",{"_index":1091,"title":{},"name":{},"text":{"13":{},"18":{},"32":{},"37":{},"54":{},"59":{}},"component":{}}],["submodul",{"_index":567,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["success",{"_index":468,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"29":{},"47":{},"49":{}},"component":{}}],["such",{"_index":149,"title":{},"name":{},"text":{"1":{},"3":{},"5":{},"8":{},"10":{},"12":{},"14":{},"15":{},"16":{},"23":{},"24":{},"27":{},"31":{},"33":{},"34":{},"35":{},"42":{},"43":{},"45":{},"47":{},"50":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["sudo",{"_index":665,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["suffic",{"_index":357,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["suggest",{"_index":619,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["suit",{"_index":1218,"title":{},"name":{},"text":{"19":{},"38":{},"60":{}},"component":{}}],["sum",{"_index":1270,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["suppli",{"_index":170,"title":{},"name":{},"text":{"1":{},"15":{},"24":{},"34":{},"43":{},"56":{}},"component":{}}],["support",{"_index":548,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["sure",{"_index":569,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["swipe",{"_index":688,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["switch",{"_index":869,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["syntax",{"_index":411,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["synth",{"_index":447,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["system",{"_index":74,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["t",{"_index":913,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["tabl",{"_index":1112,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["take",{"_index":139,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["target",{"_index":428,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["task",{"_index":948,"title":{},"name":{},"text":{"10":{}},"component":{}}],["tbase",{"_index":816,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["tell",{"_index":51,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["templat",{"_index":363,"title":{},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"45":{},"51":{}},"component":{}}],["term",{"_index":1156,"title":{"17-7":{},"36-7":{},"58-7":{}},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["text",{"_index":238,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"10":{},"14":{},"24":{},"29":{},"33":{},"43":{},"49":{},"50":{},"55":{}},"component":{}}],["text_align",{"_index":981,"title":{},"name":{},"text":{"10":{}},"component":{}}],["text_color",{"_index":798,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["that’",{"_index":943,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["theme",{"_index":733,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["theme’",{"_index":747,"title":{},"name":{},"text":{"8":{},"10":{}},"component":{}}],["therebi",{"_index":135,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["therefor",{"_index":414,"title":{},"name":{},"text":{"5":{},"8":{},"10":{},"22":{},"27":{},"41":{},"47":{},"50":{},"63":{}},"component":{}}],["there’",{"_index":230,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["thing",{"_index":280,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["third",{"_index":1134,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["those",{"_index":923,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["three",{"_index":864,"title":{},"name":{},"text":{"9":{},"22":{},"41":{},"51":{},"63":{}},"component":{}}],["through",{"_index":34,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["thumb",{"_index":301,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["tile",{"_index":482,"title":{"23":{},"42":{},"64":{},"23-2":{},"23-12":{},"42-2":{},"42-13":{},"64-2":{},"64-13":{}},"name":{"23":{},"42":{},"64":{}},"text":{"6":{},"15":{},"23":{},"28":{},"34":{},"42":{},"48":{},"56":{},"64":{}},"component":{}}],["time",{"_index":201,"title":{},"name":{},"text":{"1":{},"15":{},"24":{},"34":{},"43":{},"56":{}},"component":{}}],["tip",{"_index":685,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["tl",{"_index":739,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["togeth",{"_index":781,"title":{},"name":{},"text":{"8":{},"10":{},"50":{}},"component":{}}],["toggl",{"_index":703,"title":{"8-12":{}},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["toggle_button",{"_index":821,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["toggle_button(styl",{"_index":886,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["togglebutton",{"_index":817,"title":{},"name":{},"text":{"8":{},"9":{},"51":{}},"component":{}}],["tool",{"_index":542,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["toolchain",{"_index":537,"title":{"7-18":{},"29-18":{},"49-18":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["top",{"_index":508,"title":{},"name":{},"text":{"6":{},"8":{},"11":{},"12":{},"13":{},"15":{},"16":{},"18":{},"23":{},"28":{},"30":{},"31":{},"32":{},"34":{},"35":{},"37":{},"42":{},"48":{},"50":{},"52":{},"53":{},"54":{},"56":{},"57":{},"59":{},"64":{}},"component":{}}],["topic",{"_index":921,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["total",{"_index":1019,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["tr",{"_index":740,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["track",{"_index":300,"title":{},"name":{},"text":{"1":{},"9":{},"24":{},"43":{},"51":{}},"component":{}}],["trail",{"_index":898,"title":{},"name":{},"text":{"9":{}},"component":{}}],["tri",{"_index":309,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["trigger",{"_index":862,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["true",{"_index":901,"title":{},"name":{},"text":{"9":{},"10":{},"17":{},"36":{},"51":{},"58":{}},"component":{}}],["turn",{"_index":1085,"title":{},"name":{},"text":{"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["twice",{"_index":1255,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["two",{"_index":299,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"22":{},"24":{},"29":{},"41":{},"43":{},"49":{},"51":{},"63":{}},"component":{}}],["type",{"_index":345,"title":{"3-4":{},"45-4":{}},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"23":{},"31":{},"33":{},"34":{},"35":{},"42":{},"45":{},"50":{},"51":{},"53":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["type`float",{"_index":738,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["typic",{"_index":174,"title":{},"name":{},"text":{"1":{},"9":{},"10":{},"23":{},"24":{},"42":{},"43":{},"51":{},"64":{}},"component":{}}],["ui",{"_index":1064,"title":{},"name":{},"text":{"12":{},"16":{},"31":{},"35":{},"53":{},"57":{}},"component":{}}],["unbound",{"_index":1164,"title":{},"name":{},"text":{"17":{},"36":{},"58":{}},"component":{}}],["undefin",{"_index":1131,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["under",{"_index":338,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"45":{},"46":{},"47":{},"48":{},"49":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["understand",{"_index":270,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["unicod",{"_index":730,"title":{},"name":{},"text":{"8":{},"50":{}},"component":{}}],["unix",{"_index":538,"title":{"7-21":{},"7-26":{},"29-21":{},"29-26":{},"49-21":{},"49-26":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["unlik",{"_index":1059,"title":{},"name":{},"text":{"12":{},"31":{},"53":{}},"component":{}}],["unsign",{"_index":1242,"title":{},"name":{},"text":{"21":{},"40":{},"62":{}},"component":{}}],["until",{"_index":871,"title":{},"name":{},"text":{"9":{},"14":{},"33":{},"51":{},"55":{}},"component":{}}],["up",{"_index":669,"title":{},"name":{},"text":{"7":{},"16":{},"17":{},"19":{},"29":{},"35":{},"36":{},"38":{},"49":{},"57":{},"58":{},"60":{}},"component":{}}],["updat",{"_index":928,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["us",{"_index":48,"title":{"7-9":{},"7-10":{},"7-14":{},"7-20":{},"7-21":{},"7-25":{},"7-26":{},"29-9":{},"29-10":{},"29-14":{},"29-20":{},"29-21":{},"29-25":{},"29-26":{},"49-9":{},"49-10":{},"49-14":{},"49-20":{},"49-21":{},"49-25":{},"49-26":{}},"name":{},"text":{"1":{},"3":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"36":{},"37":{},"39":{},"40":{},"42":{},"43":{},"45":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"55":{},"56":{},"57":{},"58":{},"59":{},"61":{},"62":{},"64":{}},"component":{}}],["usabl",{"_index":67,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["user",{"_index":134,"title":{},"name":{},"text":{"1":{},"6":{},"8":{},"9":{},"24":{},"28":{},"43":{},"48":{},"50":{},"51":{}},"component":{}}],["util",{"_index":422,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["val",{"_index":917,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["valign",{"_index":1001,"title":{"11-15":{},"30-19":{},"52-19":{}},"name":{},"text":{},"component":{}}],["valign(0.0",{"_index":1032,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["valign(0.5",{"_index":1034,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["valign(1.0",{"_index":1033,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["valign(align",{"_index":1030,"title":{},"name":{},"text":{"11":{},"30":{},"52":{}},"component":{}}],["valu",{"_index":371,"title":{"9-13":{},"51-16":{}},"name":{},"text":{"3":{},"8":{},"9":{},"10":{},"15":{},"19":{},"21":{},"22":{},"34":{},"38":{},"40":{},"41":{},"45":{},"50":{},"51":{},"56":{},"60":{},"62":{},"63":{}},"component":{}}],["value(v",{"_index":916,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["variabl",{"_index":604,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["variant",{"_index":1203,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["variou",{"_index":351,"title":{},"name":{},"text":{"3":{},"6":{},"8":{},"9":{},"10":{},"11":{},"18":{},"20":{},"28":{},"30":{},"37":{},"39":{},"45":{},"48":{},"51":{},"52":{},"59":{},"61":{}},"component":{}}],["vcpkg",{"_index":617,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["vcpkg.bat",{"_index":625,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["vcpkg\\bootstrap",{"_index":624,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["vector",{"_index":1139,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["veri",{"_index":22,"title":{},"name":{},"text":{"1":{},"12":{},"24":{},"31":{},"43":{},"53":{}},"component":{}}],["versatil",{"_index":519,"title":{},"name":{},"text":{"6":{},"28":{},"48":{}},"component":{}}],["version",{"_index":555,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["vertic",{"_index":1031,"title":{"15-15":{},"23-12":{},"34-15":{},"42-13":{},"56-15":{},"64-13":{}},"name":{},"text":{"11":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"30":{},"33":{},"34":{},"35":{},"36":{},"39":{},"40":{},"41":{},"42":{},"52":{},"55":{},"56":{},"57":{},"58":{},"61":{},"62":{},"63":{},"64":{}},"component":{}}],["vgrid",{"_index":1108,"title":{"15-17":{},"34-17":{},"56-17":{}},"name":{},"text":{},"component":{}}],["vgrid(posit",{"_index":1140,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["vgrid_composit",{"_index":1109,"title":{"15-23":{},"34-23":{},"56-23":{}},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["via",{"_index":914,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["view",{"_index":120,"title":{},"name":{},"text":{"1":{},"6":{},"13":{},"14":{},"17":{},"24":{},"28":{},"32":{},"33":{},"36":{},"43":{},"48":{},"54":{},"55":{},"58":{}},"component":{}}],["view_(_win",{"_index":121,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["view_.cont",{"_index":122,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["view_limit",{"_index":1154,"title":{"17-2":{},"36-2":{},"58-2":{}},"name":{},"text":{"17":{},"20":{},"36":{},"39":{},"58":{},"61":{}},"component":{}}],["view_stretch",{"_index":1253,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["view’",{"_index":185,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["violat",{"_index":1092,"title":{},"name":{},"text":{"13":{},"15":{},"16":{},"18":{},"20":{},"32":{},"34":{},"35":{},"37":{},"39":{},"54":{},"56":{},"57":{},"59":{},"61":{}},"component":{}}],["viral",{"_index":435,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["virtual",{"_index":360,"title":{},"name":{},"text":{"3":{},"9":{},"21":{},"22":{},"40":{},"41":{},"45":{},"51":{},"62":{},"63":{}},"component":{}}],["visual",{"_index":417,"title":{"7-15":{},"29-15":{},"49-15":{}},"name":{},"text":{"5":{},"6":{},"7":{},"9":{},"27":{},"28":{},"29":{},"47":{},"48":{},"49":{},"51":{}},"component":{}}],["vmargin",{"_index":1184,"title":{"18-19":{},"37-25":{},"59-25":{}},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["vmargin(top",{"_index":1206,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["vmargin({top",{"_index":1205,"title":{},"name":{},"text":{"18":{},"37":{},"59":{}},"component":{}}],["vmax_siz",{"_index":1229,"title":{"20-29":{},"39-38":{},"61-38":{}},"name":{},"text":{},"component":{}}],["vmax_size(height",{"_index":1240,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["vmin_siz",{"_index":1226,"title":{"20-20":{},"39-26":{},"61-26":{}},"name":{},"text":{},"component":{}}],["vmin_size(height",{"_index":1238,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["void(bool",{"_index":895,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["vs",{"_index":641,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["vsize",{"_index":1223,"title":{"20-11":{},"39-14":{},"61-14":{}},"name":{},"text":{},"component":{}}],["vsize(height",{"_index":1235,"title":{},"name":{},"text":{"20":{},"39":{},"61":{}},"component":{}}],["vst",{"_index":424,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["vstretch",{"_index":1247,"title":{"22-5":{},"41-6":{},"63-6":{}},"name":{},"text":{},"component":{}}],["vstretch(stretch",{"_index":1261,"title":{},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["vtile",{"_index":1251,"title":{"23-14":{},"42-15":{},"64-15":{}},"name":{},"text":{"22":{},"41":{},"63":{}},"component":{}}],["vtile(e1,...en",{"_index":1273,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["vtile(item1",{"_index":1274,"title":{},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["vtile_composit",{"_index":1265,"title":{"23-18":{},"42-20":{},"64-20":{}},"name":{},"text":{"23":{},"42":{},"64":{}},"component":{}}],["want",{"_index":151,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"24":{},"29":{},"43":{},"49":{},"51":{}},"component":{}}],["way",{"_index":291,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"15":{},"16":{},"23":{},"24":{},"29":{},"33":{},"34":{},"35":{},"42":{},"43":{},"49":{},"55":{},"56":{},"57":{},"64":{}},"component":{}}],["weak",{"_index":378,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["weak_element_const_ptr",{"_index":384,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["weak_element_ptr",{"_index":382,"title":{},"name":{},"text":{"3":{},"45":{}},"component":{}}],["webp",{"_index":592,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["websit",{"_index":653,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["well",{"_index":70,"title":{},"name":{},"text":{"1":{},"5":{},"24":{},"27":{},"43":{},"47":{}},"component":{}}],["we’v",{"_index":192,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["whenev",{"_index":891,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["whether",{"_index":907,"title":{},"name":{},"text":{"9":{},"10":{}},"component":{}}],["widget",{"_index":160,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["width",{"_index":1174,"title":{},"name":{},"text":{"17":{},"20":{},"36":{},"39":{},"58":{},"61":{}},"component":{}}],["window",{"_index":4,"title":{"1-3":{},"7-11":{},"7-17":{},"24-3":{},"29-11":{},"29-17":{},"43-3":{},"49-11":{},"49-17":{}},"name":{},"text":{"1":{},"7":{},"17":{},"24":{},"29":{},"36":{},"43":{},"49":{},"58":{}},"component":{}}],["window’",{"_index":128,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["within",{"_index":78,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"13":{},"14":{},"17":{},"24":{},"27":{},"28":{},"32":{},"36":{},"43":{},"47":{},"48":{},"54":{},"58":{}},"component":{}}],["without",{"_index":171,"title":{},"name":{},"text":{"1":{},"7":{},"24":{},"29":{},"43":{},"49":{}},"component":{}}],["work",{"_index":553,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["world",{"_index":682,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["wrap",{"_index":219,"title":{},"name":{},"text":{"1":{},"24":{},"43":{}},"component":{}}],["write",{"_index":924,"title":{},"name":{},"text":{"9":{},"51":{}},"component":{}}],["written",{"_index":403,"title":{},"name":{},"text":{"5":{},"27":{},"47":{}},"component":{}}],["x",{"_index":223,"title":{},"name":{},"text":{"1":{},"11":{},"17":{},"22":{},"24":{},"30":{},"36":{},"41":{},"43":{},"52":{},"58":{},"63":{}},"component":{}}],["x64/x86",{"_index":642,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["x=0",{"_index":1132,"title":{},"name":{},"text":{"15":{},"34":{},"56":{}},"component":{}}],["xcode",{"_index":531,"title":{"7-10":{},"29-10":{},"49-10":{}},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["y",{"_index":226,"title":{},"name":{},"text":{"1":{},"7":{},"11":{},"17":{},"22":{},"24":{},"29":{},"30":{},"36":{},"41":{},"43":{},"49":{},"52":{},"58":{},"63":{}},"component":{}}],["you’d",{"_index":679,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["z",{"_index":1058,"title":{},"name":{},"text":{"12":{},"16":{},"31":{},"35":{},"53":{},"57":{}},"component":{}}],["zero",{"_index":272,"title":{},"name":{},"text":{"1":{},"17":{},"24":{},"36":{},"43":{},"58":{}},"component":{}}],["zlib",{"_index":584,"title":{},"name":{},"text":{"7":{},"29":{},"49":{}},"component":{}}],["zoom",{"_index":1221,"title":{},"name":{},"text":{"19":{},"38":{},"60":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"The key design aspects of the Elements C++ GUI library are: Modular: Elements is very lightweight and extremely modular, facilitating the composition of fine-grained, flyweight, and reusable ``elements'' into complex element hierarchies. This is achieved through a declarative interface with heavy emphasis on reuse, allowing developers to build sophisticated GUI structures efficiently. Declarative: Elements exposes a declarative API using modern C++. Declarative C++ code tells you what rather than how (contrasting with imperative programming which involves control flow). There are no code generators. The GUI is declared entirely in C++ code. After a while, code reuse, using a palette of fine-grained elements, becomes very familiar and intuitive, much like using HTML. Interoperable: Elements is usable in any application and plays well with other GUI libraries and frameworks. The library is loosely coupled with the application and windowing system and can co-exist with components within a host. It should be easy to integrate Elements with any existing application. This document will demonstrate the modular and declarative design aspects of the Elements library through examples. Specific examples should make it clear. Let’s start with a basic window with a dark grey background. The examples presented here can be found in this link: https://github.com/cycfi/elements/tree/master/examples/doc_aspects #include using namespace cycfi::elements; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); int main(int argc, const char* argv[]) { app _app(argc, argv); window _win(_app.name()); _win.on_close = [&_app]() {_app.stop();}; view view_(_win); view_.content( background ); _app.run(); return 0; } Here, we create an app and a window, and set the window’s on_close to stop (quit) the application. _win.on_close is called when the window is closed by the user, thereby quitting the application. Like any other GUI library or framework, the app manages the main event loop, while the window manages application windows. However, take note that the app and the window classes are optional. There are certain situations, like e.g. building plugins or incorporating Elements in another framework such as QT, where you do not want Elements to manage the event loop or windows. The important class of interest here is the view. In these cases, you want to embed the view directly. You can directly construct a view given a platform window (or widget), as its main content view or child window (or widget). The view does not know anything about drawing or user interaction. Instead, it relies on its client supplied content to do these. Without any content, it is an empty shell. And so this is where it starts to get interesting. The content of the view typically contains multiple layers, much like typical graphics applications. In this example, we only have one layer: the background. auto background = box(bkd_color); It is a simple, infinitely resizable box with the specified color: rgba(35, 35, 37, 255). It will resize automatically when the window is resized. We set it as the view’s content: view_.content( background ); Running this example, you get: Now let’s add a blue round rectangle. We’ve seen how to create a box: the background using box, passing in a color. A rounded box is created using rbox, passing in the color and the corner radius: auto blue_rbox = rbox(colors::medium_blue, 10); The color, this time, is specified by name from the colors namespace. The namespace includes all predefined colors from the standard HTML Color Names. We can actually use blue_rbox already, as-is, by placing it in another layer in the view: view_.content( blue_rbox, background ); But like the box, the rbox is infinitely resizable and will hog the entire window. What we want is to give it a specific size and center it in the window. Elements are very lightweight. Most elements do not even have a size, nor know their position in the view (elements without position information are inherently relocatable —they can be placed anywhere; the position is supplied at rendering time). So we give it a 100x50 size by wrapping it in the fixed_size element: auto blue_rbox = fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ); And then we align it centered (in the x axis) and middle (in the Y axis) using the align_center_middle element: auto blue_rbox = align_center_middle( fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ) ); Without the alignment element, the main window would have been constrained to a fixed 100x50 size. There’s a multitude of alignment elements available. See Layout. So now, we are seeing how fine-grained elements are composed. The rbox is placed inside the fixed_size element which is then placed inside a align_center_middle element. Let’s run this example: Our goal this time is to place some text inside the blue box. The element we will use is the label. Most elements do not have a size, but as an exception, labels (simple text elements) do. So, instead of fixing the size of the box using fixed_size, we place the label alongside the box in a layer element, but add some margin around the label. Here’s how you do it: auto blue_rbox = align_center_middle( layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) ); If it’s not obvious yet, let’s take it apart into its constituent pieces: Step 1: We make a label: label(\"“Dogs are my favorite people”\") Step 2: We add margin around it: margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ) Note that like the align elements, there’s a multitude of margins such as left_margin, right_margin, etc. Step 3: We make a blue rounded box: rbox(colors::medium_blue, 10) Step 4: We place the label and the blue rounded box as siblings in a layer element: layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) Step 4: Then finally, we place it in the align_center_middle element. If the element hierarchy gets a bit too deep, use the C++ auto to name sub-parts of the element composition to make it easier to understand. The layer element is a composite element that holds zero or more child elements. Some of you might have noticed that we already mentioned the layer element before when we were discussing the view’s content in the App and Window section: `The content of the `view typically contains multiple layers, much like typical graphics applications''. Well, actually, this is the same layer thing here. The view’s main content is a layer element. So now we have: To demonstrate the fine-grained and modular nature of Elements, it is perhaps illustrative to say that many components in Elements, including the slider element, are not atomic and are actually composed of smaller parts. In this section, we will see how one creates a slider from the basic parts that we have dealt with in the previous sections. Take note that this example is only for illustrative purposes. The library provides easier ways to make sliders. Elements has a collection of pre-made, reusable element compositions, just like what we do here, but more refined. That collection is constantly growing. Composing elements is fun! The slider has two parts: the track and the thumb. Here, we make a simple track using the same old box. We made it black. Then, we reused the same \"Dogs are my favorite people\" label for the thumb. The result looks silly, I should say, but hey, we are trying to make a point! auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ); auto funny_slider = slider(thumb, track); And here it is in action: Now, like before, we add our funny slider to our view: view_.content( align_center(funny_slider), background ); But note that, in this case, we want to center the slider only horizontally, so we use align_center instead of align_center_middle. Ok, there you go! Now go and be creative and make your own controls! Here’s the complete prgram: #include using namespace cycfi::elements; using cycfi::artist::rgba; namespace colors = cycfi::artist::colors; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), margin( {5, 5, 5, 5}, rbox(colors::medium_blue, 10) ) ); auto funny_slider = slider(thumb, track); int main(int argc, char* argv[]) { app _app(\"Aspects\"); window _win(_app.name()); _win.on_close = [&_app]() { _app.stop(); }; view view_(_win); view_.content( align_center(funny_slider), background ); _app.run(); return 0; } Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Design Aspects","component":"elements","version":"docs_2024","name":"aspects","url":"/elements/docs_2024/aspects.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Minimal Example","hash":"_minimal_example","id":2},{"text":"App and Window","hash":"_app_and_window","id":3},{"text":"Background","hash":"_background","id":4},{"text":"Aligns and Sizes","hash":"_aligns_and_sizes","id":5},{"text":"Labels, Margins and Layers","hash":"_labels_margins_and_layers","id":6},{"text":"Let’s Make a Slider","hash":"_lets_make_a_slider","id":7}]},"2":{"id":2,"text":"","title":"","component":"elements","version":"docs_2024","name":"common","url":"/elements/docs_2024/common.html","titles":[]},"3":{"id":3,"text":"The Element is the basic building block of the Elements Library. This document provides an overview of the various elements available. This section will focus on how elements are used, instead of how they are implemented. We will deal with the latter in the Customization section. It suffices to say that elements are implemented as a hierarchy of classes, with the element class at the root. The element class provides the interface for all elements. The element class is a polymorphic class with virtual functions for rendering, layout, and event handling. The Elements Library uses a couple of simple concepts to constrain the types of elements that can be used with templates and template functions. The Element concept constrains the type of a class that derives from the element class, while the ElementPtr concept constrains the type of a pointer to an element. namespace concepts { template concept Element = std::is_base_of_v>; template concept ElementPtr = requires(T p) { { *p } -> std::convertible_to; }; } Most elements are held by value, but they can also be held by shared pointers. Elements held by shared pointers are necessary when elements are placed inside homogeneously typed containers such as std::vector. The library provides a share function for converting an element to a shared pointer. A similar facility is provided for converting a shared pointer to a weak pointer. There are a couple of type aliases that are useful when dealing with shared pointers: using element_ptr = std::shared_ptr; using element_const_ptr = std::shared_ptr; using weak_element_ptr = std::weak_ptr; using weak_element_const_ptr = std::weak_ptr; e Instance of type element ep Instance of type std::shared_ptr, where E is a type that conforms to the Element concept. share(e) (1) get(ep) (2) 1 Returns a shared pointer from element e. The element is copied, or moved, into the shared pointer. 2 Returns a weak pointer from the shared pointer to an element, ep. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements","component":"elements","version":"docs_2024","name":"elements","url":"/elements/docs_2024/elements.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Concepts","hash":"_concepts","id":2},{"text":"Shared Pointers","hash":"_shared_pointers","id":3},{"text":"Type aliases","hash":"_type_aliases","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expressions","hash":"_expressions","id":6},{"text":"Semantics","hash":"_semantics","id":7}]},"4":{"id":4,"text":"Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Gallery","component":"elements","version":"docs_2024","name":"gallery","url":"/elements/docs_2024/gallery.html","titles":[{"text":"It’s always a nice to have some pretty pictures:","hash":"_its_always_a_nice_to_have_some_pretty_pictures","id":1}]},"5":{"id":5,"text":"Elements is a lightweight, fine-grained, resolution-independent, extremely modular GUI library. The library is written using modern C++17 language features. It has a declarative interface with a sensible and easy-to-use Domain Specific Embedded Languages (DSEL) syntax for constructing the GUI elements. A declarative description of the GUI is written exclusively in C++, and therefore, there is no need for an external visual GUI editor or code generator. Elements is embeddable, meaning you can embed it in any application, and it will play well with other GUI libraries and frameworks. This also implies that you can utilize it for the creation of plugins. It does not own the event loop and is able to co-exist with components within a plugin host, such as VST and AU. Porting to a new host target is straightforward, requiring the porting of only a few files. Elements is distributed under the liberal and non-viral MIT License. Gallery Setup and Installation Design Aspects Layout Joel got into electronics and programming in the 80s because almost everything in music, his first love, is becoming electronic and digital. Since then, he builds his own guitars, effect boxes and synths. He enjoys playing distortion-laden rock guitar, composes and produces his own music in his home studio. Joel de Guzman is the principal architect and engineer at Cycfi Research. He is a software engineer specializing in advanced C++ and an advocate of Open Source. He has authored a number of highly successful Open Source projects such as Boost.Spirit, Boost.Phoenix and Boost.Fusion. These libraries are all part of the Boost Libraries, a well respected, peer-reviewed, Open Source, collaborative development effort. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements C++ GUI library","component":"elements","version":"docs_2024","name":"index","url":"/elements/docs_2024/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Documentation","hash":"_documentation","id":2},{"text":"The Author","hash":"_the_author","id":3}]},"6":{"id":6,"text":"The Elements Library provides a comprehensive set of elements for laying out elements in the view, including tiles, grids, flow layouts, floating elements, layers, alignment elements, scale elements, and span elements. Tiles arrange elements in rows or columns, positioning them one after the other based on the child element’s sizing limits. Grids offer a structured layout with rows and columns, using normalized coordinate placements. The flow element arranges its children left to right, fitting as many as possible within each row, and moves to the next row once full. Floating elements allow for arbitrary positioning within containers. Layers enable elements to be stacked on top of each other. The document also details the use of margins and sizing elements to provide proper spacing and ensure elements fit within the layout. Alignment elements ensure correct positioning. Scale elements adjust size proportionally. Span elements extend across multiple grid cells. By combining these various layout elements, developers can create versatile, responsive, and visually consistent user interfaces that adapt seamlessly across different devices and screen sizes. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"docs_2024","name":"layout","url":"/elements/docs_2024/layout.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"7":{"id":7,"text":"Here are the basic tools that you need in order to use the library: A C++20 compiler Git CMake 3.16 or higher Elements currently supports the MacOS, Windows and Linux. In the Mac, we support the XCode IDE. In Windows, we support Windows 10 with Visual Studio 2022, although it will probably also work with older versions of the Visual Studio IDE. In Linux, we support both Clang and g++. Get the latest version with a C++20 compiler. The CLion IDE is supported on all platforms, it simply requires the CMakeLists.txt file to open and build the project. Elements C++ GUI library, plus the Cycfi Infra library: git clone --recurse-submodules https://github.com/cycfi/elements.git Make sure you have CMake 3.15 or higher. Follow the installation procedure for your platform, or follow the instructions below for specific environments. Here are Element’s dependencies: pkg-config Cairo fontconfig freetype2 bzip2 expat zlib libpng libwebp Specific instructions are provided below for specific environments. Additionally, the following libraries are dragged as submodules: The Cycfi infra library Infra provides some basic groundwork common to Cycfi libraries, including Elements. Using Homebrew: brew install pkg-config brew install cairo brew install fontconfig brew install bzip2 brew install expat brew install zlib brew install libpng brew install webp brew install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for the MacOS: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -GXcode ../ If you are having issues with code signing, disable it by setting the CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED variable to NO: cmake -GXcode -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO ../ If successful, CMake will generate an XCode project in the build directory. Open the project file elements.xcodeproj and build all. You should see a couple of example applications. If you are having problems with code signing, do this: Build Settings→Code Signing Identity for ALL_BUILD and elements, click, then choose \"Other\", then clear the text (empty). Do this for both ALL_BUILD and elements. The Windows port requires a package manager that supports the dependencies listed above. One popular package manager is vcpkg. We will use vcpkg in the setup instructions below. Clone and bootstrap the vcpkg dependency manager. I suggest placing it in c:\\ or c:\\Program Files, but it does not really matter where. git clone https://github.com/microsoft/vcpkg .\\vcpkg\\bootstrap-vcpkg.bat Install the dependencies: vcpkg install pkgconf vcpkg install cairo vcpkg install libwebp Installing Cairo already brings in the other dependencies. Follow the installation procedure. If you have Visual Studio 2022: Use the Visual Studio GUI for a graphical development environment. Use NMake for make-style command-line builds. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build You will need to tell cmake the location of the vcpkg toolchain file. That way, find_package will know where to find the installed libraries. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"Visual Studio 17 2022\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake ../ If successful, cmake will generate a Visual Studio solution in the build directory. Open the project file elements.sln and build all. You should see a couple of example applications. Open a Command Prompt for VS 2022 ({x64/x86-64} {Native/Cross} Tools Command Prompt for VS 2019) in your start menu. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build Again, you will need to tell cmake the location of the vcpkg toolchain file. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"NMake Makefiles\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake ../ If successful, cmake will generate NMake Make files in the build directory. Invoke nmake to build the binary. MSYS2 is a software distro and building platform for Windows Download MSYS2 from its official website and install it. Its installation guide is on the home page. Open MSYS2 MinGW 64-bit or MSYS2 MinGW 32-bit from your start menu. Install tools and libraries: pacman -S ${MINGW_PACKAGE_PREFIX}-toolchain pacman -S ${MINGW_PACKAGE_PREFIX}-cairo pacman -S ${MINGW_PACKAGE_PREFIX}-gtk3 pacman -S ${MINGW_PACKAGE_PREFIX}-libwebp pacman -S make pacman -S ${MINGW_PACKAGE_PREFIX}-cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for MSYS2: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. -DELEMENTS_HOST_UI_LIBRARY=gtk tells cmake to build with Gtk. cd elements mkdir build cd build cmake ../ -G \"Unix Makefiles\" -DELEMENTS_HOST_UI_LIBRARY=gtk If successful, cmake will generate Unix Make files in the build directory. In addition to the requirements listed in the requirements section, the GTK3 library is also required by the Linux port of Elements. On Debian and derived distributions using apt-get (requires sudo): sudo apt-get install libcairo2-dev sudo apt-get install libgtk-3-dev sudo apt-get install libwebp-dev sudo apt-get -y install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for Linux: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -G \"Unix Makefiles\" ../ If successful, cmake will generate Unix Make files in the build directory. If successful, cmake will generate a project file or makefiles in the build directory. Build the library and example programs using the generated makefiles or open the project file using your IDE and build all. You should see a couple of example applications in there that you can run. These examples are provided as starting points to get you up to speed in learning how to use the library. For simplicity, each example is contained in a single main.cpp source file. Feel free to inspect and mess with the examples. Each example demonstrates different aspects of the Elements library, from layout to control. You’d probably want to start with the “hello_universe” example, which is the Element’s hello-world counterpart. You can copy the “empty” example and use it as a boilerplate for your own project. See next section on how to copy an example and build outside the Elements project directory. Tips: Resize the window and see the elements fluidly resize Use two-finger swipe to move the sliders and knobs The Elements project is set up so that you can easily copy and paste any of the examples outside the project, set -DELEMENTS_ROOT=\"path/to/elements\", and the example should immediately build without any hassle. Here’s an example for XCode assuming the elements lib is in the same directory alongside the \"hello_universe\" example directory you copied to: Copy the hello_universe example project directory. Make a build directory inside the hello_universe directory. CD to the build directory. cmake -GXcode -DELEMENTS_ROOT=\"../elements\" ../ Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Setup and Installation","component":"elements","version":"docs_2024","name":"setup","url":"/elements/docs_2024/setup.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"C++20","hash":"_c20","id":2},{"text":"Git","hash":"_git","id":3},{"text":"CMake","hash":"_cmake","id":4},{"text":"Required Libraries","hash":"_required_libraries","id":5},{"text":"MacOS","hash":"_macos","id":6},{"text":"Install required libraries","hash":"_install_required_libraries","id":7},{"text":"Install CMake","hash":"_install_cmake","id":8},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake","id":9},{"text":"Using XCode","hash":"_using_xcode","id":10},{"text":"Windows","hash":"_windows","id":11},{"text":"Install required libraries","hash":"_install_required_libraries_2","id":12},{"text":"Install CMake","hash":"_install_cmake_2","id":13},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_2","id":14},{"text":"Visual Studio 2022 GUI","hash":"_visual_studio_2022_gui","id":15},{"text":"NMake","hash":"_nmake","id":16},{"text":"Windows (MinGW + Gtk)","hash":"_windows_mingw_gtk","id":17},{"text":"Install MSYS2 toolchain and required libraries","hash":"_install_msys2_toolchain_and_required_libraries","id":18},{"text":"Install CMake","hash":"_install_cmake_3","id":19},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_3","id":20},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles","id":21},{"text":"Linux","hash":"_linux","id":22},{"text":"Install required libraries","hash":"_install_required_libraries_3","id":23},{"text":"Install CMake","hash":"_install_cmake_4","id":24},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_4","id":25},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles_2","id":26},{"text":"Building and Running the examples","hash":"_building_and_running_the_examples","id":27},{"text":"Building Outside the Project","hash":"_building_outside_the_project","id":28}]},"8":{"id":8,"text":"This document provides a list of button stylers that can be used to style buttons in the Elements Library. The button stylers are used to define the appearance of buttons, such as colors, borders, icons and labels, and shapes. The button stylers are separate from the button classes, which handle user interactions. This separation of responsibilities allows for greater flexibility in defining the button’s appearance and behavior. The default_button_styler class is the base class for button stylers. It provides the default appearance for buttons. There are a couple of derived classes that provide various properties that override the defaults. These shall remain private to the library. class default_button_styler; namespace concepts { template concept ButtonStyler = std::is_base_of_v>; } label An object of type std::string. bst A button styler instance. size The button’s relative size of type float. color An object of type color. icon_id Unicode code point of type std::uint32_t from the Global theme icon_font. margin The margin in pixels of type rect. r The corner radius in pixels of type`float`. tl, tr, bl, br The corner radius in pixels for top-left, top-right, bottom-left, and bottom-right corners of type float. Expression Semantics button_styler{label} Create a button styler with the given label. bst.size(size) Sets the relative size of the button. size is relative to the default size dictated by the Global theme’s label_font. A value greater than 1.0 makes the button larger. A value less than 1.0 makes the button smaller. Adds a size property to the styler. bst.color(color) Sets the color of the button. bst.active_body_color(color) Sets the active body color of the button. Adds an active body color property to the styler. bst.text_color(color) Sets the text color of the button. Adds a text color property to the styler. bst.icon(icon_id) Sets the icon of the button. Adds an icon property to the styler. bst.icon_left() Sets the icon to the left of the text. Adds an icon placement property to the styler. bst.icon_right() Sets the icon to the right of the text. Adds an icon placement property to the styler. bst.icon_color(color) Sets the icon color of the button. Adds an icon color property to the styler. bst.align_left() Aligns the text and icon to the left. Adds a label alignment property to the styler. bst.align_center() Aligns the text and icon to the center. Adds a label alignment property to the styler. bst.align_right() Aligns the text and icon to the right. Adds a label alignment property to the styler. bst.margin(margin) Sets the margin of the button. Adds a margin property to the styler. bst.corner_radius(r) Sets the corner radius of the button. Adds a corner radius property to the styler. bts.corner_radius(tl, tr, bl, br) Sets the corner radius of the button for each corner. Adds individual corner radius properties to the styler. bts.rounded_top() Sets the top corners of the button to be rounded with the default radius. bts.rounded_bottom() Sets the bottom corners of the button to be rounded with the default radius. bts.rounded_left() Sets the left corners of the button to be rounded with the default radius. bts.rounded_right() Sets the right corners of the button to be rounded with the default radius. bts.rounded_top(r) Sets the top corners of the button to be rounded with a specific radius. Adds top-left and top-right corner radius properties to the styler. bts.rounded_bottom(r) Sets the bottom corners of the button to be rounded with a specific radius. Adds bottom-left and bottom-right corner radius properties to the styler. bts.rounded_left(r) Sets the left corners of the button to be rounded with a specific radius. Adds top-left and bottom-left corner radius properties to the styler. bts.rounded_right(r) Sets the right corners of the button to be rounded with a specific radius. Adds top-right and bottom-right corner radius properties to the styler. bts.rounded_corner_top_left(r) Sets the top-left corner of the button to be rounded with a specific radius. Adds top-left corner radius property to the styler. bts.rounded_corner_top_right(r) Sets the top-right corner of the button to be rounded with a specific radius. Adds top-right corner radius property to the styler. bts.rounded_corner_bottom_left(r) Sets the bottom-left corner of the button to be rounded with a specific radius. Adds bottom-left corner radius property to the styler. bts.rounded_corner_bottom_right(r) Sets the bottom-right corner of the button to be rounded with a specific radius. Adds bottom-right corner radius property to the styler. All of these expressions return the button styler. Therefore, these expressions can be chained together to create the button styler with the desired appearance. The result is then passed to one of the button creation functions (see Buttons). Make a default momentary button with label \"My Button\": auto btn = momentary_button( button_styler{\"My Button\"} ); Make a blue momentary button with label \"Lock\": auto btn = momentary_button( button_styler{\"Lock\"} .body_color(colors::blue) ); Make a momentary button with label \"Rounded Left\" and a left_circled icon, aligned to the left, with a rounded left corner of 10 pixels: auto btn = momentary_button( button_styler{\"Rounded Left\"} .align_left() .icon(icons::left_circled) .icon_left() .rounded_left(10) ); The basic button styler is a simple button with a text label with no icon, with these defaults: Property Default Value size 1.0f body_color Global theme default_button_color active_body_color body_color text_color Global theme label_font_color icon 0 icon_placement icon_none icon_color Global theme label_font_color label_alignment align_center margin Global theme button_margin corner_radius Global theme button_corner_radius corner_radius_top_left corner_radius corner_radius_top_right corner_radius corner_radius_bottom_left corner_radius corner_radius_bottom_right corner_radius The following convenience functions are provided to create commonly used buttons. These functions simplify button creation, allowing users to quickly implement standard button types with minimal effort. label An object of type std::string. bst A button styler instance. size The button’s relative size of type float. color An object of type color. icon_id Unicode code point of type std::uint32_t from the MBase Type that conforms to the MomentaryButton concept. TBase Type that conforms to the ToggleButton concept. LBase Type that conforms to the LatchingButton concept. [, …​] Optional parameters. Expression Semantics button( label [, size, color] ) Creates a button with label, and optional size, and color. button( label [, size, color] ) Creates a button with label, and optional size, and color, using the MBase template. button( icon_id, label, size [, color] ) Creates a momentary button with icon to the left, label, size, and optional color. button( icon_id, label, size [, color] ) Creates a momentary button with icon to the left, label, size, and optional color, using the MBase template. button( label, icon_id, size [, color] ) Creates a momentary button with label, icon to the right, size, and optional color. button( label, icon_id, size [, color] ) Creates a momentary button with label, icon to the right, size, and optional color, using the MBase template. Expression Semantics toggle_button( label [, size, color] ) Creates a toggle button with label, and optional size, and color. toggle_button( label [, size, color] ) Creates a toggle button with label, and optional size, and color, using the TBase template. toggle_button( icon_id, label, size [, color] ) Creates a toggle button with icon to the left, label, size, and optional color. toggle_button( icon_id, label [, size, color] ) Creates a toggle button with icon to the left, label, size, and optional color, using the TBase template. toggle_button( label, icon_id, size [, color] ) Creates a toggle button with label, icon to the right, size, and optional color. toggle_button( label, icon_id, size [, color] ) Creates a toggle button with label, icon to the right, size, and optional color, using the TBase template. Expression Semantics latching_button( label [, size, color] ) Creates a latching button with label, and optional size, and color. latching_button( label [, size, color] ) Creates a latching button with label, and optional size, and color, using the LBase template. latching_button( icon_id, label, size [, color] ) Creates a latching button with icon to the left, label, size, and optional color. latching_button( icon_id, label, size [, color] ) Creates a latching button with icon to the left, label, size, and optional color, using the LBase template. latching_button( label, icon_id, size [, color] ) Creates a latching button with label, icon to the right, size, and optional color. latching_button( label, icon_id, size [, color] ) Creates a latching button with label, icon to the right, size, and optional color, using the LBase template. These are overloaded forwarding functions that create a button styler with specified properties and pass it to the corresponding button creation function. Example: //////////////////////////////////////////////////////////////////////////// // Make a momentary button with label //////////////////////////////////////////////////////////////////////////// template inline auto button( std::string label , float size = 1.0 , color body_color = get_theme().default_button_color) { return momentary_button( button_styler{std::move(label)} .size(size) .body_color(body_color) ); } The following functions are provided to get and set the properties of a button styler. label An object of type std::string. bst A button styler instance. size The button’s relative size of type float. color An object of type color. icon_id Unicode code point of type std::uint32_t from the Global theme icon_font. margin The margin in pixels of type rect. r The corner radius in pixels of type`float`. tl, tr, bl, br The corner radius in pixels for top-left, top-right, bottom-left, and bottom-right corners of type float. Expression Semantics bst.set_text(label) Sets the text of the button. bst.get_text() Gets the text of the button. Returns std::string_view. bst.get_size() Gets the size of the button. Size is in pixels Returns the default if the styler does not have a size property. Returns float. bst.set_size(size) Sets the size of the button. Size is in pixels Compiler error if the styler does not have a size property. bst.get_body_color() Gets the body color of the button. Returns the default if the styler does not have a body color property. Returns color. bst.set_body_color(color) Sets the body color of the button. Compiler error if the styler does not have a body color property. bst.get_active_body_color() Gets the active body color of the button. Returns the default if the styler does not have an active body color property. Returns color. bst.set_active_body_color(color) Sets the active body color of the button. Compiler error if the styler does not have an active body color property. bst.get_text_color() Gets the text color of the button. Returns the default if the styler does not have a text color property. Returns color. bst.set_text_color(color) Sets the text color of the button. Compiler error if the styler does not have a text color property. bst.get_icon() Gets the icon of the button. Returns the default if the styler does not have an icon property. Returns std::uint32_t. bst.set_icon(icon_id) Sets the icon of the button. Compiler error if the styler does not have an icon property. bst.get_icon_placement() Gets the icon placement of the button. Returns the default if the styler does not have an icon placement property. Returns icon_placement. bst.set_icon_placement(placement) Sets the icon placement of the button. Compiler error if the styler does not have an icon placement property. bst.icon_left() Sets the icon to the left of the text. Compiler error if the styler does not have an icon placement property. bst.icon_right() Sets the icon to the right of the text. Compiler error if the styler does not have an icon placement property. bst.get_icon_color() Gets the icon color of the button. Returns the default if the styler does not have an icon color property. Returns color. bst.set_icon_color(color) Sets the icon color of the button. Compiler error if the styler does not have an icon color property. bst.get_label_alignment() Gets the label alignment of the button. Returns the default if the styler does not have a label alignment property. Returns label_alignment. bst.set_label_alignment(align) Sets the label alignment of the button. Compiler error if the styler does not have a label alignment property. bst.align_left() Aligns the text and icon to the left. Compiler error if the styler does not have a label alignment property. bst.align_center() Aligns the text and icon to the center. Compiler error if the styler does not have a label alignment property. bst.align_right() Aligns the text and icon to the right. Compiler error if the styler does not have a label alignment property. bst.get_margin() Gets the margin of the button. Returns the default if the styler does not have a margin property. Returns rect. bst.set_margin(margin) Sets the margin of the button. Compiler error if the styler does not have a margin property. bst.get_corner_radius() Gets the corner radius of the button. Returns the default if the styler does not have a corner radius property. Returns float. bst.set_corner_radius(r) Sets the corner radius of the button. Compiler error if the styler does not have a corner radius property. bst.set_corner_radius( tl, tr, bl, br ) Sets the corner radius of the button for each corner. Compiler error if the styler does not have individual corner radius property. bst.get_corner_radius_top_left() Gets the top-left corner radius of the button. Returns the default if the styler does not have a specific top-left corner radius property. Returns float. bst.get_corner_radius_top_right() Gets the top-right corner radius of the button. Returns the default if the styler does not have a specific top-right corner radius property. Returns float. bst.get_corner_radius_bottom_left() Gets the bottom-left corner radius of the button. Returns the default if the styler does not have a specific bottom-left corner radius property. Returns float. bst.get_corner_radius_bottom_right() Gets the bottom-right corner radius of the button. Returns the default if the styler does not have a specific bottom-right corner radius property. Returns float. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Button Stylers","component":"elements","version":"docs_2024","name":"button_stylers","url":"/elements/docs_2024/elements/button_stylers.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Declaration","hash":"_declaration","id":2},{"text":"Concepts","hash":"_concepts","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expressions","hash":"_expressions","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"Button Styler Defaults","hash":"_button_styler_defaults","id":7},{"text":"Convenience Functions","hash":"_convenience_functions","id":8},{"text":"Notation","hash":"_notation_2","id":9},{"text":"Expressions","hash":"_expressions_2","id":10},{"text":"Momentary buttons","hash":"_momentary_buttons","id":11},{"text":"Toggle Buttons","hash":"_toggle_buttons","id":12},{"text":"Latching Buttons","hash":"_latching_buttons","id":13},{"text":"Getters and Setters","hash":"_getters_and_setters","id":14},{"text":"Notation","hash":"_notation_3","id":15},{"text":"Expressions","hash":"_expressions_3","id":16}]},"9":{"id":9,"text":"Buttons are used to trigger actions or events. Buttons in the Elements Library are stylable with separate elements for behavior and appearance. Three types of buttons are available: momentary, toggle, and latching: Momentary buttons Buttons that stay on while clicked. They are typically used to trigger an action. Toggle buttons Buttons that alternate their state with each press. They are used to switch between two states. Latching buttons Buttons are buttons that stay on until programmatically reset. These classes delegate the rendering to a button styler subject. This separation of responsibilities provides greater flexibility in defining the button’s appearance and behavior. The button classes handle user interactions, while the button styler manages the button’s visual presentation. With this pattern, different stylers can be implemented for various visual representations, for instance, plain buttons, radio buttons, slide switches, checkboxes, and more. class basic_button; // Base class for momentary buttons class basic_toggle_button; // Base class for toggle buttons class basic_latching_button; // Base class for latching buttons namespace concepts { template concept MomentaryButton = std::is_base_of_v>; template concept ToggleButton = std::is_base_of_v>; template concept LatchingButton = std::is_base_of_v>; } styler Styler instance that conforms to the Element concept. MBase Type that conforms to the MomentaryButton concept. TBase Type that conforms to the ToggleButton concept. LBase Type that conforms to the LatchingButton concept. Expression Semantics momentary_button(styler); Creates a momentary button with the given styler element. toggle_button(styler); Creates a toggle button with the given styler element. latching_button(styler) Creates a latching button with the given styler element. momentary_button( styler ) Creates a momentary button with the given styler element. MBase is the base type that must conform to the MomentaryButton concept. toggle_button( styler ) Creates a toggle button with the given styler element. TBase is the base type that must conform to the ToggleButton concept. latching_button( styler ) Creates a latching button with the given styler element. LBase is the base type that must conform to the LatchingButton concept. The provided base types MBase, TBase, and LBase offer the flexibility to use custom button behavior, provided they adhere to their respective concepts. Buttons include an on_click callable object, which is called whenever the button is clicked. btn A Button instance. f A callback function with the signature void(bool state). Expression Semantics btn.on_click = f; Assigns a callable function, f, to the button’s on_click event. The on_click callback is called at the trailing edge of the click, just before release. Momentary and latching buttons will always have a state of true when its on_click callback is called. Toggle buttons will will have a state that alternates between true and false with each click. The client provides a callback function, typically a c++ lambda, that will be called when the button is clicked. The type of the on_click callable object is: std::function The state argument indicates whether the button is ON (true) or OFF (false). btn.on_click = [](bool state) { std::cout API. receiver is mixin class that provides a common interface for setting and querying the values of type T via virtual member functions, value() and value(val). btn A Button instance. val A boolean value. Expression Semantics btn.value(val) Sets the value of the button to val. btn.value() Returns the current value of the button. This section is an advanced topic only relevant to those who want to write custom buttons. This section may be skipped by most users. The button styler is a separate element that is responsible for rendering the button. The communication with the button styler is done via the receiver API. This API provides a means to update the button styler about changes in button’s state to allow the styler to adjust the visual representation accordingly. If the button styler is as a subclass of receiver API, it will receive a button_state when the button’s state changes: struct button_state { bool value : 1 = false; bool hilite : 1 = false; bool tracking : 1 = false; bool enabled : 1 = true; }; button_state is struct struct for maintaining and managing the state of a button. This structure captures the various states that a button can have: value: The button’s value; 0(off) or 1(on). hilite: True if the button is highlighted (when the mouse is hovering over the button). tracking: True if the mouse button being pressed. enabled: True if the button is enabled. The button styler is just an element and does not have to follow the receiver API. If that’s the case, then the button rendering will be static, and not adjust to state changes. This may still be useful in certain cases. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Buttons","component":"elements","version":"docs_2024","name":"buttons","url":"/elements/docs_2024/elements/buttons.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Declaration","hash":"_declaration","id":2},{"text":"Concepts","hash":"_concepts","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expressions","hash":"_expressions","id":5},{"text":"On Click","hash":"_on_click","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expressions","hash":"_expressions_2","id":8},{"text":"Example","hash":"_example","id":9},{"text":"Enable/Disable","hash":"_enabledisable","id":10},{"text":"Notation","hash":"_notation_3","id":11},{"text":"Expressions","hash":"_expressions_3","id":12},{"text":"Value","hash":"_value","id":13},{"text":"Notation","hash":"_notation_4","id":14},{"text":"Expressions","hash":"_expressions_4","id":15},{"text":"Button Styler","hash":"_button_styler","id":16},{"text":"button_state","hash":"_button_state","id":17}]},"10":{"id":10,"text":"Labels are used to display static text. They are typically used for various tasks such as annotating other elements, such as input fields or buttons. Label stylers allow for the customization of the label’s appearance, including the font, font color, font size, and text alignment. The default_label_styler class is the base class for label stylers. It provides the default appearance for labels. There are a couple of derived classes that provide various properties that override the defaults. These shall remain private to the library. class default_label_styler; namespace concepts { template concept ButtonStyler = std::is_base_of_v>; } str std::string lst A label styler instance. font A font descriptor font_descr. size float. color An object of type color. Expression Semantics label(str) Create a label styler with the given text. heading(str) Create a heading with the given text. lst.font(font) Set the font of the label. Adds a font property to the label styler. lst.font_size(size) Set the font size of the label. Adds a font size property to the label styler. lst.relative_font_size(size) Set the relative font size of the label. size is relative to the default size dictated by the Global theme’s label_font. A value greater than 1.0 makes the label larger. A value less than 1.0 makes the label smaller. Adds a font size property to the label styler. lst.font_color(color) Set the font color of the label. Adds a font color property to the label styler. lst.text_align(align) Set the text alignment of the label. See text-align for more info. Adds a text alignment property to the label styler. All of these expressions return the label styler. Therefore, these expressions can be chained together to create the label styler with the desired appearance. auto my_label = label(\"My Label\") .font(font_descr{\"Open Sans\"}.semi_bold()) .font_color(colors::antique_white) .font_size(18) ; Labels can be either enabled or disabled. When a label is disabled, it will appear grayed-out, indicating its disabled state. lst A label styler instance. state A boolean value indicating whether the label is enabled or disabled. Expression Semantics lst.enable(state) Sets the label’s enabled state. Pass true to the state argument to enable the label, or false to disable it. lst.is_enabled() Returns true if the label is enabled, false otherwise. The default label styler is created with the following defaults: Property Default font Global theme label_font font_size Global theme label_font.size relative_font_size 1.0f font_color Global theme label_font_color text_align Global theme label_text_align The default heading styler is created with the following defaults: Property Default font Global theme heading_font font_size Global theme heading_font.size relative_font_size 1.0f font_color Global theme heading_font_color text_align Global theme heading_text_align The following functions are provided to get and set the properties of a label styler. str std::string lst A label styler instance. font A font descriptor font_descr. size float. color An object of type color. Expression Semantics lst.get_text() Get the text of the label. Returns std::string. lst.set_text(str) Set the text of the label. lst.get_font() Get the font of the label. Returns font_descr. Returns the default if the styler does not have a font property. lst.set_font(font) Set the font of the label. Compiler error if the styler does not have a font property. lst.get_font_size() Get the font size of the label. Returns float. Returns the default if the styler does not have a font size property. lst.get_default_font_size() Get the default font size of the label. Returns float. lst.set_font_size(size) Set the font size of the label. Compiler error if the styler does not have a font size property. lst_set_relative_font_size(size) Set the relative font size of the label. Compiler error if the styler does not have a font size property. lst.get_font_color() Get the font color of the label. Returns color. Returns the default if the styler does not have a font color property. lst.set_font_color(color) Set the font color of the label. Compiler error if the styler does not have a font color property. lst.get_text_align() Get the text alignment of the label. Returns int. See text-align for more info. Returns the default if the styler does not have a text alignment property. lst.set_text_align(align) Set the text alignment of the label. See text-align for more info. Compiler error if the styler does not have a text alignment property. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Labels","component":"elements","version":"docs_2024","name":"labels","url":"/elements/docs_2024/elements/labels.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Declaration","hash":"_declaration","id":2},{"text":"Concepts","hash":"_concepts","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expressions","hash":"_expressions","id":5},{"text":"Example","hash":"_example","id":6},{"text":"Enable/Disable","hash":"_enabledisable","id":7},{"text":"Notation","hash":"_notation_2","id":8},{"text":"Expressions","hash":"_expressions_2","id":9},{"text":"Label Styler Defaults","hash":"_label_styler_defaults","id":10},{"text":"Heading Styler Defaults","hash":"_heading_styler_defaults","id":11},{"text":"Getters and Setters","hash":"_getters_and_setters","id":12},{"text":"Notation","hash":"_notation_3","id":13},{"text":"Expressions","hash":"_expressions_3","id":14}]},"11":{"id":11,"text":"An element can be aligned arbitrarily from 0.0 to 1.0 in either the x or y dimensions, or both. There is a comprehensive list of align elements in The Elements Library that can be used for various purposes. This section catalogues all the available align elements. Aligns the enclosed element (subject) in the x-axis. align float subject Instance of Element Expression Semantics halign(align, subject) Given a total allocated space X, subject will be positioned horizontally to X * align. The subject will assume its minimum horizontal limit. Returns instance of Proxy. halign(0.0) // align subject to the left halign(1.0) // align subject to the right halign(0.5) // align subject to the center Left-aligns the enclosed element (subject). subject Instance of Element Expression Semantics align_left(subject) Equivalent to halign(0.0, subject) Returns instance of Proxy. Center-aligns the enclosed element (subject). subject Instance of Element Expression Semantics align_center(subject) Equivalent to halign(0.5, subject) Returns instance of Proxy. Right-aligns the enclosed element (subject). subject Instance of Element Expression Semantics align_right(subject) Equivalent to halign(1.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) in the y-axis. align float subject Instance of Element Expression Semantics valign(align, subject) Given a total allocated space Y, subject will be positioned vertically to Y * align. The subject will assume its minimum vertical limit. Returns instance of Proxy. valign(0.0) // align subject to the top valign(1.0) // align subject to the right valign(0.5) // align subject to the middle Aligns the enclosed element (subject) to the top. subject Instance of Element Expression Semantics align_top(subject) Equivalent to valign(0.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the middle. subject Instance of Element Expression Semantics align_middle(subject) Equivalent to valign(0.5, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the bottom. subject Instance of Element Expression Semantics align_bottom(subject) Equivalent to valign(1.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-top. subject Instance of Element Expression Semantics align_left_top(subject) Equivalent to align_left(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-top. subject Instance of Element Expression Semantics align_center_top(subject) Equivalent to align_center(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-top. subject Instance of Element Expression Semantics align_right_top(subject) Equivalent to align_right(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-middle. subject Instance of Element Expression Semantics align_left_middle(subject) Equivalent to align_left(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-middle. subject Instance of Element Expression Semantics align_center_middle(subject) Equivalent to align_center(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-middle. subject Instance of Element Expression Semantics align_right_middle(subject) Equivalent to align_right(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-bottom. subject Instance of Element Expression Semantics align_left_bottom(subject) Equivalent to align_left(align_bottom(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-bottom. subject Instance of Element Expression Semantics align_center_bottom(subject) Equivalent to align_center(align_bottom(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-bottom. subject Instance of Element Expression Semantics align_right_bottom(subject) Equivalent to align_right(align_bottom(subject)) Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Alignment","component":"elements","version":"docs_2024","name":"alignment","url":"/elements/docs_2024/layout/alignment.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"halign","hash":"_halign","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4},{"text":"Examples","hash":"_examples","id":5},{"text":"align_left","hash":"_align_left","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expressions","hash":"_expressions_2","id":8},{"text":"align_center","hash":"_align_center","id":9},{"text":"Notation","hash":"_notation_3","id":10},{"text":"Expressions","hash":"_expressions_3","id":11},{"text":"align_right","hash":"_align_right","id":12},{"text":"Notation","hash":"_notation_4","id":13},{"text":"Expressions","hash":"_expressions_4","id":14},{"text":"valign","hash":"_valign","id":15},{"text":"Notation","hash":"_notation_5","id":16},{"text":"Expressions","hash":"_expressions_5","id":17},{"text":"Examples","hash":"_examples_2","id":18},{"text":"align_top","hash":"_align_top","id":19},{"text":"Notation","hash":"_notation_6","id":20},{"text":"Expressions","hash":"_expressions_6","id":21},{"text":"align_middle","hash":"_align_middle","id":22},{"text":"Notation","hash":"_notation_7","id":23},{"text":"Expressions","hash":"_expressions_7","id":24},{"text":"align_bottom","hash":"_align_bottom","id":25},{"text":"Notation","hash":"_notation_8","id":26},{"text":"Expressions","hash":"_expressions_8","id":27},{"text":"align_left_top","hash":"_align_left_top","id":28},{"text":"Notation","hash":"_notation_9","id":29},{"text":"Expressions","hash":"_expressions_9","id":30},{"text":"align_center_top","hash":"_align_center_top","id":31},{"text":"Notation","hash":"_notation_10","id":32},{"text":"Expressions","hash":"_expressions_10","id":33},{"text":"align_right_top","hash":"_align_right_top","id":34},{"text":"Notation","hash":"_notation_11","id":35},{"text":"Expressions","hash":"_expressions_11","id":36},{"text":"align_left_middle","hash":"_align_left_middle","id":37},{"text":"Notation","hash":"_notation_12","id":38},{"text":"Expressions","hash":"_expressions_12","id":39},{"text":"align_center_middle","hash":"_align_center_middle","id":40},{"text":"Notation","hash":"_notation_13","id":41},{"text":"Expressions","hash":"_expressions_13","id":42},{"text":"align_right_middle","hash":"_align_right_middle","id":43},{"text":"Notation","hash":"_notation_14","id":44},{"text":"Expressions","hash":"_expressions_14","id":45},{"text":"align_left_bottom","hash":"_align_left_bottom","id":46},{"text":"Notation","hash":"_notation_15","id":47},{"text":"Expressions","hash":"_expressions_15","id":48},{"text":"align_center_bottom","hash":"_align_center_bottom","id":49},{"text":"Notation","hash":"_notation_16","id":50},{"text":"Expressions","hash":"_expressions_16","id":51},{"text":"align_right_bottom","hash":"_align_right_bottom","id":52},{"text":"Notation","hash":"_notation_17","id":53},{"text":"Expressions","hash":"_expressions_17","id":54}]},"12":{"id":12,"text":"The Deck is very similar to Layers. Elements are placed in the z-axis. But unlike layers, only the selected element is active (top-most by default). Everything listed in the Layer Semantics, except 2 and 3. Only the active selected element element is drawn. Only the active selected element is given the chance to process UI control. Create a deck composite with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element. Elements e1,...eN are held in a std::array managed by the deck element. Expression Semantics deck(e1, e2, e3... eN) In addition to the semantics of Decks, returns instance of Composite. deck(item1, item2, item3, item4) If the number of elements is not fixed, you can use an deck_composite (see below). In addition to the semantics of Deck, returns instance of Composite. Create a deck with an indeterminate (dynamic) number of elements. c Instance of type deck_composite The deck_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use deck_composite just as you would a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. deck_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in deck_composite. deck_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Decks","component":"elements","version":"docs_2024","name":"decks","url":"/elements/docs_2024/layout/decks.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Semantics","hash":"_semantics","id":2},{"text":"deck","hash":"_deck","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expressions","hash":"_expressions","id":5},{"text":"Example","hash":"_example","id":6},{"text":"Requirements","hash":"_requirements","id":7},{"text":"deck_composite","hash":"_deck_composite","id":8},{"text":"Notation","hash":"_notation_2","id":9},{"text":"Expression","hash":"_expression","id":10},{"text":"Example","hash":"_example_2","id":11}]},"13":{"id":13,"text":"A floating element allows arbitrary placement of an enclosed element (subject) in the main view. Positions the enclosed element (subject) at specified coordinates, allowing it to float within the layout. left, top, right, bottom float subject Instance of Element Expression Semantics floating({left, top, right, bottom}, subject) The element will be placed exactly to the specified position in the main view, constrained to the subject’s natural limits. The floating element does not violate the natural limits of the subject. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Floating","component":"elements","version":"docs_2024","name":"floating","url":"/elements/docs_2024/layout/floating.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"floating","hash":"_floating","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4}]},"14":{"id":14,"text":"The flow element, is a composite that lays out its children much like the way text is laid out: lay out each element from left to right, fitting as much elements as possible following each child’s maximum horizontal limit. Once a row is full, move to the next row and do the same until the end of the row is filled. Repeat the procedure until all the elements are laid out. The height of each row is determined by the maximum vertical limit of all the elements to be laid out in that row. The following graphic depicts a simplified layout scenario for child elements a to r. The child elements arranged in a flow composite are automatically re-flowed when the view size changes. Create a flow_composite with an indeterminate (dynamic) number of elements to have elements laid out using flow. c Instance of type flow_composite The flow_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use flow_composite just as you would a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. flow_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in flow_composite. Once we have a flow_composite, we can place its contents in a flow element. c Instance of flow_composite Expression Semantics flow(c) Returns an instance of Composite where child elements are laid out from left to right, fitting as many elements as possible within each child’s maximum horizontal limit. Once a row is full, move to the next row and do the same until the end of the row is filled. Repeat the procedure until all the elements are laid out. The height of each row is determined by the maximum vertical limit of all the elements to be laid out in that row. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Flow","component":"elements","version":"docs_2024","name":"flow","url":"/elements/docs_2024/layout/flow.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"flow_composite","hash":"_flow_composite","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Example","hash":"_example","id":5},{"text":"flow","hash":"_flow","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expressions","hash":"_expressions","id":8},{"text":"Semantics","hash":"_semantics","id":9}]},"15":{"id":15,"text":"Grids are similar to tiles. Both tiles and grids allow elements to fluidly adjust depending on available space. Grids lay out its elements using externally supplied normalized fractional coordinates that specify positions of the elements in the allocated space. Grids are best for composing tables. Horizontal Grids are composites that lay out one or more child elements in a row following externally supplied horizontal fractional positions. Horizontal Grids have computed horizontal and vertical sizes following the natural limits of its children. The elements are laid out in a single row, left to right, immediately next to each other with no intervening space. The elements are positioned horizontally using the supplied fractional positions. The fractional positions values range from 0.0 to 1.0, which specify the child element’s horizontal position from left (0.0) to right (1.0). The grid’s minimum vertical limit is computed as the maximum of the children elements' minimum vertical limits. The grid’s maximum vertical limit is computed as the minimum of the children elements' maximum vertical limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The supplied (horizontal) positions and computed (vertical) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Build a horizontal grid with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element (more below) positions External container of fractional positions (more below) The external container, positions, can either be a plain array of type float[N] or std::array. Elements e1,...eN are held in a std::array managed by the horizontal grid element. Expression Semantics hgrid(positions, e1,...eN) In addition to the semantics of Horizontal Grids, returns instance of Composite. static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... hgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an hgrid_composite (see below). The number of supplied positions and elements, multiplied by each element’s span, should match, otherwise, undefined behavior. By default elements have a span of 1. See Span Element for more information. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type hgrid_composite The hgrid_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use hgrid_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. hgrid_composite c{positions}; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in hgrid_composite. hgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] . Elements e1,...eN are held in a std::array managed by the vertical grid element. Expression Semantics vgrid(positions, e1,...eN) In addition to the semantics of Vertical Grids, returns instance of Composite. static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... vgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an vgrid_composite (see below). The number of supplied positions and elements, multiplied by each element’s span, should match, otherwise, undefined behavior. By default elements have a span of 1. See Span Element for more information. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type vgrid_composite The vgrid_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use vgrid_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. vgrid_composite c{positions}; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vgrid_composite. vgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] <= positions[n+1]. The behavior is undefined if this is violated. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Grids","component":"elements","version":"docs_2024","name":"grids","url":"/elements/docs_2024/layout/grids.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Horizontal Grids","hash":"_horizontal_grids","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"hgrid","hash":"_hgrid","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expressions","hash":"_expressions","id":6},{"text":"Example","hash":"_example","id":7},{"text":"Requirements","hash":"_requirements","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"hgrid_composite","hash":"_hgrid_composite","id":10},{"text":"Notation","hash":"_notation_2","id":11},{"text":"Expression","hash":"_expression","id":12},{"text":"Example","hash":"_example_2","id":13},{"text":"Requirements","hash":"_requirements_2","id":14},{"text":"Vertical Grids","hash":"_vertical_grids","id":15},{"text":"Semantics","hash":"_semantics_3","id":16},{"text":"vgrid","hash":"_vgrid","id":17},{"text":"Notation","hash":"_notation_3","id":18},{"text":"Expressions","hash":"_expressions_2","id":19},{"text":"Example","hash":"_example_3","id":20},{"text":"Requirements","hash":"_requirements_3","id":21},{"text":"Semantics","hash":"_semantics_4","id":22},{"text":"vgrid_composite","hash":"_vgrid_composite","id":23},{"text":"Notation","hash":"_notation_4","id":24},{"text":"Expression","hash":"_expression_2","id":25},{"text":"Example:","hash":"_example_4","id":26},{"text":"Requirements","hash":"_requirements_4","id":27}]},"16":{"id":16,"text":"The Elements Library is 2D, but the z-axis pertains to top-to-bottom layering. Layers allow groups of elements to be placed in the z-axis where higher-level elements obscure or hide lower-level elements. The elements are laid out in the z-axis, top to bottom. Rendering is done bottom-up; the bottom-most elements are drawn first. UI control (such as mouse clicks) proceeds from top to bottom. Higher-level elements are given control priority. If a higher-level element does not process the event, lower-level elements are given a chance. The layer’s minimum limit is computed as the maximum of the children elements' minimum limits. The layer’s maximum limit is computed as the minimum of the children elements' maximum limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The computed (vertical) and (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Create a layer composite with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the layer element. Expression Semantics layer(e1,...eN) In addition to the semantics of Layers, returns instance of Composite. layer(item1, item2, item3, item4) If the number of elements is not fixed, you can use an layer_composite (see below). Create a layer with an indeterminate (dynamic) number of elements: c Instance of type layer_composite The layer_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use layer_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. layer_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in layer_composite. layer_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"docs_2024","name":"layers","url":"/elements/docs_2024/layout/layers.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Semantics","hash":"_semantics","id":2},{"text":"layer","hash":"_layer","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expressions","hash":"_expressions","id":5},{"text":"Example","hash":"_example","id":6},{"text":"layer_composite","hash":"_layer_composite","id":7},{"text":"Notation","hash":"_notation_2","id":8},{"text":"Expression","hash":"_expression","id":9},{"text":"Example","hash":"_example_2","id":10}]},"17":{"id":17,"text":"Each element provides information on how it wants to be sized by means of min and max limits: a hint that determine its actual extent and how it will be placed in the view depending on available window space. view_limits is a struct that gives us the min and max information: struct view_limits { point min = {0.0, 0.0}; point max = {full_extent, full_extent}; }; full_extent An implementation-defined huge number that signifies an unbounded extent. point A data structure representing a coordinate in a 2D space used to specify positions or dimensions within the graphical context. By default, an element has full limits, meaning there is no constraints on its size. It is infinitely resizable: constexpr view_limits full_limits = { {0.0, 0.0} , {full_extent, full_extent} }; An element with full_limits can be resized from an empty point (zero x and y size) up to the full extent of the screen, and beyond (if possible). An element has a fixed horizontal size if this expression is true: limits.min.x == limits.max.x. An element has a fixed vertical size if this expression is true: limits.min.y == limits.max.y. {{100, 100}, {100, 100}}; // Fixed size {{100, 100}, {100, full_extent}}; // Fixed width, flexible height {{100, 100}, {100, 200}}; // Fixed width, semi-flexible height (100 to 200) For the purpose of this document, we will use these terms and expressions: limits The limits of an element limits.min The minimum limits of an element limits.min.x The minimum horizontal limit of an element limits.min.y The minimum vertical limit of an element limits.max The maximum limits of an element limits.max.x The maximum horizontal limit of an element limits.max.y The maximum vertical limit of an element horizontal limits (limits.min.x, limits.max.x) vertical limits (limits.min.y, limits.max.y) minimum limits (limits.min.x, limits.min.y) maximum limits (limits.max.x, limits.max.y) minimum horizontal limit limits.min.x maximum horizontal limit limits.max.x minimum vertical limit limits.min.y maximum vertical limit limits.max.y Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Limits","component":"elements","version":"docs_2024","name":"limits","url":"/elements/docs_2024/layout/limits.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"view_limits","hash":"_view_limits","id":2},{"text":"Declaration","hash":"_declaration","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"full_limits","hash":"_full_limits","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"Terms and Expressions","hash":"_terms_and_expressions","id":7}]},"18":{"id":18,"text":"Margins add some space around elements. There is a comprehensive list of margin elements in the Elements Library that can be used for various purposes. This section catalogues all the available margin elements. Adds a margin all around an enclosed element (subject). left, top, right, bottom float subject Instance of Element Expression Semantics margin({left, top, right, bottom}, subject ) Space is added to the left, top, right, and bottom of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin does not violate the natural limits of the subject. margin will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left of an enclosed element (subject). left float subject Instance of Element Expression Semantics margin_left(left, subject) Space is added to the left of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_left does not violate the natural limits of the subject. margin_left will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right of an enclosed element (subject). right float subject Instance of Element Expression Semantics margin_right(right, subject) Space is added to the right of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_right does not violate the natural limits of the subject. margin_right will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the top of an enclosed element (subject). top float subject Instance of Element Expression Semantics margin_top(top, subject) Space is added to the top of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_top does not violate the natural limits of the subject. margin_top will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the bottom of an enclosed element (subject). bottom float subject Instance of Element Expression Semantics margin_bottom(bottom, subject) Space is added to the bottom of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_bottom does not violate the natural limits of the subject. margin_bottom will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. (same as margin_left_right) Adds a margin to the left and right sides of an enclosed element (subject). left, right float subject Instance of Element Expression Semantics hmargin({left, right}, subject) hmargin(left, right, subject) margin_left_right({left, right}, subject) margin_left_right(left, right, subject) Space is added to the left and right sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The hmargin (and variants) does not violate the natural limits of the subject. hmargin (and variants) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. (same as margin_top_bottom) Adds a margin to the top and bottom sides of an enclosed element (subject). top, bottom float subject Instance of Element Expression Semantics vmargin({top, bottom}, subject) vmargin(top, bottom, subject) margin_top_bottom({top, bottom}, subject) margin_top_bottom(top, bottom, subject) Space is added to the top and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The vmargin (and variants) does not violate the natural limits of the subject. vmargin (and variants) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left and top sides of an enclosed element (subject). left, top float subject Instance of Element Expression Semantics margin_left_top({left, top}, subject) margin_left_top(left, top, subject) Space is added to the left and top sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_left_top (and variant) does not violate the natural limits of the subject. margin_left_top (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left and bottom sides of an enclosed element (subject). left, bottom float subject Instance of Element Expression Semantics margin_left_bottom({left, bottom}, subject) margin_left_bottom(left, bottom, subject) Space is added to the left and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_left_bottom (and variant) does not violate the natural limits of the subject. margin_left_bottom (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right and top sides of an enclosed element (subject). right, top float subject Instance of Element Expression Semantics margin_right_top({right, top}, subject) margin_right_top(right, top, subject) Space is added to the right and top sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_right_top (and variant) does not violate the natural limits of the subject. margin_right_top (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right and bottom sides of an enclosed element (subject). right, bottom float subject Instance of Element Expression Semantics margin_right_bottom({right, bottom}, subject) margin_right_bottom(right, bottom, subject) Space is added to the right and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_right_bottom (and variant) does not violate the natural limits of the subject. margin_right_bottom (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Margins","component":"elements","version":"docs_2024","name":"margins","url":"/elements/docs_2024/layout/margins.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"margin","hash":"_margin","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4},{"text":"margin_left","hash":"_margin_left","id":5},{"text":"Notation","hash":"_notation_2","id":6},{"text":"Expressions","hash":"_expressions_2","id":7},{"text":"margin_right","hash":"_margin_right","id":8},{"text":"Notation","hash":"_notation_3","id":9},{"text":"Expressions","hash":"_expressions_3","id":10},{"text":"margin_top","hash":"_margin_top","id":11},{"text":"Notation","hash":"_notation_4","id":12},{"text":"Expressions","hash":"_expressions_4","id":13},{"text":"margin_bottom","hash":"_margin_bottom","id":14},{"text":"Notation","hash":"_notation_5","id":15},{"text":"Expressions","hash":"_expressions_5","id":16},{"text":"hmargin","hash":"_hmargin","id":17},{"text":"Expressions","hash":"_expressions_6","id":18},{"text":"vmargin","hash":"_vmargin","id":19},{"text":"Notation","hash":"_notation_6","id":20},{"text":"Expressions","hash":"_expressions_7","id":21},{"text":"margin_left_top","hash":"_margin_left_top","id":22},{"text":"Notation","hash":"_notation_7","id":23},{"text":"Expressions","hash":"_expressions_8","id":24},{"text":"margin_left_bottom","hash":"_margin_left_bottom","id":25},{"text":"Notation","hash":"_notation_8","id":26},{"text":"Expressions","hash":"_expressions_9","id":27},{"text":"margin_right_top","hash":"_margin_right_top","id":28},{"text":"Notation","hash":"_notation_9","id":29},{"text":"Expressions","hash":"_expressions_10","id":30},{"text":"margin_right_bottom","hash":"_margin_right_bottom","id":31},{"text":"Notation","hash":"_notation_10","id":32},{"text":"Expressions","hash":"_expressions_11","id":33}]},"19":{"id":19,"text":"The Elements Library is resolution independent and elements can be scaled up or down to suit. The default scale is 1.0 (no scale). The scale element changes the scale of its enclosed element (subject). scale_ float subject Instance of Element Expression Semantics scale(scale_, subject) The subject will be scaled given the scale_ value. A value > 1.0 scales the element up (zoom in), while a value < 1.0 scales down (zoom out). Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Scale","component":"elements","version":"docs_2024","name":"scale","url":"/elements/docs_2024/layout/scale.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"scale","hash":"_scale","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4}]},"20":{"id":20,"text":"Size elements override the limits of an enclosed element. There is a comprehensive list of size related elements in the Elements Library that can be used for various purposes. This section catalogues all the available size elements. Overrides the limits of an element. limits Instance of view_limits subject Instance of Element Expression Semantics limit(limits, subject) The limits of subject will be set to the specified limits constrained by the natural limits of the subject. The natural limits of the element will not be violated. Returns an instance of Proxy. Fixes the size of an enclosed element (subject). width, height float subject Instance of Element Expression Semantics fixed_size({width, height}, subject ) subject will be laid out with a fixed width and height, constrained by the natural limits of the subject. The natural limits of the element will not be violated. Returns instance of Proxy. Fixes the horizontal size of an enclosed element (subject). width float subject Instance of Element Expression Semantics hsize(width, subject) subject will be laid out with a fixed width, constrained by the natural horizontal limits of the subject. The natural horizontal limits of the element will not be violated. The natural vertical limits of subject will not be affected. Returns instance of Proxy. Fixes the vertical limits of an enclosed element (subject). height float subject Instance of Element Expression Semantics vsize(height, subject) subject will be laid out with a fixed height, constrained by the natural vertical limits of the subject. The natural vertical limits of the element will not be violated. The natural horizontal limits of subject will not be affected. Returns instance of Proxy. Overrides the minimum limits of an enclosed element (subject). width, height float subject Instance of Element Expression Semantics min_size({width, height}, subject ) The minimum limits of subject will be set to the specified width and height, constrained by the natural minimum limits of the subject. The natural minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum horizontal limit of an enclosed element (subject). width float subject Instance of Element Expression Semantics hmin_size(width, subject) The minimum horizontal limit of subject will be set to the specified width constrained by the natural horizontal minimum limits of the subject. The natural horizontal minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum vertical limit of an enclosed element (subject). height float subject Instance of Element Expression Semantics vmin_size(height, subject) The minimum vertical limit of subject will be set to the specified height constrained by the natural vertical minimum limits of the subject. The natural vertical minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum limits of an enclosed element (subject). width, height float subject Instance of Element Expression Semantics max_size({width, height}, subject ) The maximum limits of subject will be set to the specified width and height, constrained by the natural maximum limits of the subject. The natural maximum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum horizontal limit of an enclosed element (subject). width float subject Instance of Element Expression Semantics max_size({width, height}, subject ) The maximum limits of subject will be set to the specified width and height, constrained by the natural maximum limits of the subject. The natural maximum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum vertical limit of an enclosed element (subject). height float subject Instance of Element Expression Semantics vmax_size(height, subject) The maximum vertical limit of subject will be set to the specified height constrained by the natural maximum vertical limit of the subject. The natural maximum vertical limit of the element will not be violated. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Sizing","component":"elements","version":"docs_2024","name":"sizing","url":"/elements/docs_2024/layout/sizing.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"limit","hash":"_limit","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4},{"text":"fixed_size","hash":"_fixed_size","id":5},{"text":"Notation","hash":"_notation_2","id":6},{"text":"Expressions","hash":"_expressions_2","id":7},{"text":"hsize","hash":"_hsize","id":8},{"text":"Notation","hash":"_notation_3","id":9},{"text":"Expressions","hash":"_expressions_3","id":10},{"text":"vsize","hash":"_vsize","id":11},{"text":"Notation","hash":"_notation_4","id":12},{"text":"Expressions","hash":"_expressions_4","id":13},{"text":"min_size","hash":"_min_size","id":14},{"text":"Notation","hash":"_notation_5","id":15},{"text":"Expressions","hash":"_expressions_5","id":16},{"text":"hmin_size","hash":"_hmin_size","id":17},{"text":"Notation","hash":"_notation_6","id":18},{"text":"Expressions","hash":"_expressions_6","id":19},{"text":"vmin_size","hash":"_vmin_size","id":20},{"text":"Notation","hash":"_notation_7","id":21},{"text":"Expressions","hash":"_expressions_7","id":22},{"text":"max_size","hash":"_max_size","id":23},{"text":"Notation","hash":"_notation_8","id":24},{"text":"Expressions","hash":"_expressions_8","id":25},{"text":"hmax_size","hash":"_hmax_size","id":26},{"text":"Notation","hash":"_notation_9","id":27},{"text":"Expressions","hash":"_expressions_9","id":28},{"text":"vmax_size","hash":"_vmax_size","id":29},{"text":"Notation","hash":"_notation_10","id":30},{"text":"Expressions","hash":"_expressions_10","id":31}]},"21":{"id":21,"text":"The span of an element is the number of columns or rows it occupies in a grid (see Horizontal Grids and Vertical Grids). The span of an element is determined by the element’s span member function: virtual unsigned span() const; By default, an element spans one column or one row. The span can be set to any positive integer value using the span function. Overrides the span of an an enclosed element (subject). nspans An unsigned integer subject Instance of Element Expression Semantics span(nspans, subject) The subject will assume a span with the given nspans value. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Span","component":"elements","version":"docs_2024","name":"span","url":"/elements/docs_2024/layout/span.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"span","hash":"_span","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4}]},"22":{"id":22,"text":"Resizable elements are elements with minimum limits that are less than the maximum limits in either x or y dimensions or both. Resizable elements can therefore stretch if there is extra available space allocated to it beyond its minimum limit. When two or more resizable elements are placed side by side in an htile or vtile, the element’s \"stretchiness\" determines how much extra space is given to it. The element’s \"stretchiness\" is determined by the element’s stretch member function: virtual view_stretch stretch() const; where view_stretch is a struct declared as: struct view_stretch { float x = 1.0; float y = 1.0; }; The view_stretch x and y members determine how much an element can stretch in the x or y dimensions. The default is 1.0. A stretchiness value of 2.0 means that the element is able to stretch twice as much compared to its siblings in an htile or vtile, assuming they have the default 1.0 stretchiness. Overrides the horizontal stretchiness of an an enclosed element (subject). stretch A scalar value subject Instance of Element Expression Semantics hstretch(stretch, subject) The subject will assume the given stretch value. The stretch value has no effect on elements with fixed horizontal size. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 1.0, 1.0 and 2.0, respectively: The element with the 2.0 stretch value stretches twice as much compared to its siblings. Overrides the vertical stretchiness of an an enclosed element (subject). stretch A scalar value subject Instance of Element Expression Semantics vstretch(stretch, subject) The subject will assume the given stretch value. The stretch value has no effect on elements with fixed vertical limits. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 0.5, 1.0 and 1.5, respectively: The element with the 0.5 stretch value stretches half less, while the element with the 1.5 stretches half more than the default. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Stretch","component":"elements","version":"docs_2024","name":"stretch","url":"/elements/docs_2024/layout/stretch.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"hstretch","hash":"_hstretch","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expressions","hash":"_expressions","id":4},{"text":"vstretch","hash":"_vstretch","id":5},{"text":"Notation","hash":"_notation_2","id":6},{"text":"Expressions","hash":"_expressions_2","id":7}]},"23":{"id":23,"text":"Tiles are the most useful layout elements. Tiles are used everywhere for composing hierarchical elements in rows and columns, typical to all GUIs. Tiles allow elements to fluidly adjust depending on available space. Tiles compute the layout of its elements using the children elements' size limits. Horizontal Tiles allow elements to fluidly adjust horizontally depending on available space. The elements are laid out in a single row, left to right, immediately next to each other with no intervening space. The elements are positioned horizontally using the children’s natural limits. Horizontal space is allocated using this algorithm: Space is allocated for each child element following the child’s natural minimum horizontal limit. If the allocated space exceeds the sum of all children elements' minimum horizontal limits, the extra space is given to each horizontally resizable element (limits.min.x managed by the horizontal tile element. Expression Semantics htile(e1,...eN) In addition to the semantics of Horizontal Tiles, returns instance of Composite. htile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an htile_composite (see below). Create a horizontal tile with an indeterminate (dynamic) number of elements. c Instance of type htile_composite The htile_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use htile_composite just as you would a std::vector, such as using push_back to add a child element. Just remember that the items are element_ptr instances. htile_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in htile_composite. htile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Vertical Tiles allow elements to fluidly adjust vertically depending on available space. The elements are laid out in a single column, top to bottom, immediately next to each other with no intervening space. The elements are positioned vertically using the children’s natural limits. Vertical space is allocated using this algorithm: Space is allocated for each child element following the child’s natural minimum vertical limit. If the allocated space exceeds the sum of all children elements' minimum vertical limits, the extra space is given to each vertically resizable element (limits.min.y managed by the vertical tile element. Expression Semantics vtile(e1,...eN) In addition to the semantics of Vertical Tiles, returns instance of Composite. vtile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an vtile_composite (see below). Create a vertical tile with an indeterminate (dynamic) number of elements. c Instance of type vtile_composite The vtile_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use vtile_composite in the same way as a std::vector, such as using push_back to add a child element. Just remember that the items are element_ptr instances. vtile_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vtile_composite. vtile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Tiles","component":"elements","version":"docs_2024","name":"tiles","url":"/elements/docs_2024/layout/tiles.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Horizontal Tiles","hash":"_horizontal_tiles","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"htile","hash":"_htile","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expressions","hash":"_expressions","id":6},{"text":"Example:","hash":"_example","id":7},{"text":"htile_composite","hash":"_htile_composite","id":8},{"text":"Notation","hash":"_notation_2","id":9},{"text":"Expression","hash":"_expression","id":10},{"text":"Example","hash":"_example_2","id":11},{"text":"Vertical Tiles","hash":"_vertical_tiles","id":12},{"text":"Semantics","hash":"_semantics_2","id":13},{"text":"vtile","hash":"_vtile","id":14},{"text":"Notation","hash":"_notation_3","id":15},{"text":"Expressions","hash":"_expressions_2","id":16},{"text":"Example","hash":"_example_3","id":17},{"text":"vtile_composite","hash":"_vtile_composite","id":18},{"text":"Notation","hash":"_notation_4","id":19},{"text":"Expression","hash":"_expression_2","id":20},{"text":"Example","hash":"_example_4","id":21}]},"24":{"id":24,"text":"The key design aspects of the Elements C++ GUI library are: Modular: Elements is very lightweight and extremely modular, facilitating the composition of fine-grained, flyweight, and reusable ``elements'' into complex element hierarchies. This is achieved through a declarative interface with heavy emphasis on reuse, allowing developers to build sophisticated GUI structures efficiently. Declarative: Elements exposes a declarative API using modern C++. Declarative C++ code tells you what rather than how (contrasting with imperative programming which involves control flow). There are no code generators. The GUI is declared entirely in C++ code. After a while, code reuse, using a palette of fine-grained elements, becomes very familiar and intuitive, much like using HTML. Interoperable: Elements is usable in any application and plays well with other GUI libraries and frameworks. The library is loosely coupled with the application and windowing system and can co-exist with components within a host. It should be easy to integrate Elements with any existing application. This document will demonstrate the modular and declarative design aspects of the Elements library through examples. Specific examples should make it clear. Let’s start with a basic window with a dark grey background. The examples presented here can be found in this link: https://github.com/cycfi/elements/tree/master/examples/doc_aspects #include using namespace cycfi::elements; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); int main(int argc, const char* argv[]) { app _app(argc, argv); window _win(_app.name()); _win.on_close = [&_app]() {_app.stop();}; view view_(_win); view_.content( background ); _app.run(); return 0; } Here, we create an app and a window, and set the window’s on_close to stop (quit) the application. _win.on_close is called when the window is closed by the user, thereby quitting the application. Like any other GUI library or framework, the app manages the main event loop, while the window manages application windows. However, take note that the app and the window classes are optional. There are certain situations, like e.g. building plugins or incorporating Elements in another framework such as QT, where you do not want Elements to manage the event loop or windows. The important class of interest here is the view. In these cases, you want to embed the view directly. You can directly construct a view given a platform window (or widget), as its main content view or child window (or widget). The view does not know anything about drawing or user interaction. Instead, it relies on its client supplied content to do these. Without any content, it is an empty shell. And so this is where it starts to get interesting. The content of the view typically contains multiple layers, much like typical graphics applications. In this example, we only have one layer: the background. auto background = box(bkd_color); It is a simple, infinitely resizable box with the specified color: rgba(35, 35, 37, 255). It will resize automatically when the window is resized. We set it as the view’s content: view_.content( background ); Running this example, you get: Now let’s add a blue round rectangle. We’ve seen how to create a box: the background using box, passing in a color. A rounded box is created using rbox, passing in the color and the corner radius: auto blue_rbox = rbox(colors::medium_blue, 10); The color, this time, is specified by name from the colors namespace. The namespace includes all predefined colors from the standard HTML Color Names. We can actually use blue_rbox already, as-is, by placing it in another layer in the view: view_.content( blue_rbox, background ); But like the box, the rbox is infinitely resizable and will hog the entire window. What we want is to give it a specific size and center it in the window. Elements are very lightweight. Most elements do not even have a size, nor know their position in the view (elements without position information are inherently relocatable —they can be placed anywhere; the position is supplied at rendering time). So we give it a 100x50 size by wrapping it in the fixed_size element: auto blue_rbox = fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ); And then we align it centered (in the x axis) and middle (in the Y axis) using the align_center_middle element: auto blue_rbox = align_center_middle( fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ) ); Without the alignment element, the main window would have been constrained to a fixed 100x50 size. There’s a multitude of alignment elements available. See Layout. So now, we are seeing how fine-grained elements are composed. The rbox is placed inside the fixed_size element which is then placed inside a align_center_middle element. Let’s run this example: Our goal this time is to place some text inside the blue box. The element we will use is the label. Most elements do not have a size, but as an exception, labels (simple text elements) do. So, instead of fixing the size of the box using fixed_size, we place the label alongside the box in a layer element, but add some margin around the label. Here’s how you do it: auto blue_rbox = align_center_middle( layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) ); If it’s not obvious yet, let’s take it apart into its constituent pieces: Step 1: We make a label: label(\"“Dogs are my favorite people”\") Step 2: We add margin around it: margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ) Note that like the align elements, there’s a multitude of margins such as left_margin, right_margin, etc. Step 3: We make a blue rounded box: rbox(colors::medium_blue, 10) Step 4: We place the label and the blue rounded box as siblings in a layer element: layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) Step 4: Then finally, we place it in the align_center_middle element. If the element hierarchy gets a bit too deep, use the C++ auto to name sub-parts of the element composition to make it easier to understand. The layer element is a composite element that holds zero or more child elements. Some of you might have noticed that we already mentioned the layer element before when we were discussing the view’s content in the App and Window section: `The content of the `view typically contains multiple layers, much like typical graphics applications''. Well, actually, this is the same layer thing here. The view’s main content is a layer element. So now we have: To demonstrate the fine-grained and modular nature of Elements, it is perhaps illustrative to say that many components in Elements, including the slider element, are not atomic and are actually composed of smaller parts. In this section, we will see how one creates a slider from the basic parts that we have dealt with in the previous sections. Take note that this example is only for illustrative purposes. The library provides easier ways to make sliders. Elements has a collection of pre-made, reusable element compositions, just like what we do here, but more refined. That collection is constantly growing. Composing elements is fun! The slider has two parts: the track and the thumb. Here, we make a simple track using the same old box. We made it black. Then, we reused the same \"Dogs are my favorite people\" label for the thumb. The result looks silly, I should say, but hey, we are trying to make a point! auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ); auto funny_slider = slider(thumb, track); And here it is in action: Now, like before, we add our funny slider to our view: view_.content( align_center(funny_slider), background ); But note that, in this case, we want to center the slider only horizontally, so we use align_center instead of align_center_middle. Ok, there you go! Now go and be creative and make your own controls! Here’s the complete prgram: #include using namespace cycfi::elements; using cycfi::artist::rgba; namespace colors = cycfi::artist::colors; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), margin( {5, 5, 5, 5}, rbox(colors::medium_blue, 10) ) ); auto funny_slider = slider(thumb, track); int main(int argc, char* argv[]) { app _app(\"Aspects\"); window _win(_app.name()); _win.on_close = [&_app]() { _app.stop(); }; view view_(_win); view_.content( align_center(funny_slider), background ); _app.run(); return 0; } Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Design Aspects","component":"elements","version":"master","name":"aspects","url":"/elements/aspects.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Minimal Example","hash":"_minimal_example","id":2},{"text":"App and Window","hash":"_app_and_window","id":3},{"text":"Background","hash":"_background","id":4},{"text":"Aligns and Sizes","hash":"_aligns_and_sizes","id":5},{"text":"Labels, Margins and Layers","hash":"_labels_margins_and_layers","id":6},{"text":"Let’s Make a Slider","hash":"_lets_make_a_slider","id":7}]},"25":{"id":25,"text":"","title":"","component":"elements","version":"master","name":"common","url":"/elements/common.html","titles":[]},"26":{"id":26,"text":"Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Gallery","component":"elements","version":"master","name":"gallery","url":"/elements/gallery.html","titles":[{"text":"It’s always a nice to have some pretty pictures:","hash":"_its_always_a_nice_to_have_some_pretty_pictures","id":1}]},"27":{"id":27,"text":"Elements is a lightweight, fine-grained, resolution-independent, extremely modular GUI library. The library is written using modern C++17 language features. It has a declarative interface with a sensible and easy-to-use Domain Specific Embedded Languages (DSEL) syntax for constructing the GUI elements. A declarative description of the GUI is written exclusively in C++, and therefore, there is no need for an external visual GUI editor or code generator. Elements is embeddable, meaning you can embed it in any application, and it will play well with other GUI libraries and frameworks. This also implies that you can utilize it for the creation of plugins. It does not own the event loop and is able to co-exist with components within a plugin host, such as VST and AU. Porting to a new host target is straightforward, requiring the porting of only a few files. Elements is distributed under the liberal and non-viral MIT License. Gallery Setup and Installation Design Aspects Layout Joel got into electronics and programming in the 80s because almost everything in music, his first love, is becoming electronic and digital. Since then, he builds his own guitars, effect boxes and synths. He enjoys playing distortion-laden rock guitar, composes and produces his own music in his home studio. Joel de Guzman is the principal architect and engineer at Cycfi Research. He is a software engineer specializing in advanced C++ and an advocate of Open Source. He has authored a number of highly successful Open Source projects such as Boost.Spirit, Boost.Phoenix and Boost.Fusion. These libraries are all part of the Boost Libraries, a well respected, peer-reviewed, Open Source, collaborative development effort. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements C++ GUI library","component":"elements","version":"master","name":"index","url":"/elements/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Documentation","hash":"_documentation","id":2},{"text":"The Author","hash":"_the_author","id":3}]},"28":{"id":28,"text":"The Elements Library provides a comprehensive set of elements for laying out elements in the view, including tiles, grids, flow layouts, floating elements, layers, alignment elements, scale elements, and span elements. Tiles arrange elements in rows or columns, positioning them one after the other based on the child element’s sizing limits. Grids offer a structured layout with rows and columns, using normalized coordinate placements. The flow element arranges its children left to right, fitting as many as possible within each row, and moves to the next row once full. Floating elements allow for arbitrary positioning within containers. Layers enable elements to be stacked on top of each other. The document also details the use of margins and sizing elements to provide proper spacing and ensure elements fit within the layout. Alignment elements ensure correct positioning. Scale elements adjust size proportionally. Span elements extend across multiple grid cells. By combining these various layout elements, developers can create versatile, responsive, and visually consistent user interfaces that adapt seamlessly across different devices and screen sizes. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"master","name":"layout","url":"/elements/layout.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"29":{"id":29,"text":"Here are the basic tools that you need in order to use the library: A C++20 compiler Git CMake 3.16 or higher Elements currently supports the MacOS, Windows and Linux. In the Mac, we support the XCode IDE. In Windows, we support Windows 10 with Visual Studio 2022, although it will probably also work with older versions of the Visual Studio IDE. In Linux, we support both Clang and g++. Get the latest version with a C++20 compiler. The CLion IDE is supported on all platforms, it simply requires the CMakeLists.txt file to open and build the project. Elements C++ GUI library, plus the Cycfi Infra library: git clone --recurse-submodules https://github.com/cycfi/elements.git Make sure you have CMake 3.15 or higher. Follow the installation procedure for your platform, or follow the instructions below for specific environments. Here are Element’s dependencies: pkg-config Cairo fontconfig freetype2 bzip2 expat zlib libpng libwebp Specific instructions are provided below for specific environments. Additionally, the following libraries are dragged as submodules: The Cycfi infra library Infra provides some basic groundwork common to Cycfi libraries, including Elements. Using Homebrew: brew install pkg-config brew install cairo brew install fontconfig brew install bzip2 brew install expat brew install zlib brew install libpng brew install webp brew install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for the MacOS: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -GXcode ../ If you are having issues with code signing, disable it by setting the CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED variable to NO: cmake -GXcode -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO ../ If successful, CMake will generate an XCode project in the build directory. Open the project file elements.xcodeproj and build all. You should see a couple of example applications. If you are having problems with code signing, do this: Build Settings→Code Signing Identity for ALL_BUILD and elements, click, then choose \"Other\", then clear the text (empty). Do this for both ALL_BUILD and elements. The Windows port requires a package manager that supports the dependencies listed above. One popular package manager is vcpkg. We will use vcpkg in the setup instructions below. Clone and bootstrap the vcpkg dependency manager. I suggest placing it in c:\\ or c:\\Program Files, but it does not really matter where. git clone https://github.com/microsoft/vcpkg .\\vcpkg\\bootstrap-vcpkg.bat Install the dependencies: vcpkg install pkgconf vcpkg install cairo vcpkg install libwebp Installing Cairo already brings in the other dependencies. Follow the installation procedure. If you have Visual Studio 2022: Use the Visual Studio GUI for a graphical development environment. Use NMake for make-style command-line builds. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build You will need to tell cmake the location of the vcpkg toolchain file. That way, find_package will know where to find the installed libraries. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"Visual Studio 17 2022\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake ../ If successful, cmake will generate a Visual Studio solution in the build directory. Open the project file elements.sln and build all. You should see a couple of example applications. Open a Command Prompt for VS 2022 ({x64/x86-64} {Native/Cross} Tools Command Prompt for VS 2019) in your start menu. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build Again, you will need to tell cmake the location of the vcpkg toolchain file. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"NMake Makefiles\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake ../ If successful, cmake will generate NMake Make files in the build directory. Invoke nmake to build the binary. MSYS2 is a software distro and building platform for Windows Download MSYS2 from its official website and install it. Its installation guide is on the home page. Open MSYS2 MinGW 64-bit or MSYS2 MinGW 32-bit from your start menu. Install tools and libraries: pacman -S ${MINGW_PACKAGE_PREFIX}-toolchain pacman -S ${MINGW_PACKAGE_PREFIX}-cairo pacman -S ${MINGW_PACKAGE_PREFIX}-gtk3 pacman -S ${MINGW_PACKAGE_PREFIX}-libwebp pacman -S make pacman -S ${MINGW_PACKAGE_PREFIX}-cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for MSYS2: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. -DELEMENTS_HOST_UI_LIBRARY=gtk tells cmake to build with Gtk. cd elements mkdir build cd build cmake ../ -G \"Unix Makefiles\" -DELEMENTS_HOST_UI_LIBRARY=gtk If successful, cmake will generate Unix Make files in the build directory. In addition to the requirements listed in the requirements section, the GTK3 library is also required by the Linux port of Elements. On Debian and derived distributions using apt-get (requires sudo): sudo apt-get install libcairo2-dev sudo apt-get install libgtk-3-dev sudo apt-get install libwebp-dev sudo apt-get -y install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for Linux: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -G \"Unix Makefiles\" ../ If successful, cmake will generate Unix Make files in the build directory. If successful, cmake will generate a project file or makefiles in the build directory. Build the library and example programs using the generated makefiles or open the project file using your IDE and build all. You should see a couple of example applications in there that you can run. These examples are provided as starting points to get you up to speed in learning how to use the library. For simplicity, each example is contained in a single main.cpp source file. Feel free to inspect and mess with the examples. Each example demonstrates different aspects of the Elements library, from layout to control. You’d probably want to start with the “hello_universe” example, which is the Element’s hello-world counterpart. You can copy the “empty” example and use it as a boilerplate for your own project. See next section on how to copy an example and build outside the Elements project directory. Tips: Resize the window and see the elements fluidly resize Use two-finger swipe to move the sliders and knobs The Elements project is set up so that you can easily copy and paste any of the examples outside the project, set -DELEMENTS_ROOT=\"path/to/elements\", and the example should immediately build without any hassle. Here’s an example for XCode assuming the elements lib is in the same directory alongside the \"hello_universe\" example directory you copied to: Copy the hello_universe example project directory. Make a build directory inside the hello_universe directory. CD to the build directory. cmake -GXcode -DELEMENTS_ROOT=\"../elements\" ../ Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Setup and Installation","component":"elements","version":"master","name":"setup","url":"/elements/setup.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"C++20","hash":"_c20","id":2},{"text":"Git","hash":"_git","id":3},{"text":"CMake","hash":"_cmake","id":4},{"text":"Required Libraries","hash":"_required_libraries","id":5},{"text":"MacOS","hash":"_macos","id":6},{"text":"Install required libraries","hash":"_install_required_libraries","id":7},{"text":"Install CMake","hash":"_install_cmake","id":8},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake","id":9},{"text":"Using XCode","hash":"_using_xcode","id":10},{"text":"Windows","hash":"_windows","id":11},{"text":"Install required libraries","hash":"_install_required_libraries_2","id":12},{"text":"Install CMake","hash":"_install_cmake_2","id":13},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_2","id":14},{"text":"Visual Studio 2022 GUI","hash":"_visual_studio_2022_gui","id":15},{"text":"NMake","hash":"_nmake","id":16},{"text":"Windows (MinGW + Gtk)","hash":"_windows_mingw_gtk","id":17},{"text":"Install MSYS2 toolchain and required libraries","hash":"_install_msys2_toolchain_and_required_libraries","id":18},{"text":"Install CMake","hash":"_install_cmake_3","id":19},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_3","id":20},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles","id":21},{"text":"Linux","hash":"_linux","id":22},{"text":"Install required libraries","hash":"_install_required_libraries_3","id":23},{"text":"Install CMake","hash":"_install_cmake_4","id":24},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_4","id":25},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles_2","id":26},{"text":"Building and Running the examples","hash":"_building_and_running_the_examples","id":27},{"text":"Building Outside the Project","hash":"_building_outside_the_project","id":28}]},"30":{"id":30,"text":"An element can be aligned arbitrarily from 0.0 to 1.0 in either the x or y dimensions, or both. There is a comprehensive list of align elements in The Elements Library that can be used for various purposes. This section catalogues all the available align elements. Aligns the enclosed element (subject) in the x-axis. align float subject Instance of Element halign(align, subject) Given a total allocated space X, subject will be positioned horizontally to X * align. The subject will assume its minimum horizontal limit. Returns instance of Proxy. halign(0.0) // align subject to the left halign(1.0) // align subject to the right halign(0.5) // align subject to the center Left-aligns the enclosed element (subject). subject Instance of Element align_left(subject) Equivalent to halign(0.0, subject) Returns instance of Proxy. Center-aligns the enclosed element (subject). subject Instance of Element align_center(subject) Equivalent to halign(0.5, subject) Returns instance of Proxy. Right-aligns the enclosed element (subject). subject Instance of Element align_right(subject) Equivalent to halign(1.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) in the y-axis. align float subject Instance of Element valign(align, subject) Given a total allocated space Y, subject will be positioned vertically to Y * align. The subject will assume its minimum vertical limit. Returns instance of Proxy. valign(0.0) // align subject to the top valign(1.0) // align subject to the right valign(0.5) // align subject to the middle Aligns the enclosed element (subject) to the top. subject Instance of Element align_top(subject) Equivalent to valign(0.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the middle. subject Instance of Element align_middle(subject) Equivalent to valign(0.5, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the bottom. subject Instance of Element align_bottom(subject) Equivalent to valign(1.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-top. subject Instance of Element align_left_top(subject) Equivalent to align_left(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-top. subject Instance of Element align_center_top(subject) Equivalent to align_center(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-top. subject Instance of Element align_right_top(subject) Equivalent to align_right(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-middle. subject Instance of Element align_left_middle(subject) Equivalent to align_left(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-middle. subject Instance of Element align_center_middle(subject) Equivalent to align_center(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-middle. subject Instance of Element align_right_middle(subject) Equivalent to align_right(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-bottom. subject Instance of Element align_left_bottom(subject) Equivalent to align_left(align_bottom(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-bottom. subject Instance of Element align_center_bottom(subject) Equivalent to align_center(align_bottom(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-bottom. subject Instance of Element align_right_bottom(subject) Equivalent to align_right(align_bottom(subject)) Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Align Elements","component":"elements","version":"master","name":"align_elements","url":"/elements/layout/align_elements.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"halign","hash":"_halign","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"align_left","hash":"_align_left","id":7},{"text":"Notation","hash":"_notation_2","id":8},{"text":"Expression","hash":"_expression_2","id":9},{"text":"Semantics","hash":"_semantics_2","id":10},{"text":"align_center","hash":"_align_center","id":11},{"text":"Notation","hash":"_notation_3","id":12},{"text":"Expression","hash":"_expression_3","id":13},{"text":"Semantics","hash":"_semantics_3","id":14},{"text":"align_right","hash":"_align_right","id":15},{"text":"Notation","hash":"_notation_4","id":16},{"text":"Expression","hash":"_expression_4","id":17},{"text":"Semantics","hash":"_semantics_4","id":18},{"text":"valign","hash":"_valign","id":19},{"text":"Notation","hash":"_notation_5","id":20},{"text":"Expression","hash":"_expression_5","id":21},{"text":"Semantics","hash":"_semantics_5","id":22},{"text":"Examples","hash":"_examples_2","id":23},{"text":"align_top","hash":"_align_top","id":24},{"text":"Notation","hash":"_notation_6","id":25},{"text":"Expression","hash":"_expression_6","id":26},{"text":"Semantics","hash":"_semantics_6","id":27},{"text":"align_middle","hash":"_align_middle","id":28},{"text":"Notation","hash":"_notation_7","id":29},{"text":"Expression","hash":"_expression_7","id":30},{"text":"Semantics","hash":"_semantics_7","id":31},{"text":"align_bottom","hash":"_align_bottom","id":32},{"text":"Notation","hash":"_notation_8","id":33},{"text":"Expression","hash":"_expression_8","id":34},{"text":"Semantics","hash":"_semantics_8","id":35},{"text":"align_left_top","hash":"_align_left_top","id":36},{"text":"Notation","hash":"_notation_9","id":37},{"text":"Expression","hash":"_expression_9","id":38},{"text":"Semantics","hash":"_semantics_9","id":39},{"text":"align_center_top","hash":"_align_center_top","id":40},{"text":"Notation","hash":"_notation_10","id":41},{"text":"Expression","hash":"_expression_10","id":42},{"text":"Semantics","hash":"_semantics_10","id":43},{"text":"align_right_top","hash":"_align_right_top","id":44},{"text":"Notation","hash":"_notation_11","id":45},{"text":"Expression","hash":"_expression_11","id":46},{"text":"Semantics","hash":"_semantics_11","id":47},{"text":"align_left_middle","hash":"_align_left_middle","id":48},{"text":"Notation","hash":"_notation_12","id":49},{"text":"Expression","hash":"_expression_12","id":50},{"text":"Semantics","hash":"_semantics_12","id":51},{"text":"align_center_middle","hash":"_align_center_middle","id":52},{"text":"Notation","hash":"_notation_13","id":53},{"text":"Expression","hash":"_expression_13","id":54},{"text":"Semantics","hash":"_semantics_13","id":55},{"text":"align_right_middle","hash":"_align_right_middle","id":56},{"text":"Notation","hash":"_notation_14","id":57},{"text":"Expression","hash":"_expression_14","id":58},{"text":"Semantics","hash":"_semantics_14","id":59},{"text":"align_left_bottom","hash":"_align_left_bottom","id":60},{"text":"Notation","hash":"_notation_15","id":61},{"text":"Expression","hash":"_expression_15","id":62},{"text":"Semantics","hash":"_semantics_15","id":63},{"text":"align_center_bottom","hash":"_align_center_bottom","id":64},{"text":"Notation","hash":"_notation_16","id":65},{"text":"Expression","hash":"_expression_16","id":66},{"text":"Semantics","hash":"_semantics_16","id":67},{"text":"align_right_bottom","hash":"_align_right_bottom","id":68},{"text":"Notation","hash":"_notation_17","id":69},{"text":"Expression","hash":"_expression_17","id":70},{"text":"Semantics","hash":"_semantics_17","id":71}]},"31":{"id":31,"text":"The Deck is very similar to Layers. Elements are placed in the z-axis. But unlike layers, only the selected element is active (top-most by default). Everything listed in the Layer Semantics, except 2 and 3. Only the active selected element element is drawn. Only the active selected element is given the chance to process UI control. Create a deck composite with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element. Elements e1,...eN are held in a std::array managed by the deck element. deck(e1, e2, e3... eN) deck(item1, item2, item3, item4) If the number of elements is not fixed, you can use an deck_composite (see below). In addition to the semantics of Deck, returns instance of Composite. Create a deck with an indeterminate (dynamic) number of elements. c Instance of type deck_composite The deck_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use deck_composite just as you would a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. deck_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in deck_composite. deck_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"","component":"elements","version":"master","name":"decks","url":"/elements/layout/decks.html","titles":[{"text":"Decks","hash":"_decks","id":1},{"text":"Overview","hash":"_overview","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"deck","hash":"_deck","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Example","hash":"_example","id":7},{"text":"Requirements","hash":"_requirements","id":8},{"text":"deck_composite","hash":"_deck_composite","id":9},{"text":"Notation","hash":"_notation_2","id":10},{"text":"Expression","hash":"_expression_2","id":11},{"text":"Example","hash":"_example_2","id":12}]},"32":{"id":32,"text":"A floating element allows arbitrary placement of an enclosed element (subject) in the main view. Positions the enclosed element (subject) at specified coordinates, allowing it to float within the layout. left, top, right, bottom float subject Instance of Element floating({left, top, right, bottom}, subject) The element will be placed exactly to the specified position in the main view, constrained to the subject’s natural limits. The floating element does not violate the natural limits of the subject. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Floating","component":"elements","version":"master","name":"floating","url":"/elements/layout/floating.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"floating","hash":"_floating","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5}]},"33":{"id":33,"text":"The flow element, is a composite that lays out its children much like the way text is laid out: lay out each element from left to right, fitting as much elements as possible following each child’s maximum horizontal limit. Once a row is full, move to the next row and do the same until the end of the row is filled. Repeat the procedure until all the elements are laid out. The height of each row is determined by the maximum vertical limit of all the elements to be laid out in that row. The following graphic depicts a simplified layout scenario for child elements a to r. The child elements arranged in a flow composite are automatically re-flowed (re-lay-out) when the view size changes. Create a flow_composite with an indeterminate (dynamic) number of elements to have elements laid out using flow. c Instance of type flow_composite The flow_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use flow_composite just as you would a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. flow_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in flow_composite. Once we have a flow_composite, we can place its contents in a flow element. c Instance of flow_composite flow(c) Returns instance of Composite. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Flow","component":"elements","version":"master","name":"flow","url":"/elements/layout/flow.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"flow_composite","hash":"_flow_composite","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Example","hash":"_example","id":5},{"text":"flow","hash":"_flow","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics","id":9}]},"34":{"id":34,"text":"Grids are similar to tiles. Both tiles and grids allow elements to fluidly adjust depending on available space. Grids lay out its elements using externally supplied normalized fractional coordinates that specify positions of the elements in the allocated space. Grids are best for composing tables. Horizontal Grids are composites that lay out one or more child elements in a row following externally supplied horizontal fractional positions. Horizontal Grids have computed horizontal and vertical sizes following the natural limits of its children. The elements are laid out in a single row, left to right, immediately next to each other with no intervening space. The elements are positioned horizontally using the supplied fractional positions. The fractional positions values range from 0.0 to 1.0, which specify the child element’s horizontal position from left (0.0) to right (1.0). The grid’s minimum vertical limit is computed as the maximum of the children elements' minimum vertical limits. The grid’s maximum vertical limit is computed as the minimum of the children elements' maximum vertical limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The supplied (horizontal) positions and computed (vertical) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Build a horizontal grid with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element (more below) positions External container of fractional positions (more below) The external container, positions, can either be a plain array of type float[N] or std::array. Elements e1,...eN are held in a std::array managed by the horizontal grid element. hgrid(positions, e1,...eN) static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... hgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an hgrid_composite (see below). The number of supplied positions and elements, multiplied by each element’s span, should match, otherwise, undefined behavior. By default elements have a span of 1. See Span Element for more information. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type hgrid_composite The hgrid_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use hgrid_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. hgrid_composite c{positions}; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in hgrid_composite. hgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] . Elements e1,...eN are held in a std::array managed by the vertical grid element. vgrid(positions, e1,...eN) static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... vgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an vgrid_composite (see below). The number of supplied positions and elements, multiplied by each element’s span, should match, otherwise, undefined behavior. By default elements have a span of 1. See Span Element for more information. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type vgrid_composite The vgrid_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use vgrid_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. vgrid_composite c{positions}; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vgrid_composite. vgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] <= positions[n+1]. The behavior is undefined if this is violated. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Grids","component":"elements","version":"master","name":"grids","url":"/elements/layout/grids.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Horizontal Grids","hash":"_horizontal_grids","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"hgrid","hash":"_hgrid","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Example","hash":"_example","id":7},{"text":"Requirements","hash":"_requirements","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"hgrid_composite","hash":"_hgrid_composite","id":10},{"text":"Notation","hash":"_notation_2","id":11},{"text":"Expression","hash":"_expression_2","id":12},{"text":"Example","hash":"_example_2","id":13},{"text":"Requirements","hash":"_requirements_2","id":14},{"text":"Vertical Grids","hash":"_vertical_grids","id":15},{"text":"Semantics","hash":"_semantics_3","id":16},{"text":"vgrid","hash":"_vgrid","id":17},{"text":"Notation","hash":"_notation_3","id":18},{"text":"Expression","hash":"_expression_3","id":19},{"text":"Example","hash":"_example_3","id":20},{"text":"Requirements","hash":"_requirements_3","id":21},{"text":"Semantics","hash":"_semantics_4","id":22},{"text":"vgrid_composite","hash":"_vgrid_composite","id":23},{"text":"Notation","hash":"_notation_4","id":24},{"text":"Expression","hash":"_expression_4","id":25},{"text":"Example:","hash":"_example_4","id":26},{"text":"Requirements","hash":"_requirements_4","id":27}]},"35":{"id":35,"text":"The Elements Library is 2D, but the z-axis pertains to top-to-bottom layering. Layers allow groups of elements to be placed in the z-axis where higher-level elements obscure or hide lower-level elements. The elements are laid out in the z-axis, top to bottom. Rendering is done bottom-up; the bottom-most elements are drawn first. UI control (such as mouse clicks) proceeds from top to bottom. Higher-level elements are given control priority. If a higher-level element does not process the event, lower-level elements are given a chance. The layer’s minimum limit is computed as the maximum of the children elements' minimum limits. The layer’s maximum limit is computed as the minimum of the children elements' maximum limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The computed (vertical) and (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Create a layer composite with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the layer element. layer(e1,...eN) layer(item1, item2, item3, item4) If the number of elements is not fixed, you can use an layer_composite (see below). In addition to the semantics of Layers, returns instance of Composite. Create a layer with an indeterminate (dynamic) number of elements: c Instance of type layer_composite The layer_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use layer_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. layer_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in layer_composite. layer_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"master","name":"layers","url":"/elements/layout/layers.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Semantics","hash":"_semantics","id":2},{"text":"layer","hash":"_layer","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expression","hash":"_expression","id":5},{"text":"Example","hash":"_example","id":6},{"text":"Semantics","hash":"_semantics_2","id":7},{"text":"layer_composite","hash":"_layer_composite","id":8},{"text":"Notation","hash":"_notation_2","id":9},{"text":"Expression","hash":"_expression_2","id":10},{"text":"Example","hash":"_example_2","id":11}]},"36":{"id":36,"text":"Each element provides information on how it wants to be sized by means of min and max limits: a hint that determine its actual extent and how it will be placed in the view depending on available window space. view_limits is a struct that gives us the min and max information: struct view_limits { point min = {0.0, 0.0}; point max = {full_extent, full_extent}; }; full_extent An implementation-defined huge number that signifies an unbounded extent. point A data structure representing a coordinate in a 2D space used to specify positions or dimensions within the graphical context. By default, an element has full limits, meaning there is no constraints on its size. It is infinitely resizable: constexpr view_limits full_limits = { {0.0, 0.0} , {full_extent, full_extent} }; An element with full_limits can be resized from an empty point (zero x and y size) up to the full extent of the screen, and beyond (if possible). An element has a fixed horizontal size if this expression is true: limits.min.x == limits.max.x. An element has a fixed vertical size if this expression is true: limits.min.y == limits.max.y. {{100, 100}, {100, 100}}; // Fixed size {{100, 100}, {100, full_extent}}; // Fixed width, flexible height {{100, 100}, {100, 200}}; // Fixed width, semi-flexible height (100 to 200) For the purpose of this document, we will use these terms and expressions: limits The limits of an element limits.min The minimum limits of an element limits.min.x The minimum horizontal limit of an element limits.min.y The minimum vertical limit of an element limits.max The maximum limits of an element limits.max.x The maximum horizontal limit of an element limits.max.y The maximum vertical limit of an element horizontal limits (limits.min.x, limits.max.x) vertical limits (limits.min.y, limits.max.y) minimum limits (limits.min.x, limits.min.y) maximum limits (limits.max.x, limits.max.y) minimum horizontal limit limits.min.x maximum horizontal limit limits.max.x minimum vertical limit limits.min.y maximum vertical limit limits.max.y Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Limits","component":"elements","version":"master","name":"limits","url":"/elements/layout/limits.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"view_limits","hash":"_view_limits","id":2},{"text":"Declaration","hash":"_declaration","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"full_limits","hash":"_full_limits","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"Terms and Expressions","hash":"_terms_and_expressions","id":7}]},"37":{"id":37,"text":"Margins add some space around elements. There is a comprehensive list of margin elements in the Elements Library that can be used for various purposes. This section catalogues all the available margin elements. Adds a margin all around an enclosed element (subject). left, top, right, bottom float subject Instance of Element margin({left, top, right, bottom}, subject) Space is added to the left, top, right, and bottom of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin does not violate the natural limits of the subject. margin will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left of an enclosed element (subject). left float subject Instance of Element margin_left(left, subject) Space is added to the left of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_left does not violate the natural limits of the subject. margin_left will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right of an enclosed element (subject). right float subject Instance of Element margin_right(right, subject) Space is added to the right of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_right does not violate the natural limits of the subject. margin_right will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the top of an enclosed element (subject). top float subject Instance of Element margin_top(top, subject) Space is added to the top of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_top does not violate the natural limits of the subject. margin_top will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the bottom of an enclosed element (subject). bottom float subject Instance of Element margin_bottom(bottom, subject) Space is added to the to the bottom of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_bottom does not violate the natural limits of the subject. margin_bottom will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. (same as margin_left_right) Adds a margin to the left and right sides of an enclosed element (subject). left, right float subject Instance of Element // variant 1 hmargin({left, right}, subject) // variant 2 hmargin(left, right, subject) // variant 3 margin_left_right({left, right}, subject) // variant 4 margin_left_right(left, right, subject) Space is added to the to the left and right sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The hmargin (and variants) does not violate the natural limits of the subject. hmargin (and variants) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. (same as margin_top_bottom) Adds a margin to the top and bottom sides of an enclosed element (subject). top, bottom float subject Instance of Element // variant 1 vmargin({top, bottom}, subject) // variant 2 vmargin(top, bottom, subject) // variant 3 margin_top_bottom({top, bottom}, subject) // variant 4 margin_top_bottom(top, bottom, subject) Space is added to the to the top and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The vmargin (and variants) does not violate the natural limits of the subject. vmargin (and variants) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left and top sides of an enclosed element (subject). left, top float subject Instance of Element // variant 1 margin_left_top({left, top}, subject) // variant 2 margin_left_top(left, top, subject) Space is added to the to the left and top sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_left_top (and variant) does not violate the natural limits of the subject. margin_left_top (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left and bottom sides of an enclosed element (subject). left, bottom float subject Instance of Element // variant 1 margin_left_bottom({left, bottom}, subject) // variant 2 margin_left_bottom(left, bottom, subject) Space is added to the to the left and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_left_bottom (and variant) does not violate the natural limits of the subject. margin_left_bottom (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right and top sides of an enclosed element (subject). right, top float subject Instance of Element // variant 1 margin_right_top({right, top}, subject) // variant 2 margin_right_top(right, top, subject) Space is added to the to the right and top sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_right_top (and variant) does not violate the natural limits of the subject. margin_right_top (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right and bottom sides of an enclosed element (subject). right, bottom float subject Instance of Element // variant 1 margin_right_bottom({right, bottom}, subject) // variant 2 margin_right_bottom(right, bottom, subject) Space is added to the to the right and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_right_bottom (and variant) does not violate the natural limits of the subject. margin_right_bottom (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Margin Elements","component":"elements","version":"master","name":"margin_elements","url":"/elements/layout/margin_elements.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"margin","hash":"_margin","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"margin_left","hash":"_margin_left","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"margin_right","hash":"_margin_right","id":10},{"text":"Notation","hash":"_notation_3","id":11},{"text":"Expression","hash":"_expression_3","id":12},{"text":"Semantics","hash":"_semantics_3","id":13},{"text":"margin_top","hash":"_margin_top","id":14},{"text":"Notation","hash":"_notation_4","id":15},{"text":"Expression","hash":"_expression_4","id":16},{"text":"Semantics","hash":"_semantics_4","id":17},{"text":"margin_bottom","hash":"_margin_bottom","id":18},{"text":"Notation","hash":"_notation_5","id":19},{"text":"Expression","hash":"_expression_5","id":20},{"text":"Semantics","hash":"_semantics_5","id":21},{"text":"hmargin","hash":"_hmargin","id":22},{"text":"Expressions","hash":"_expressions","id":23},{"text":"Semantics","hash":"_semantics_6","id":24},{"text":"vmargin","hash":"_vmargin","id":25},{"text":"Notation","hash":"_notation_6","id":26},{"text":"Expressions","hash":"_expressions_2","id":27},{"text":"Semantics","hash":"_semantics_7","id":28},{"text":"margin_left_top","hash":"_margin_left_top","id":29},{"text":"Notation","hash":"_notation_7","id":30},{"text":"Expressions","hash":"_expressions_3","id":31},{"text":"Semantics","hash":"_semantics_8","id":32},{"text":"margin_left_bottom","hash":"_margin_left_bottom","id":33},{"text":"Notation","hash":"_notation_8","id":34},{"text":"Expressions","hash":"_expressions_4","id":35},{"text":"Semantics","hash":"_semantics_9","id":36},{"text":"margin_right_top","hash":"_margin_right_top","id":37},{"text":"Notation","hash":"_notation_9","id":38},{"text":"Expressions","hash":"_expressions_5","id":39},{"text":"Semantics","hash":"_semantics_10","id":40},{"text":"margin_right_bottom","hash":"_margin_right_bottom","id":41},{"text":"Notation","hash":"_notation_10","id":42},{"text":"Expressions","hash":"_expressions_6","id":43},{"text":"Semantics","hash":"_semantics_11","id":44}]},"38":{"id":38,"text":"The Elements Library is resolution independent and elements can be scaled up or down to suit. The default scale is 1.0 (no scale). The scale element changes the scale of its enclosed element (subject). scale_ float subject Instance of Element scale(scale_, subject) The subject will scaled given the scale_ value. A value > 1.0 scales the element up (zoom in), while a value < 1.0 scales down (zoom out). Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Scale","component":"elements","version":"master","name":"scale","url":"/elements/layout/scale.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"scale","hash":"_scale","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5}]},"39":{"id":39,"text":"Size elements override the limits of an enclosed element. There is a comprehensive list of size related elements in the Elements Library that can be used for various purposes. This section catalogues all the available size elements. Overrides the limits of an element. limits Instance of view_limits subject Instance of Element limit(limits, subject) The limits of subject will be set to the specified limits constrained by The natural limits of the subject. The natural limits of the element will not be violated. Returns instance of Proxy. Fixes the size of an enclosed element (subject). width, height float subject Instance of Element fixed_size({width, height}, subject) subject will be laid out with a fixed width and height, constrained by The natural limits of the subject. The natural limits of the element will not be violated. Returns instance of Proxy. Fixes the horizontal size of an enclosed element (subject). width float subject Instance of Element hsize(width, subject) subject will be laid out with a fixed width, constrained by the natural horizontal limits of the subject. The natural horizontal limits of the element will not be violated. The natural vertical limits of subject will not be affected. Returns instance of Proxy. Fixes the vertical limits of an enclosed element (subject). height float subject Instance of Element vsize(height, subject) subject will be laid out with a fixed height, constrained by the natural vertical limits of the subject. The natural vertical limits of the element will not be violated. The natural horizontal limits of subject will not be affected. Returns instance of Proxy. Overrides the minimum limits of an enclosed element (subject). width, height float subject Instance of Element min_size({width, height}, subject) The minimum limits of subject will be set to the specified width and height, constrained by the natural minimum limits of the subject. the natural minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum horizontal limit of an enclosed element (subject). width float subject Instance of Element hmin_size(width, subject) The minimum horizontal limit of subject will be set to the specified width constrained by the natural horizontal minimum limits of the subject. The natural horizontal minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum vertical limit of an enclosed element (subject). height float subject Instance of Element vmin_size(height, subject) The minimum vertical limit of subject will be set to the specified height constrained by the natural vertical minimum limits of the subject. The natural vertical minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum limits of an enclosed element (subject). width, height float subject Instance of Element max_size({width, height}, subject) The maximum limits of subject will be set to the specified width and height, constrained by the natural maximum limits of the subject. The natural maximum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum horizontal limit of an enclosed element (subject). width float subject Instance of Element hmax_size(width, subject) The maximum horizontal limit of subject will be set to the specified width constrained by the natural maximum horizontal limit of the subject. The natural maximum horizontal limit of the element will not be violated. Returns instance of Proxy. Overrides the maximum vertical limit of an enclosed element (subject). height float subject Instance of Element vmax_size(height, subject) The maximum vertical limit of subject will be set to the specified height constrained by the natural maximum vertical limit of the subject The natural maximum vertical limit of the element will not be violated. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Size Elements","component":"elements","version":"master","name":"size_elements","url":"/elements/layout/size_elements.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"limit","hash":"_limit","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"fixed_size","hash":"_fixed_size","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"hsize","hash":"_hsize","id":10},{"text":"Notation","hash":"_notation_3","id":11},{"text":"Expression","hash":"_expression_3","id":12},{"text":"Semantics","hash":"_semantics_3","id":13},{"text":"vsize","hash":"_vsize","id":14},{"text":"Notation","hash":"_notation_4","id":15},{"text":"Expression","hash":"_expression_4","id":16},{"text":"Semantics","hash":"_semantics_4","id":17},{"text":"min_size","hash":"_min_size","id":18},{"text":"Notation","hash":"_notation_5","id":19},{"text":"Expression","hash":"_expression_5","id":20},{"text":"Semantics","hash":"_semantics_5","id":21},{"text":"hmin_size","hash":"_hmin_size","id":22},{"text":"Notation","hash":"_notation_6","id":23},{"text":"Expression","hash":"_expression_6","id":24},{"text":"Semantics","hash":"_semantics_6","id":25},{"text":"vmin_size","hash":"_vmin_size","id":26},{"text":"Notation","hash":"_notation_7","id":27},{"text":"Expression","hash":"_expression_7","id":28},{"text":"Semantics","hash":"_semantics_7","id":29},{"text":"max_size","hash":"_max_size","id":30},{"text":"Notation","hash":"_notation_8","id":31},{"text":"Expression","hash":"_expression_8","id":32},{"text":"Semantics","hash":"_semantics_8","id":33},{"text":"hmax_size","hash":"_hmax_size","id":34},{"text":"Notation","hash":"_notation_9","id":35},{"text":"Expression","hash":"_expression_9","id":36},{"text":"Semantics","hash":"_semantics_9","id":37},{"text":"vmax_size","hash":"_vmax_size","id":38},{"text":"Notation","hash":"_notation_10","id":39},{"text":"Expression","hash":"_expression_10","id":40},{"text":"Semantics","hash":"_semantics_10","id":41}]},"40":{"id":40,"text":"The span of an element is the number of columns or rows it occupies in a grid (see Horizontal Grids and Vertical Grids). The span of an element is determined by the element’s span member function: virtual unsigned span() const; By default, an element spans one column or one row. The span can be set to any positive integer value using the span function. Overrides the span of an an enclosed element (subject). nspans An unsigned integer subject Instance of Element span(nspans, subject) The subject will assume a span with the given nspans value. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Span","component":"elements","version":"master","name":"span","url":"/elements/layout/span.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"span","hash":"_span","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5}]},"41":{"id":41,"text":"Resizable elements are elements with minimum limits that are less than the maximum limits in either x or y dimensions or both. Resizable elements can therefore stretch if there is extra available space allocated to it beyond its minimum limit. When two or more resizable elements are placed side by side in an htile or vtile, the element’s \"stretchiness\" determines how much extra space is given to it. The element’s \"stretchiness\" is determined by the element’s stretch member function: virtual view_stretch stretch() const; where view_stretch is a struct declared as: struct view_stretch { float x = 1.0; float y = 1.0; }; The view_stretch x and y members determine how much an element can stretch in the x or y dimensions. The default is 1.0. A stretchiness value of 2.0 means that the element is able to stretch twice as much compared to its siblings in an htile or vtile, assuming they have the default 1.0 stretchiness. Overrides the horizontal stretchiness of an an enclosed element (subject). stretch A scalar value subject Instance of Element hstretch(stretch, subject) The subject will assume the given stretch value. The stretch value has no effect to elements with fixed horizontal size. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 1.0, 1.0 and 2.0, respectively: The element with the 2.0 stretch value stretches twice as much compared to its siblings. Overrides the vertical stretchiness of an an enclosed element (subject). stretch A scalar value subject Instance of Element vstretch(stretch, subject) The subject will assume the given stretch value. The stretch value has no effect to elements with fixed vertical limits. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 0.5, 1.0 and 1.5, respectively: The element with the 0.5 stretch value stretches half less, while the element with the 1.5 stretches half more than the default. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Stretch Elements","component":"elements","version":"master","name":"stretch_elements","url":"/elements/layout/stretch_elements.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"hstretch","hash":"_hstretch","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"vstretch","hash":"_vstretch","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics_2","id":9}]},"42":{"id":42,"text":"Tiles are the most useful layout elements. Tiles are used everywhere for composing hierarchical elements in rows and columns, typical to all GUIs. Tiles allow elements to fluidly adjust depending on available space. Tiles compute the layout of its elements using the children elements' size limits. Horizontal Tiles allow elements to fluidly adjust horizontally depending on available space. The elements are laid out in a single row, left to right, immediately next to each other with no intervening space. The elements are positioned horizontally using the children’s natural limits. Horizontal space is allocated using this algorithm: Space is allocated for each child element following the child’s natural minimum horizontal limit. If the allocated space exceeds the sum of all children elements' minimum horizontal limits, the extra space is given to each horizontally resizable element (limits.min.x managed by the horizontal tile element. htile(e1,...eN) htile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an htile_composite (see below). In addition to the semantics of Horizontal Tiles, returns instance of Composite. Create a horizontal tile with an indeterminate (dynamic) number of elements. c Instance of type htile_composite The htile_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use htile_composite just as you would a std::vector, such as using push_back to add a child element. Just remember that the items are element_ptr instances. htile_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in htile_composite. htile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Vertical Tiles allow elements to fluidly adjust vertically depending on available space. The elements are laid out in a single column, top to bottom, immediately next to each other with no intervening space. The elements are positioned vertically using the children’s natural limits. Vertical space is allocated using this algorithm: Space is allocated for each child element following the child’s natural minimum vertical limit. If the allocated space exceeds the sum of all children elements' minimum vertical limits, the extra space is given to each vertically resizable element (limits.min.y managed by the vertical tile element. vtile(e1,...eN) vtile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an vtile_composite (see below). In addition to the semantics of Vertical Tiles, returns instance of Composite. Create a vertical tile with an indeterminate (dynamic) number of elements. c Instance of type vtile_composite The vtile_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use vtile_composite in the same way as a std::vector, such as using push_back to add a child element. Just remember that the items are element_ptr instances. vtile_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vtile_composite. vtile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Tiles","component":"elements","version":"master","name":"tiles","url":"/elements/layout/tiles.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Horizontal Tiles","hash":"_horizontal_tiles","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"htile","hash":"_htile","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Example:","hash":"_example","id":7},{"text":"Semantics","hash":"_semantics_2","id":8},{"text":"htile_composite","hash":"_htile_composite","id":9},{"text":"Notation","hash":"_notation_2","id":10},{"text":"Expression","hash":"_expression_2","id":11},{"text":"Example","hash":"_example_2","id":12},{"text":"Vertical Tiles","hash":"_vertical_tiles","id":13},{"text":"Semantics","hash":"_semantics_3","id":14},{"text":"vtile","hash":"_vtile","id":15},{"text":"Notation","hash":"_notation_3","id":16},{"text":"Expression","hash":"_expression_3","id":17},{"text":"Example","hash":"_example_3","id":18},{"text":"Semantics","hash":"_semantics_4","id":19},{"text":"vtile_composite","hash":"_vtile_composite","id":20},{"text":"Notation","hash":"_notation_4","id":21},{"text":"Expression","hash":"_expression_4","id":22},{"text":"Example","hash":"_example_4","id":23}]},"43":{"id":43,"text":"The key design aspects of the Elements C++ GUI library are: Modular: Elements is very lightweight and extremely modular, facilitating the composition of fine-grained, flyweight, and reusable ``elements'' into complex element hierarchies. This is achieved through a declarative interface with heavy emphasis on reuse, allowing developers to build sophisticated GUI structures efficiently. Declarative: Elements exposes a declarative API using modern C++. Declarative C++ code tells you what rather than how (contrasting with imperative programming which involves control flow). There are no code generators. The GUI is declared entirely in C++ code. After a while, code reuse, using a palette of fine-grained elements, becomes very familiar and intuitive, much like using HTML. Interoperable: Elements is usable in any application and plays well with other GUI libraries and frameworks. The library is loosely coupled with the application and windowing system and can co-exist with components within a host. It should be easy to integrate Elements with any existing application. This document will demonstrate the modular and declarative design aspects of the Elements library through examples. Specific examples should make it clear. Let’s start with a basic window with a dark grey background. The examples presented here can be found in this link: https://github.com/cycfi/elements/tree/master/examples/doc_aspects #include using namespace cycfi::elements; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); int main(int argc, const char* argv[]) { app _app(argc, argv); window _win(_app.name()); _win.on_close = [&_app]() {_app.stop();}; view view_(_win); view_.content( background ); _app.run(); return 0; } Here, we create an app and a window, and set the window’s on_close to stop (quit) the application. _win.on_close is called when the window is closed by the user, thereby quitting the application. Like any other GUI library or framework, the app manages the main event loop, while the window manages application windows. However, take note that the app and the window classes are optional. There are certain situations, like e.g. building plugins or incorporating Elements in another framework such as QT, where you do not want Elements to manage the event loop or windows. The important class of interest here is the view. In these cases, you want to embed the view directly. You can directly construct a view given a platform window (or widget), as its main content view or child window (or widget). The view does not know anything about drawing or user interaction. Instead, it relies on its client supplied content to do these. Without any content, it is an empty shell. And so this is where it starts to get interesting. The content of the view typically contains multiple layers, much like typical graphics applications. In this example, we only have one layer: the background. auto background = box(bkd_color); It is a simple, infinitely resizable box with the specified color: rgba(35, 35, 37, 255). It will resize automatically when the window is resized. We set it as the view’s content: view_.content( background ); Running this example, you get: Now let’s add a blue round rectangle. We’ve seen how to create a box: the background using box, passing in a color. A rounded box is created using rbox, passing in the color and the corner radius: auto blue_rbox = rbox(colors::medium_blue, 10); The color, this time, is specified by name from the colors namespace. The namespace includes all predefined colors from the standard HTML Color Names. We can actually use blue_rbox already, as-is, by placing it in another layer in the view: view_.content( blue_rbox, background ); But like the box, the rbox is infinitely resizable and will hog the entire window. What we want is to give it a specific size and center it in the window. Elements are very lightweight. Most elements do not even have a size, nor know their position in the view (elements without position information are inherently relocatable —they can be placed anywhere; the position is supplied at rendering time). So we give it a 100x50 size by wrapping it in the fixed_size element: auto blue_rbox = fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ); And then we align it centered (in the x axis) and middle (in the Y axis) using the align_center_middle element: auto blue_rbox = align_center_middle( fixed_size( {100, 50}, rbox(colors::medium_blue, 10) ) ); Without the alignment element, the main window would have been constrained to a fixed 100x50 size. There’s a multitude of alignment elements available. See Layout. So now, we are seeing how fine-grained elements are composed. The rbox is placed inside the fixed_size element which is then placed inside a align_center_middle element. Let’s run this example: Our goal this time is to place some text inside the blue box. The element we will use is the label. Most elements do not have a size, but as an exception, labels (simple text elements) do. So, instead of fixing the size of the box using fixed_size, we place the label alongside the box in a layer element, but add some margin around the label. Here’s how you do it: auto blue_rbox = align_center_middle( layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) ); If it’s not obvious yet, let’s take it apart into its constituent pieces: Step 1: We make a label: label(\"“Dogs are my favorite people”\") Step 2: We add margin around it: margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ) Note that like the align elements, there’s a multitude of margins such as left_margin, right_margin, etc. Step 3: We make a blue rounded box: rbox(colors::medium_blue, 10) Step 4: We place the label and the blue rounded box as siblings in a layer element: layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ) Step 4: Then finally, we place it in the align_center_middle element. If the element hierarchy gets a bit too deep, use the C++ auto to name sub-parts of the element composition to make it easier to understand. The layer element is a composite element that holds zero or more child elements. Some of you might have noticed that we already mentioned the layer element before when we were discussing the view’s content in the App and Window section: `The content of the `view typically contains multiple layers, much like typical graphics applications''. Well, actually, this is the same layer thing here. The view’s main content is a layer element. So now we have: To demonstrate the fine-grained and modular nature of Elements, it is perhaps illustrative to say that many components in Elements, including the slider element, are not atomic and are actually composed of smaller parts. In this section, we will see how one creates a slider from the basic parts that we have dealt with in the previous sections. Take note that this example is only for illustrative purposes. The library provides easier ways to make sliders. Elements has a collection of pre-made, reusable element compositions, just like what we do here, but more refined. That collection is constantly growing. Composing elements is fun! The slider has two parts: the track and the thumb. Here, we make a simple track using the same old box. We made it black. Then, we reused the same \"Dogs are my favorite people\" label for the thumb. The result looks silly, I should say, but hey, we are trying to make a point! auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), rbox(colors::medium_blue, 10) ); auto funny_slider = slider(thumb, track); And here it is in action: Now, like before, we add our funny slider to our view: view_.content( align_center(funny_slider), background ); But note that, in this case, we want to center the slider only horizontally, so we use align_center instead of align_center_middle. Ok, there you go! Now go and be creative and make your own controls! Here’s the complete prgram: #include using namespace cycfi::elements; using cycfi::artist::rgba; namespace colors = cycfi::artist::colors; // Main window background color auto constexpr bkd_color = rgba(35, 35, 37, 255); auto background = box(bkd_color); auto track = hsize(10, box(colors::black)); auto thumb = layer( margin( {25, 20, 25, 18}, label(\"“Dogs are my favorite people”\") ), margin( {5, 5, 5, 5}, rbox(colors::medium_blue, 10) ) ); auto funny_slider = slider(thumb, track); int main(int argc, char* argv[]) { app _app(\"Aspects\"); window _win(_app.name()); _win.on_close = [&_app]() { _app.stop(); }; view view_(_win); view_.content( align_center(funny_slider), background ); _app.run(); return 0; } Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Design Aspects","component":"elements","version":"skia_2024","name":"aspects","url":"/elements/skia_2024/aspects.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Minimal Example","hash":"_minimal_example","id":2},{"text":"App and Window","hash":"_app_and_window","id":3},{"text":"Background","hash":"_background","id":4},{"text":"Aligns and Sizes","hash":"_aligns_and_sizes","id":5},{"text":"Labels, Margins and Layers","hash":"_labels_margins_and_layers","id":6},{"text":"Let’s Make a Slider","hash":"_lets_make_a_slider","id":7}]},"44":{"id":44,"text":"","title":"","component":"elements","version":"skia_2024","name":"common","url":"/elements/skia_2024/common.html","titles":[]},"45":{"id":45,"text":"The Element is the basic building block of the Elements Library. This document provides an overview of the various elements available. This section will focus on how elements are used, instead of how they are implemented. We will deal with the latter in the Customization section. It suffices to say that elements are implemented as a hierarchy of classes, with the element class at the root. The element class provides the interface for all elements. The element class is a polymorphic class with virtual functions for rendering, layout, and event handling. The Elements Library uses a couple of simple concepts to constrain the types of elements that can be used with templates and template functions. The Element concept constrains the type of a class that derives from the element class, while the ElementPtr concept constrains the type of a pointer to an element. namespace concepts { template concept Element = std::is_base_of_v>; template concept ElementPtr = requires(T p) { { *p } -> std::convertible_to; }; } Most elements are held by value, but they can also be held by shared pointers. Elements held by shared pointers are necessary when elements are placed inside homogeneously typed containers such as std::vector. The library provides a share function for converting an element to a shared pointer. A similar facility is provided for converting a shared pointer to a weak pointer. There are a couple of type aliases that are useful when dealing with shared pointers: using element_ptr = std::shared_ptr; using element_const_ptr = std::shared_ptr; using weak_element_ptr = std::weak_ptr; using weak_element_const_ptr = std::weak_ptr; e Instance of type element ep Instance of type std::shared_ptr, where E is a type that conforms to the Element concept. share(e) (1) get(ep) (2) 1 Returns a shared pointer from element e. The element is copied, or moved, into the shared pointer. 2 Returns a weak pointer from the shared pointer to an element, ep. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements","component":"elements","version":"skia_2024","name":"elements","url":"/elements/skia_2024/elements.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Concepts","hash":"_concepts","id":2},{"text":"Shared Pointers","hash":"_shared_pointers","id":3},{"text":"Type aliases","hash":"_type_aliases","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expressions","hash":"_expressions","id":6},{"text":"Semantics","hash":"_semantics","id":7}]},"46":{"id":46,"text":"Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Gallery","component":"elements","version":"skia_2024","name":"gallery","url":"/elements/skia_2024/gallery.html","titles":[{"text":"It’s always a nice to have some pretty pictures:","hash":"_its_always_a_nice_to_have_some_pretty_pictures","id":1}]},"47":{"id":47,"text":"Elements is a lightweight, fine-grained, resolution-independent, extremely modular GUI library. The library is written using modern C++17 language features. It has a declarative interface with a sensible and easy-to-use Domain Specific Embedded Languages (DSEL) syntax for constructing the GUI elements. A declarative description of the GUI is written exclusively in C++, and therefore, there is no need for an external visual GUI editor or code generator. Elements is embeddable, meaning you can embed it in any application, and it will play well with other GUI libraries and frameworks. This also implies that you can utilize it for the creation of plugins. It does not own the event loop and is able to co-exist with components within a plugin host, such as VST and AU. Porting to a new host target is straightforward, requiring the porting of only a few files. Elements is distributed under the liberal and non-viral MIT License. Gallery Setup and Installation Design Aspects Layout Joel got into electronics and programming in the 80s because almost everything in music, his first love, is becoming electronic and digital. Since then, he builds his own guitars, effect boxes and synths. He enjoys playing distortion-laden rock guitar, composes and produces his own music in his home studio. Joel de Guzman is the principal architect and engineer at Cycfi Research. He is a software engineer specializing in advanced C++ and an advocate of Open Source. He has authored a number of highly successful Open Source projects such as Boost.Spirit, Boost.Phoenix and Boost.Fusion. These libraries are all part of the Boost Libraries, a well respected, peer-reviewed, Open Source, collaborative development effort. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Elements C++ GUI library","component":"elements","version":"skia_2024","name":"index","url":"/elements/skia_2024/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Documentation","hash":"_documentation","id":2},{"text":"The Author","hash":"_the_author","id":3}]},"48":{"id":48,"text":"The Elements Library provides a comprehensive set of elements for laying out elements in the view, including tiles, grids, flow layouts, floating elements, layers, alignment elements, scale elements, and span elements. Tiles arrange elements in rows or columns, positioning them one after the other based on the child element’s sizing limits. Grids offer a structured layout with rows and columns, using normalized coordinate placements. The flow element arranges its children left to right, fitting as many as possible within each row, and moves to the next row once full. Floating elements allow for arbitrary positioning within containers. Layers enable elements to be stacked on top of each other. The document also details the use of margins and sizing elements to provide proper spacing and ensure elements fit within the layout. Alignment elements ensure correct positioning. Scale elements adjust size proportionally. Span elements extend across multiple grid cells. By combining these various layout elements, developers can create versatile, responsive, and visually consistent user interfaces that adapt seamlessly across different devices and screen sizes. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"skia_2024","name":"layout","url":"/elements/skia_2024/layout.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"49":{"id":49,"text":"Here are the basic tools that you need in order to use the library: A C++20 compiler Git CMake 3.16 or higher Elements currently supports the MacOS, Windows and Linux. In the Mac, we support the XCode IDE. In Windows, we support Windows 10 with Visual Studio 2022, although it will probably also work with older versions of the Visual Studio IDE. In Linux, we support both Clang and g++. Get the latest version with a C++20 compiler. The CLion IDE is supported on all platforms, it simply requires the CMakeLists.txt file to open and build the project. Elements C++ GUI library, plus the Cycfi Infra library: git clone --recurse-submodules https://github.com/cycfi/elements.git Make sure you have CMake 3.15 or higher. Follow the installation procedure for your platform, or follow the instructions below for specific environments. Here are Element’s dependencies: pkg-config Cairo fontconfig freetype2 bzip2 expat zlib libpng libwebp Specific instructions are provided below for specific environments. Additionally, the following libraries are dragged as submodules: The Cycfi infra library Infra provides some basic groundwork common to Cycfi libraries, including Elements. Using Homebrew: brew install pkg-config brew install cairo brew install fontconfig brew install bzip2 brew install expat brew install zlib brew install libpng brew install webp brew install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for the MacOS: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -GXcode ../ If you are having issues with code signing, disable it by setting the CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED variable to NO: cmake -GXcode -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO ../ If successful, CMake will generate an XCode project in the build directory. Open the project file elements.xcodeproj and build all. You should see a couple of example applications. If you are having problems with code signing, do this: Build Settings→Code Signing Identity for ALL_BUILD and elements, click, then choose \"Other\", then clear the text (empty). Do this for both ALL_BUILD and elements. The Windows port requires a package manager that supports the dependencies listed above. One popular package manager is vcpkg. We will use vcpkg in the setup instructions below. Clone and bootstrap the vcpkg dependency manager. I suggest placing it in c:\\ or c:\\Program Files, but it does not really matter where. git clone https://github.com/microsoft/vcpkg .\\vcpkg\\bootstrap-vcpkg.bat Install the dependencies: vcpkg install pkgconf vcpkg install cairo vcpkg install libwebp Installing Cairo already brings in the other dependencies. Follow the installation procedure. If you have Visual Studio 2022: Use the Visual Studio GUI for a graphical development environment. Use NMake for make-style command-line builds. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build You will need to tell cmake the location of the vcpkg toolchain file. That way, find_package will know where to find the installed libraries. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"Visual Studio 17 2022\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake ../ If successful, cmake will generate a Visual Studio solution in the build directory. Open the project file elements.sln and build all. You should see a couple of example applications. Open a Command Prompt for VS 2022 ({x64/x86-64} {Native/Cross} Tools Command Prompt for VS 2019) in your start menu. CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build Again, you will need to tell cmake the location of the vcpkg toolchain file. If you installed vcpkg in c:\\ as suggested, you invoke cmake like this: cmake -G\"NMake Makefiles\" -D CMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake ../ If successful, cmake will generate NMake Make files in the build directory. Invoke nmake to build the binary. MSYS2 is a software distro and building platform for Windows Download MSYS2 from its official website and install it. Its installation guide is on the home page. Open MSYS2 MinGW 64-bit or MSYS2 MinGW 32-bit from your start menu. Install tools and libraries: pacman -S ${MINGW_PACKAGE_PREFIX}-toolchain pacman -S ${MINGW_PACKAGE_PREFIX}-cairo pacman -S ${MINGW_PACKAGE_PREFIX}-gtk3 pacman -S ${MINGW_PACKAGE_PREFIX}-libwebp pacman -S make pacman -S ${MINGW_PACKAGE_PREFIX}-cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for MSYS2: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. -DELEMENTS_HOST_UI_LIBRARY=gtk tells cmake to build with Gtk. cd elements mkdir build cd build cmake ../ -G \"Unix Makefiles\" -DELEMENTS_HOST_UI_LIBRARY=gtk If successful, cmake will generate Unix Make files in the build directory. In addition to the requirements listed in the requirements section, the GTK3 library is also required by the Linux port of Elements. On Debian and derived distributions using apt-get (requires sudo): sudo apt-get install libcairo2-dev sudo apt-get install libgtk-3-dev sudo apt-get install libwebp-dev sudo apt-get -y install cmake There are multiple ways to generate a project file using CMake depending on your platform and desired IDE, but here is an example for Linux: CD to the elements library. Make a build directory inside the elements directory. CD to the build directory. invoke cmake. cd elements mkdir build cd build cmake -G \"Unix Makefiles\" ../ If successful, cmake will generate Unix Make files in the build directory. If successful, cmake will generate a project file or makefiles in the build directory. Build the library and example programs using the generated makefiles or open the project file using your IDE and build all. You should see a couple of example applications in there that you can run. These examples are provided as starting points to get you up to speed in learning how to use the library. For simplicity, each example is contained in a single main.cpp source file. Feel free to inspect and mess with the examples. Each example demonstrates different aspects of the Elements library, from layout to control. You’d probably want to start with the “hello_universe” example, which is the Element’s hello-world counterpart. You can copy the “empty” example and use it as a boilerplate for your own project. See next section on how to copy an example and build outside the Elements project directory. Tips: Resize the window and see the elements fluidly resize Use two-finger swipe to move the sliders and knobs The Elements project is set up so that you can easily copy and paste any of the examples outside the project, set -DELEMENTS_ROOT=\"path/to/elements\", and the example should immediately build without any hassle. Here’s an example for XCode assuming the elements lib is in the same directory alongside the \"hello_universe\" example directory you copied to: Copy the hello_universe example project directory. Make a build directory inside the hello_universe directory. CD to the build directory. cmake -GXcode -DELEMENTS_ROOT=\"../elements\" ../ Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Setup and Installation","component":"elements","version":"skia_2024","name":"setup","url":"/elements/skia_2024/setup.html","titles":[{"text":"Requirements","hash":"_requirements","id":1},{"text":"C++20","hash":"_c20","id":2},{"text":"Git","hash":"_git","id":3},{"text":"CMake","hash":"_cmake","id":4},{"text":"Required Libraries","hash":"_required_libraries","id":5},{"text":"MacOS","hash":"_macos","id":6},{"text":"Install required libraries","hash":"_install_required_libraries","id":7},{"text":"Install CMake","hash":"_install_cmake","id":8},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake","id":9},{"text":"Using XCode","hash":"_using_xcode","id":10},{"text":"Windows","hash":"_windows","id":11},{"text":"Install required libraries","hash":"_install_required_libraries_2","id":12},{"text":"Install CMake","hash":"_install_cmake_2","id":13},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_2","id":14},{"text":"Visual Studio 2022 GUI","hash":"_visual_studio_2022_gui","id":15},{"text":"NMake","hash":"_nmake","id":16},{"text":"Windows (MinGW + Gtk)","hash":"_windows_mingw_gtk","id":17},{"text":"Install MSYS2 toolchain and required libraries","hash":"_install_msys2_toolchain_and_required_libraries","id":18},{"text":"Install CMake","hash":"_install_cmake_3","id":19},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_3","id":20},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles","id":21},{"text":"Linux","hash":"_linux","id":22},{"text":"Install required libraries","hash":"_install_required_libraries_3","id":23},{"text":"Install CMake","hash":"_install_cmake_4","id":24},{"text":"Generating the Project using CMake","hash":"_generating_the_project_using_cmake_4","id":25},{"text":"Using UNIX makefiles","hash":"_using_unix_makefiles_2","id":26},{"text":"Building and Running the examples","hash":"_building_and_running_the_examples","id":27},{"text":"Building Outside the Project","hash":"_building_outside_the_project","id":28}]},"50":{"id":50,"text":"This document provides a list of buttion stylers that can be used to style buttons in the Elements Library. The button stylers are used to define the appearance of buttons, such as colors, borders, icons and labels, and shapes. The button stylers are separate from the button classes, which handle user interactions. This separation of responsibilities allows for greater flexibility in defining the button’s appearance and behavior. label An object of type std::string. bst A button styler instance. size The button’s relative size of type float. color An object of type color. icon_id Unicode code point of type std::uint32_t from the Global theme icon_font. margin The margin in pixels of type rect. r The corner radius in pixels of type`float`. tl, tr, bl, br The corner radius in pixels for top-left, top-right, bottom-left, and bottom-right corners of type float. button_styler{label} (1) bst.size(size) (2) bst.color(color) (3) bst.active_body_color(color) (4) bst.text_color(color) (5) bst.icon(icon_id) (6) bst.icon_left() (7) bst.icon_right() (8) bst.icon_color(color) (9) bst.align_left() (10) bst.align_center() (11) bst.align_right() (12) bst.margin(margin) (13) bst.corner_radius(r) (14) bts.corner_radius(tl, tr, bl, br) (15) bts.rounded_top() (16) bts.rounded_bottom() (17) bts.rounded_left() (18) bts.rounded_right() (19) bts.rounded_top(r) (20) bts.rounded_bottom(r) (21) bts.rounded_left(r) (22) bts.rounded_right(r) (23) bts.rounded_corner_top_left(r) (24) bts.rounded_corner_top_right(r) (25) bts.rounded_corner_bottom_left(r) (26) bts.rounded_corner_bottom_right(r) (27) 1 Creates a button styler with the given label. 2 Sets the button relative size of a button styler. A value > 1.0 makes the button larger, while a value < 1.0 makes the button smaller. 3 Sets the color of a button styler. 4 Sets the active body color of a button styler. 5 Sets the text color of a button styler. 6 Sets the icon of a button styler. 7 Sets the icon to the left of the text. 8 Sets the icon to the right of the text. 9 Sets the icon color of a button styler. 10 Aligns the text and icon to the left. 11 Aligns the text and icon to the center. 12 Aligns the text and icon to the right. 13 Sets the margin of a button styler. 14 Sets the corner radius of a button styler. 15 Sets the corner radius of a button styler for each corner. 16 Sets the top corners of a button styler to be rounded. 17 Sets the bottom corners of a button styler to be rounded. 18 Sets the left corners of a button styler to be rounded. 19 Sets the right corners of a button styler to be rounded. 20 Sets the top corners of a button styler to be rounded with a specific radius. 21 Sets the bottom corners of a button styler to be rounded with a specific radius. 22 Sets the left corners of a button styler to be rounded with a specific radius. 23 Sets the right corners of a button styler to be rounded with a specific radius. 24 Sets the top-left corner of a button styler to be rounded with a specific radius. 25 Sets the top-right corner of a button styler to be rounded with a specific radius. 26 Sets the bottom-left corner of a button styler to be rounded with a specific radius. 27 Sets the bottom-right corner of a button styler to be rounded with a specific radius. All of these expressions return a button styler. Therefore, these expressions can be chained together to create a button styler with the desired appearance. The result is then passed to one of the button creation functions (see Buttons). Make a default momentary button with label \"My Button\": auto btn = momentary_button( button_styler{\"My Button\"} ); Make a blue momentary button with label \"Lock\": auto btn = momentary_button( button_styler{\"Lock\"} .body_color(colors::blue) ); Make a momentary button with label \"Rounded Left\" and a left_circled icon, aligned to the left, with a rounded left corner of 10 pixels: auto btn = momentary_button( button_styler{\"Rounded Left\"} .align_left() .icon(icons::left_circled) .icon_left() .rounded_left(10) ); The basic button styler is a simple button with a text label with no icon, with these defaults: Property Default Value size 1.0f body_color Global theme default_button_color active_body_color body_color text_color Global theme label_font_color icon 0 icon_placement icon_none icon_color Global theme label_font_color label_alignment align_center margin Global theme button_margin corner_radius Global theme button_corner_radius corner_radius_top_left corner_radius corner_radius_top_right corner_radius corner_radius_bottom_left corner_radius corner_radius_bottom_right corner_radius","title":"Stretch","component":"elements","version":"skia_2024","name":"button_stylers","url":"/elements/skia_2024/elements/button_stylers.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Notation","hash":"_notation","id":2},{"text":"Expressions","hash":"_expressions","id":3},{"text":"Semantics","hash":"_semantics","id":4},{"text":"Examples","hash":"_examples","id":5},{"text":"Default Button Styler","hash":"_default_button_styler","id":6}]},"51":{"id":51,"text":"Buttons are used to trigger actions or events. Buttons in the Elements Library are stylable with separate elements for behavior and appearance. Three types of buttons are available: momentary, toggle, and latching: Momentary buttons Buttons that stay on while clicked. They are typically used to trigger an action. Toggle buttons Buttons that alternate their state with each press. They are used to switch between two states. Latching buttons Buttons are buttons that stay on until programmatically reset. These classes delegate the rendering to a button styler subject. This separation of responsibilities provides greater flexibility in defining the button’s appearance and behavior. The button classes handle user interactions, while the button styler manages the button’s visual presentation. With this pattern, different stylers can be implemented for various visual representations, for instance, plain buttons, radio buttons, slide switches, checkboxes, and more. class basic_button; // Base class for momentary buttons class basic_toggle_button; // Base class for toggle buttons class basic_latching_button; // Base class for latching buttons namespace concepts { template concept MomentaryButton = std::is_base_of_v>; template concept ToggleButton = std::is_base_of_v>; template concept LatchingButton = std::is_base_of_v>; } styler Styler instance that conforms to the Element concept. MBase Type that conforms to the MomentaryButton concept. TBase Type that conforms to the ToggleButton concept. LBase Type that conforms to the LatchingButton concept. // Basic default buttons momentary_button(styler); toggle_button(styler); latching_button(styler); // Custom buttons momentary_button(styler); toggle_button(styler); latching_button(styler); momentary_button is a function that creates a momentary button with the given styler element. MBase, if provided, is the base type that must conform to the MomentaryButton concept. toggle_button is a function that creates a toggle button with the given styler element. TBase, if provided, is the the base type that must conform to the ToggleButton concept. latching_button is a function that creates a latching button with the given styler element. LBase, if provided, is the the base type that must conform to the LatchingButton concept. The provided base types MBase, TBase, and LBase offer the flexibility to use custom button behavior, provided they adhere to their respective concepts. Buttons include an on_click callable object, which is called whenever the button is clicked. btn A Button instance. f A callback function with the signature void(bool state). btn.on_click = f; The type of the on_click callable object is: std::function API. receiver is mixin class that provides a common interface for setting and querying the values of type T via virtual member functions, value() and value(val). btn A Button instance. val A boolean value. btn.value(val) (1) btn.vauel() (2) 1 Sets the value of the button to val. 2 Returns the current value of the button. This section is an advanced topic only relevant to those who want to write custom buttons. This section may be skipped by most users. The button styler is a separate element that is responsible for rendering the button. The communication with the button styler is done via the receiver API. This API provides a means to update the button styler about changes in button’s state to allow the styler to adjust the visual representation accordingly. If the button styler is as a subclass of receiver API, it will receive a button_state when the button’s state changes: struct button_state { bool value : 1 = false; bool hilite : 1 = false; bool tracking : 1 = false; bool enabled : 1 = true; }; button_state is struct struct for maintaining and managing the state of a button. This structure captures the various states that a button can have: value: The button’s value; 0(off) or 1(on). hilite: True if the button is highlighted (when the mouse is hovering over the button). tracking: True if the mouse button being pressed. enabled: True if the button is enabled. The button styler is just an element and does not have to follow the receiver API. If that’s the case, then the button rendering will be static, and not adjust to state changes. This may still be useful in certain cases. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Buttons","component":"elements","version":"skia_2024","name":"buttons","url":"/elements/skia_2024/elements/buttons.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Declaration","hash":"_declaration","id":2},{"text":"Concepts","hash":"_concepts","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expressions","hash":"_expressions","id":5},{"text":"Semantics","hash":"_semantics","id":6},{"text":"On Click","hash":"_on_click","id":7},{"text":"Notation","hash":"_notation_2","id":8},{"text":"Expression","hash":"_expression","id":9},{"text":"Semantics","hash":"_semantics_2","id":10},{"text":"Example","hash":"_example","id":11},{"text":"Enable/Disable","hash":"_enabledisable","id":12},{"text":"Notation","hash":"_notation_3","id":13},{"text":"Expression","hash":"_expression_2","id":14},{"text":"Semantics","hash":"_semantics_3","id":15},{"text":"Value","hash":"_value","id":16},{"text":"Notation","hash":"_notation_4","id":17},{"text":"Expression","hash":"_expression_3","id":18},{"text":"Semantics","hash":"_semantics_4","id":19},{"text":"Button Styler","hash":"_button_styler","id":20},{"text":"button_state","hash":"_button_state","id":21}]},"52":{"id":52,"text":"An element can be aligned arbitrarily from 0.0 to 1.0 in either the x or y dimensions, or both. There is a comprehensive list of align elements in The Elements Library that can be used for various purposes. This section catalogues all the available align elements. Aligns the enclosed element (subject) in the x-axis. align float subject Instance of Element halign(align, subject) Given a total allocated space X, subject will be positioned horizontally to X * align. The subject will assume its minimum horizontal limit. Returns instance of Proxy. halign(0.0) // align subject to the left halign(1.0) // align subject to the right halign(0.5) // align subject to the center Left-aligns the enclosed element (subject). subject Instance of Element align_left(subject) Equivalent to halign(0.0, subject) Returns instance of Proxy. Center-aligns the enclosed element (subject). subject Instance of Element align_center(subject) Equivalent to halign(0.5, subject) Returns instance of Proxy. Right-aligns the enclosed element (subject). subject Instance of Element align_right(subject) Equivalent to halign(1.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) in the y-axis. align float subject Instance of Element valign(align, subject) Given a total allocated space Y, subject will be positioned vertically to Y * align. The subject will assume its minimum vertical limit. Returns instance of Proxy. valign(0.0) // align subject to the top valign(1.0) // align subject to the right valign(0.5) // align subject to the middle Aligns the enclosed element (subject) to the top. subject Instance of Element align_top(subject) Equivalent to valign(0.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the middle. subject Instance of Element align_middle(subject) Equivalent to valign(0.5, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the bottom. subject Instance of Element align_bottom(subject) Equivalent to valign(1.0, subject) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-top. subject Instance of Element align_left_top(subject) Equivalent to align_left(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-top. subject Instance of Element align_center_top(subject) Equivalent to align_center(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-top. subject Instance of Element align_right_top(subject) Equivalent to align_right(align_top(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-middle. subject Instance of Element align_left_middle(subject) Equivalent to align_left(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-middle. subject Instance of Element align_center_middle(subject) Equivalent to align_center(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-middle. subject Instance of Element align_right_middle(subject) Equivalent to align_right(align_middle(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the left-bottom. subject Instance of Element align_left_bottom(subject) Equivalent to align_left(align_bottom(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the center-bottom. subject Instance of Element align_center_bottom(subject) Equivalent to align_center(align_bottom(subject)) Returns instance of Proxy. Aligns the enclosed element (subject) to the right-bottom. subject Instance of Element align_right_bottom(subject) Equivalent to align_right(align_bottom(subject)) Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Alignment","component":"elements","version":"skia_2024","name":"alignment","url":"/elements/skia_2024/layout/alignment.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"halign","hash":"_halign","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"align_left","hash":"_align_left","id":7},{"text":"Notation","hash":"_notation_2","id":8},{"text":"Expression","hash":"_expression_2","id":9},{"text":"Semantics","hash":"_semantics_2","id":10},{"text":"align_center","hash":"_align_center","id":11},{"text":"Notation","hash":"_notation_3","id":12},{"text":"Expression","hash":"_expression_3","id":13},{"text":"Semantics","hash":"_semantics_3","id":14},{"text":"align_right","hash":"_align_right","id":15},{"text":"Notation","hash":"_notation_4","id":16},{"text":"Expression","hash":"_expression_4","id":17},{"text":"Semantics","hash":"_semantics_4","id":18},{"text":"valign","hash":"_valign","id":19},{"text":"Notation","hash":"_notation_5","id":20},{"text":"Expression","hash":"_expression_5","id":21},{"text":"Semantics","hash":"_semantics_5","id":22},{"text":"Examples","hash":"_examples_2","id":23},{"text":"align_top","hash":"_align_top","id":24},{"text":"Notation","hash":"_notation_6","id":25},{"text":"Expression","hash":"_expression_6","id":26},{"text":"Semantics","hash":"_semantics_6","id":27},{"text":"align_middle","hash":"_align_middle","id":28},{"text":"Notation","hash":"_notation_7","id":29},{"text":"Expression","hash":"_expression_7","id":30},{"text":"Semantics","hash":"_semantics_7","id":31},{"text":"align_bottom","hash":"_align_bottom","id":32},{"text":"Notation","hash":"_notation_8","id":33},{"text":"Expression","hash":"_expression_8","id":34},{"text":"Semantics","hash":"_semantics_8","id":35},{"text":"align_left_top","hash":"_align_left_top","id":36},{"text":"Notation","hash":"_notation_9","id":37},{"text":"Expression","hash":"_expression_9","id":38},{"text":"Semantics","hash":"_semantics_9","id":39},{"text":"align_center_top","hash":"_align_center_top","id":40},{"text":"Notation","hash":"_notation_10","id":41},{"text":"Expression","hash":"_expression_10","id":42},{"text":"Semantics","hash":"_semantics_10","id":43},{"text":"align_right_top","hash":"_align_right_top","id":44},{"text":"Notation","hash":"_notation_11","id":45},{"text":"Expression","hash":"_expression_11","id":46},{"text":"Semantics","hash":"_semantics_11","id":47},{"text":"align_left_middle","hash":"_align_left_middle","id":48},{"text":"Notation","hash":"_notation_12","id":49},{"text":"Expression","hash":"_expression_12","id":50},{"text":"Semantics","hash":"_semantics_12","id":51},{"text":"align_center_middle","hash":"_align_center_middle","id":52},{"text":"Notation","hash":"_notation_13","id":53},{"text":"Expression","hash":"_expression_13","id":54},{"text":"Semantics","hash":"_semantics_13","id":55},{"text":"align_right_middle","hash":"_align_right_middle","id":56},{"text":"Notation","hash":"_notation_14","id":57},{"text":"Expression","hash":"_expression_14","id":58},{"text":"Semantics","hash":"_semantics_14","id":59},{"text":"align_left_bottom","hash":"_align_left_bottom","id":60},{"text":"Notation","hash":"_notation_15","id":61},{"text":"Expression","hash":"_expression_15","id":62},{"text":"Semantics","hash":"_semantics_15","id":63},{"text":"align_center_bottom","hash":"_align_center_bottom","id":64},{"text":"Notation","hash":"_notation_16","id":65},{"text":"Expression","hash":"_expression_16","id":66},{"text":"Semantics","hash":"_semantics_16","id":67},{"text":"align_right_bottom","hash":"_align_right_bottom","id":68},{"text":"Notation","hash":"_notation_17","id":69},{"text":"Expression","hash":"_expression_17","id":70},{"text":"Semantics","hash":"_semantics_17","id":71}]},"53":{"id":53,"text":"The Deck is very similar to Layers. Elements are placed in the z-axis. But unlike layers, only the selected element is active (top-most by default). Everything listed in the Layer Semantics, except 2 and 3. Only the active selected element element is drawn. Only the active selected element is given the chance to process UI control. Create a deck composite with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element. Elements e1,...eN are held in a std::array managed by the deck element. deck(e1, e2, e3... eN) deck(item1, item2, item3, item4) If the number of elements is not fixed, you can use an deck_composite (see below). In addition to the semantics of Deck, returns instance of Composite. Create a deck with an indeterminate (dynamic) number of elements. c Instance of type deck_composite The deck_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use deck_composite just as you would a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. deck_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in deck_composite. deck_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Decks","component":"elements","version":"skia_2024","name":"decks","url":"/elements/skia_2024/layout/decks.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Semantics","hash":"_semantics","id":2},{"text":"deck","hash":"_deck","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expression","hash":"_expression","id":5},{"text":"Example","hash":"_example","id":6},{"text":"Requirements","hash":"_requirements","id":7},{"text":"deck_composite","hash":"_deck_composite","id":8},{"text":"Notation","hash":"_notation_2","id":9},{"text":"Expression","hash":"_expression_2","id":10},{"text":"Example","hash":"_example_2","id":11}]},"54":{"id":54,"text":"A floating element allows arbitrary placement of an enclosed element (subject) in the main view. Positions the enclosed element (subject) at specified coordinates, allowing it to float within the layout. left, top, right, bottom float subject Instance of Element floating({left, top, right, bottom}, subject) The element will be placed exactly to the specified position in the main view, constrained to the subject’s natural limits. The floating element does not violate the natural limits of the subject. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Floating","component":"elements","version":"skia_2024","name":"floating","url":"/elements/skia_2024/layout/floating.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"floating","hash":"_floating","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5}]},"55":{"id":55,"text":"The flow element, is a composite that lays out its children much like the way text is laid out: lay out each element from left to right, fitting as much elements as possible following each child’s maximum horizontal limit. Once a row is full, move to the next row and do the same until the end of the row is filled. Repeat the procedure until all the elements are laid out. The height of each row is determined by the maximum vertical limit of all the elements to be laid out in that row. The following graphic depicts a simplified layout scenario for child elements a to r. The child elements arranged in a flow composite are automatically re-flowed when the view size changes. Create a flow_composite with an indeterminate (dynamic) number of elements to have elements laid out using flow. c Instance of type flow_composite The flow_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use flow_composite just as you would a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. flow_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in flow_composite. Once we have a flow_composite, we can place its contents in a flow element. c Instance of flow_composite flow(c) Returns instance of Composite. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Flow","component":"elements","version":"skia_2024","name":"flow","url":"/elements/skia_2024/layout/flow.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"flow_composite","hash":"_flow_composite","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Example","hash":"_example","id":5},{"text":"flow","hash":"_flow","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics","id":9}]},"56":{"id":56,"text":"Grids are similar to tiles. Both tiles and grids allow elements to fluidly adjust depending on available space. Grids lay out its elements using externally supplied normalized fractional coordinates that specify positions of the elements in the allocated space. Grids are best for composing tables. Horizontal Grids are composites that lay out one or more child elements in a row following externally supplied horizontal fractional positions. Horizontal Grids have computed horizontal and vertical sizes following the natural limits of its children. The elements are laid out in a single row, left to right, immediately next to each other with no intervening space. The elements are positioned horizontally using the supplied fractional positions. The fractional positions values range from 0.0 to 1.0, which specify the child element’s horizontal position from left (0.0) to right (1.0). The grid’s minimum vertical limit is computed as the maximum of the children elements' minimum vertical limits. The grid’s maximum vertical limit is computed as the minimum of the children elements' maximum vertical limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The supplied (horizontal) positions and computed (vertical) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Build a horizontal grid with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element (more below) positions External container of fractional positions (more below) The external container, positions, can either be a plain array of type float[N] or std::array. Elements e1,...eN are held in a std::array managed by the horizontal grid element. hgrid(positions, e1,...eN) static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... hgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an hgrid_composite (see below). The number of supplied positions and elements, multiplied by each element’s span, should match, otherwise, undefined behavior. By default elements have a span of 1. See Span Element for more information. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type hgrid_composite The hgrid_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use hgrid_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. hgrid_composite c{positions}; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in hgrid_composite. hgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the left-most position in the row). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] . Elements e1,...eN are held in a std::array managed by the vertical grid element. vgrid(positions, e1,...eN) static float positions[] = {0.25, 0.5, 0.75, 1.0}; //... vgrid(positions, item1, item2, item3, item4) If the number of elements is not fixed, you can use an vgrid_composite (see below). The number of supplied positions and elements, multiplied by each element’s span, should match, otherwise, undefined behavior. By default elements have a span of 1. See Span Element for more information. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] c Instance of type vgrid_composite The vgrid_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use vgrid_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. vgrid_composite c{positions}; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vgrid_composite. vgrid_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. The number of items in the external coordinates vector positions must match with the number of elements at any given time. The positions assume the first element is at x=0 (it is at the top-most position in the column). The fractional position of the second element is at index 0, the third at index 1, and so on. The externally supplied positions should be sorted with increasing values such that positions[n] <= positions[n+1]. The behavior is undefined if this is violated. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Grids","component":"elements","version":"skia_2024","name":"grids","url":"/elements/skia_2024/layout/grids.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Horizontal Grids","hash":"_horizontal_grids","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"hgrid","hash":"_hgrid","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Example","hash":"_example","id":7},{"text":"Requirements","hash":"_requirements","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"hgrid_composite","hash":"_hgrid_composite","id":10},{"text":"Notation","hash":"_notation_2","id":11},{"text":"Expression","hash":"_expression_2","id":12},{"text":"Example","hash":"_example_2","id":13},{"text":"Requirements","hash":"_requirements_2","id":14},{"text":"Vertical Grids","hash":"_vertical_grids","id":15},{"text":"Semantics","hash":"_semantics_3","id":16},{"text":"vgrid","hash":"_vgrid","id":17},{"text":"Notation","hash":"_notation_3","id":18},{"text":"Expression","hash":"_expression_3","id":19},{"text":"Example","hash":"_example_3","id":20},{"text":"Requirements","hash":"_requirements_3","id":21},{"text":"Semantics","hash":"_semantics_4","id":22},{"text":"vgrid_composite","hash":"_vgrid_composite","id":23},{"text":"Notation","hash":"_notation_4","id":24},{"text":"Expression","hash":"_expression_4","id":25},{"text":"Example:","hash":"_example_4","id":26},{"text":"Requirements","hash":"_requirements_4","id":27}]},"57":{"id":57,"text":"The Elements Library is 2D, but the z-axis pertains to top-to-bottom layering. Layers allow groups of elements to be placed in the z-axis where higher-level elements obscure or hide lower-level elements. The elements are laid out in the z-axis, top to bottom. Rendering is done bottom-up; the bottom-most elements are drawn first. UI control (such as mouse clicks) proceeds from top to bottom. Higher-level elements are given control priority. If a higher-level element does not process the event, lower-level elements are given a chance. The layer’s minimum limit is computed as the maximum of the children elements' minimum limits. The layer’s maximum limit is computed as the minimum of the children elements' maximum limits. The final computed minimum limit is clamped to ensure it is not greater than the computed maximum limit. Likewise the computed maximum limit is clamped to ensure it is not less than the computed minimum limit. The computed (vertical) and (horizontal) coordinates may violate the limits of its children elements. If the allocated size of a child element is lower than the element’s minimum limits in either dimension, the element will be cropped. If a child element’s maximum limits in either dimension is exceeded, the element will be aligned to the top-left. Create a layer composite with a fixed number of elements. N The number of items e1,...eN One or more child elements, instances of Element (more below) Elements e1,...eN are held in a std::array managed by the layer element. layer(e1,...eN) layer(item1, item2, item3, item4) If the number of elements is not fixed, you can use an layer_composite (see below). In addition to the semantics of Layers, returns instance of Composite. Create a layer with an indeterminate (dynamic) number of elements: c Instance of type layer_composite The layer_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use layer_composite in the same way as a std::vector, such as using push_back to add a child element. Remember that the items are element_ptr instances. layer_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in layer_composite. layer_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Layout","component":"elements","version":"skia_2024","name":"layers","url":"/elements/skia_2024/layout/layers.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Semantics","hash":"_semantics","id":2},{"text":"layer","hash":"_layer","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"Expression","hash":"_expression","id":5},{"text":"Example","hash":"_example","id":6},{"text":"Semantics","hash":"_semantics_2","id":7},{"text":"layer_composite","hash":"_layer_composite","id":8},{"text":"Notation","hash":"_notation_2","id":9},{"text":"Expression","hash":"_expression_2","id":10},{"text":"Example","hash":"_example_2","id":11}]},"58":{"id":58,"text":"Each element provides information on how it wants to be sized by means of min and max limits: a hint that determine its actual extent and how it will be placed in the view depending on available window space. view_limits is a struct that gives us the min and max information: struct view_limits { point min = {0.0, 0.0}; point max = {full_extent, full_extent}; }; full_extent An implementation-defined huge number that signifies an unbounded extent. point A data structure representing a coordinate in a 2D space used to specify positions or dimensions within the graphical context. By default, an element has full limits, meaning there is no constraints on its size. It is infinitely resizable: constexpr view_limits full_limits = { {0.0, 0.0} , {full_extent, full_extent} }; An element with full_limits can be resized from an empty point (zero x and y size) up to the full extent of the screen, and beyond (if possible). An element has a fixed horizontal size if this expression is true: limits.min.x == limits.max.x. An element has a fixed vertical size if this expression is true: limits.min.y == limits.max.y. {{100, 100}, {100, 100}}; // Fixed size {{100, 100}, {100, full_extent}}; // Fixed width, flexible height {{100, 100}, {100, 200}}; // Fixed width, semi-flexible height (100 to 200) For the purpose of this document, we will use these terms and expressions: limits The limits of an element limits.min The minimum limits of an element limits.min.x The minimum horizontal limit of an element limits.min.y The minimum vertical limit of an element limits.max The maximum limits of an element limits.max.x The maximum horizontal limit of an element limits.max.y The maximum vertical limit of an element horizontal limits (limits.min.x, limits.max.x) vertical limits (limits.min.y, limits.max.y) minimum limits (limits.min.x, limits.min.y) maximum limits (limits.max.x, limits.max.y) minimum horizontal limit limits.min.x maximum horizontal limit limits.max.x minimum vertical limit limits.min.y maximum vertical limit limits.max.y Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Limits","component":"elements","version":"skia_2024","name":"limits","url":"/elements/skia_2024/layout/limits.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"view_limits","hash":"_view_limits","id":2},{"text":"Declaration","hash":"_declaration","id":3},{"text":"Notation","hash":"_notation","id":4},{"text":"full_limits","hash":"_full_limits","id":5},{"text":"Examples","hash":"_examples","id":6},{"text":"Terms and Expressions","hash":"_terms_and_expressions","id":7}]},"59":{"id":59,"text":"Margins add some space around elements. There is a comprehensive list of margin elements in the Elements Library that can be used for various purposes. This section catalogues all the available margin elements. Adds a margin all around an enclosed element (subject). left, top, right, bottom float subject Instance of Element margin({left, top, right, bottom}, subject) Space is added to the left, top, right, and bottom of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin does not violate the natural limits of the subject. margin will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left of an enclosed element (subject). left float subject Instance of Element margin_left(left, subject) Space is added to the left of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_left does not violate the natural limits of the subject. margin_left will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right of an enclosed element (subject). right float subject Instance of Element margin_right(right, subject) Space is added to the right of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_right does not violate the natural limits of the subject. margin_right will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the top of an enclosed element (subject). top float subject Instance of Element margin_top(top, subject) Space is added to the top of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_top does not violate the natural limits of the subject. margin_top will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the bottom of an enclosed element (subject). bottom float subject Instance of Element margin_bottom(bottom, subject) Space is added to the to the bottom of the subject with the given parameter. The element’s limits is overridden to account for the additional space. The margin_bottom does not violate the natural limits of the subject. margin_bottom will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. (same as margin_left_right) Adds a margin to the left and right sides of an enclosed element (subject). left, right float subject Instance of Element // variant 1 hmargin({left, right}, subject) // variant 2 hmargin(left, right, subject) // variant 3 margin_left_right({left, right}, subject) // variant 4 margin_left_right(left, right, subject) Space is added to the to the left and right sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The hmargin (and variants) does not violate the natural limits of the subject. hmargin (and variants) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. (same as margin_top_bottom) Adds a margin to the top and bottom sides of an enclosed element (subject). top, bottom float subject Instance of Element // variant 1 vmargin({top, bottom}, subject) // variant 2 vmargin(top, bottom, subject) // variant 3 margin_top_bottom({top, bottom}, subject) // variant 4 margin_top_bottom(top, bottom, subject) Space is added to the to the top and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The vmargin (and variants) does not violate the natural limits of the subject. vmargin (and variants) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left and top sides of an enclosed element (subject). left, top float subject Instance of Element // variant 1 margin_left_top({left, top}, subject) // variant 2 margin_left_top(left, top, subject) Space is added to the to the left and top sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_left_top (and variant) does not violate the natural limits of the subject. margin_left_top (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the left and bottom sides of an enclosed element (subject). left, bottom float subject Instance of Element // variant 1 margin_left_bottom({left, bottom}, subject) // variant 2 margin_left_bottom(left, bottom, subject) Space is added to the to the left and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_left_bottom (and variant) does not violate the natural limits of the subject. margin_left_bottom (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right and top sides of an enclosed element (subject). right, top float subject Instance of Element // variant 1 margin_right_top({right, top}, subject) // variant 2 margin_right_top(right, top, subject) Space is added to the to the right and top sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_right_top (and variant) does not violate the natural limits of the subject. margin_right_top (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Adds a margin to the right and bottom sides of an enclosed element (subject). right, bottom float subject Instance of Element // variant 1 margin_right_bottom({right, bottom}, subject) // variant 2 margin_right_bottom(right, bottom, subject) Space is added to the to the right and bottom sides of the subject with the given parameters. The element’s limits is overridden to account for the additional space. The margin_right_bottom (and variant) does not violate the natural limits of the subject. margin_right_bottom (and variant) will respect the subject’s min-max constraints and resizability. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Margins","component":"elements","version":"skia_2024","name":"margins","url":"/elements/skia_2024/layout/margins.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"margin","hash":"_margin","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"margin_left","hash":"_margin_left","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"margin_right","hash":"_margin_right","id":10},{"text":"Notation","hash":"_notation_3","id":11},{"text":"Expression","hash":"_expression_3","id":12},{"text":"Semantics","hash":"_semantics_3","id":13},{"text":"margin_top","hash":"_margin_top","id":14},{"text":"Notation","hash":"_notation_4","id":15},{"text":"Expression","hash":"_expression_4","id":16},{"text":"Semantics","hash":"_semantics_4","id":17},{"text":"margin_bottom","hash":"_margin_bottom","id":18},{"text":"Notation","hash":"_notation_5","id":19},{"text":"Expression","hash":"_expression_5","id":20},{"text":"Semantics","hash":"_semantics_5","id":21},{"text":"hmargin","hash":"_hmargin","id":22},{"text":"Expressions","hash":"_expressions","id":23},{"text":"Semantics","hash":"_semantics_6","id":24},{"text":"vmargin","hash":"_vmargin","id":25},{"text":"Notation","hash":"_notation_6","id":26},{"text":"Expressions","hash":"_expressions_2","id":27},{"text":"Semantics","hash":"_semantics_7","id":28},{"text":"margin_left_top","hash":"_margin_left_top","id":29},{"text":"Notation","hash":"_notation_7","id":30},{"text":"Expressions","hash":"_expressions_3","id":31},{"text":"Semantics","hash":"_semantics_8","id":32},{"text":"margin_left_bottom","hash":"_margin_left_bottom","id":33},{"text":"Notation","hash":"_notation_8","id":34},{"text":"Expressions","hash":"_expressions_4","id":35},{"text":"Semantics","hash":"_semantics_9","id":36},{"text":"margin_right_top","hash":"_margin_right_top","id":37},{"text":"Notation","hash":"_notation_9","id":38},{"text":"Expressions","hash":"_expressions_5","id":39},{"text":"Semantics","hash":"_semantics_10","id":40},{"text":"margin_right_bottom","hash":"_margin_right_bottom","id":41},{"text":"Notation","hash":"_notation_10","id":42},{"text":"Expressions","hash":"_expressions_6","id":43},{"text":"Semantics","hash":"_semantics_11","id":44}]},"60":{"id":60,"text":"The Elements Library is resolution independent and elements can be scaled up or down to suit. The default scale is 1.0 (no scale). The scale element changes the scale of its enclosed element (subject). scale_ float subject Instance of Element scale(scale_, subject) The subject will scaled given the scale_ value. A value > 1.0 scales the element up (zoom in), while a value < 1.0 scales down (zoom out). Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Scale","component":"elements","version":"skia_2024","name":"scale","url":"/elements/skia_2024/layout/scale.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"scale","hash":"_scale","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5}]},"61":{"id":61,"text":"Size elements override the limits of an enclosed element. There is a comprehensive list of size related elements in the Elements Library that can be used for various purposes. This section catalogues all the available size elements. Overrides the limits of an element. limits Instance of view_limits subject Instance of Element limit(limits, subject) The limits of subject will be set to the specified limits constrained by The natural limits of the subject. The natural limits of the element will not be violated. Returns instance of Proxy. Fixes the size of an enclosed element (subject). width, height float subject Instance of Element fixed_size({width, height}, subject) subject will be laid out with a fixed width and height, constrained by The natural limits of the subject. The natural limits of the element will not be violated. Returns instance of Proxy. Fixes the horizontal size of an enclosed element (subject). width float subject Instance of Element hsize(width, subject) subject will be laid out with a fixed width, constrained by the natural horizontal limits of the subject. The natural horizontal limits of the element will not be violated. The natural vertical limits of subject will not be affected. Returns instance of Proxy. Fixes the vertical limits of an enclosed element (subject). height float subject Instance of Element vsize(height, subject) subject will be laid out with a fixed height, constrained by the natural vertical limits of the subject. The natural vertical limits of the element will not be violated. The natural horizontal limits of subject will not be affected. Returns instance of Proxy. Overrides the minimum limits of an enclosed element (subject). width, height float subject Instance of Element min_size({width, height}, subject) The minimum limits of subject will be set to the specified width and height, constrained by the natural minimum limits of the subject. the natural minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum horizontal limit of an enclosed element (subject). width float subject Instance of Element hmin_size(width, subject) The minimum horizontal limit of subject will be set to the specified width constrained by the natural horizontal minimum limits of the subject. The natural horizontal minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the minimum vertical limit of an enclosed element (subject). height float subject Instance of Element vmin_size(height, subject) The minimum vertical limit of subject will be set to the specified height constrained by the natural vertical minimum limits of the subject. The natural vertical minimum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum limits of an enclosed element (subject). width, height float subject Instance of Element max_size({width, height}, subject) The maximum limits of subject will be set to the specified width and height, constrained by the natural maximum limits of the subject. The natural maximum limits of the element will not be violated. Returns instance of Proxy. Overrides the maximum horizontal limit of an enclosed element (subject). width float subject Instance of Element hmax_size(width, subject) The maximum horizontal limit of subject will be set to the specified width constrained by the natural maximum horizontal limit of the subject. The natural maximum horizontal limit of the element will not be violated. Returns instance of Proxy. Overrides the maximum vertical limit of an enclosed element (subject). height float subject Instance of Element vmax_size(height, subject) The maximum vertical limit of subject will be set to the specified height constrained by the natural maximum vertical limit of the subject The natural maximum vertical limit of the element will not be violated. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Sizing","component":"elements","version":"skia_2024","name":"sizing","url":"/elements/skia_2024/layout/sizing.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"limit","hash":"_limit","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"fixed_size","hash":"_fixed_size","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics_2","id":9},{"text":"hsize","hash":"_hsize","id":10},{"text":"Notation","hash":"_notation_3","id":11},{"text":"Expression","hash":"_expression_3","id":12},{"text":"Semantics","hash":"_semantics_3","id":13},{"text":"vsize","hash":"_vsize","id":14},{"text":"Notation","hash":"_notation_4","id":15},{"text":"Expression","hash":"_expression_4","id":16},{"text":"Semantics","hash":"_semantics_4","id":17},{"text":"min_size","hash":"_min_size","id":18},{"text":"Notation","hash":"_notation_5","id":19},{"text":"Expression","hash":"_expression_5","id":20},{"text":"Semantics","hash":"_semantics_5","id":21},{"text":"hmin_size","hash":"_hmin_size","id":22},{"text":"Notation","hash":"_notation_6","id":23},{"text":"Expression","hash":"_expression_6","id":24},{"text":"Semantics","hash":"_semantics_6","id":25},{"text":"vmin_size","hash":"_vmin_size","id":26},{"text":"Notation","hash":"_notation_7","id":27},{"text":"Expression","hash":"_expression_7","id":28},{"text":"Semantics","hash":"_semantics_7","id":29},{"text":"max_size","hash":"_max_size","id":30},{"text":"Notation","hash":"_notation_8","id":31},{"text":"Expression","hash":"_expression_8","id":32},{"text":"Semantics","hash":"_semantics_8","id":33},{"text":"hmax_size","hash":"_hmax_size","id":34},{"text":"Notation","hash":"_notation_9","id":35},{"text":"Expression","hash":"_expression_9","id":36},{"text":"Semantics","hash":"_semantics_9","id":37},{"text":"vmax_size","hash":"_vmax_size","id":38},{"text":"Notation","hash":"_notation_10","id":39},{"text":"Expression","hash":"_expression_10","id":40},{"text":"Semantics","hash":"_semantics_10","id":41}]},"62":{"id":62,"text":"The span of an element is the number of columns or rows it occupies in a grid (see Horizontal Grids and Vertical Grids). The span of an element is determined by the element’s span member function: virtual unsigned span() const; By default, an element spans one column or one row. The span can be set to any positive integer value using the span function. Overrides the span of an an enclosed element (subject). nspans An unsigned integer subject Instance of Element span(nspans, subject) The subject will assume a span with the given nspans value. Returns instance of Proxy. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Span","component":"elements","version":"skia_2024","name":"span","url":"/elements/skia_2024/layout/span.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"span","hash":"_span","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5}]},"63":{"id":63,"text":"Resizable elements are elements with minimum limits that are less than the maximum limits in either x or y dimensions or both. Resizable elements can therefore stretch if there is extra available space allocated to it beyond its minimum limit. When two or more resizable elements are placed side by side in an htile or vtile, the element’s \"stretchiness\" determines how much extra space is given to it. The element’s \"stretchiness\" is determined by the element’s stretch member function: virtual view_stretch stretch() const; where view_stretch is a struct declared as: struct view_stretch { float x = 1.0; float y = 1.0; }; The view_stretch x and y members determine how much an element can stretch in the x or y dimensions. The default is 1.0. A stretchiness value of 2.0 means that the element is able to stretch twice as much compared to its siblings in an htile or vtile, assuming they have the default 1.0 stretchiness. Overrides the horizontal stretchiness of an an enclosed element (subject). stretch A scalar value subject Instance of Element hstretch(stretch, subject) The subject will assume the given stretch value. The stretch value has no effect to elements with fixed horizontal size. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 1.0, 1.0 and 2.0, respectively: The element with the 2.0 stretch value stretches twice as much compared to its siblings. Overrides the vertical stretchiness of an an enclosed element (subject). stretch A scalar value subject Instance of Element vstretch(stretch, subject) The subject will assume the given stretch value. The stretch value has no effect to elements with fixed vertical limits. Returns instance of Proxy. For example, the image below shows how three elements are laid out in an htile, with stretch values of 0.5, 1.0 and 1.5, respectively: The element with the 0.5 stretch value stretches half less, while the element with the 1.5 stretches half more than the default. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Stretch","component":"elements","version":"skia_2024","name":"stretch","url":"/elements/skia_2024/layout/stretch.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"hstretch","hash":"_hstretch","id":2},{"text":"Notation","hash":"_notation","id":3},{"text":"Expression","hash":"_expression","id":4},{"text":"Semantics","hash":"_semantics","id":5},{"text":"vstretch","hash":"_vstretch","id":6},{"text":"Notation","hash":"_notation_2","id":7},{"text":"Expression","hash":"_expression_2","id":8},{"text":"Semantics","hash":"_semantics_2","id":9}]},"64":{"id":64,"text":"Tiles are the most useful layout elements. Tiles are used everywhere for composing hierarchical elements in rows and columns, typical to all GUIs. Tiles allow elements to fluidly adjust depending on available space. Tiles compute the layout of its elements using the children elements' size limits. Horizontal Tiles allow elements to fluidly adjust horizontally depending on available space. The elements are laid out in a single row, left to right, immediately next to each other with no intervening space. The elements are positioned horizontally using the children’s natural limits. Horizontal space is allocated using this algorithm: Space is allocated for each child element following the child’s natural minimum horizontal limit. If the allocated space exceeds the sum of all children elements' minimum horizontal limits, the extra space is given to each horizontally resizable element (limits.min.x managed by the horizontal tile element. htile(e1,...eN) htile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an htile_composite (see below). In addition to the semantics of Horizontal Tiles, returns instance of Composite. Create a horizontal tile with an indeterminate (dynamic) number of elements. c Instance of type htile_composite The htile_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You use htile_composite just as you would a std::vector, such as using push_back to add a child element. Just remember that the items are element_ptr instances. htile_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in htile_composite. htile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Vertical Tiles allow elements to fluidly adjust vertically depending on available space. The elements are laid out in a single column, top to bottom, immediately next to each other with no intervening space. The elements are positioned vertically using the children’s natural limits. Vertical space is allocated using this algorithm: Space is allocated for each child element following the child’s natural minimum vertical limit. If the allocated space exceeds the sum of all children elements' minimum vertical limits, the extra space is given to each vertically resizable element (limits.min.y managed by the vertical tile element. vtile(e1,...eN) vtile(item1, item2, item3, item4) If the number of elements is not fixed, you can use an vtile_composite (see below). In addition to the semantics of Vertical Tiles, returns instance of Composite. Create a vertical tile with an indeterminate (dynamic) number of elements. c Instance of type vtile_composite The vtile_composite is essentially a std::vector that the client uses to manage the composite’s elements. The client is responsible for the lifetime of the container, c. You can use vtile_composite in the same way as a std::vector, such as using push_back to add a child element. Just remember that the items are element_ptr instances. vtile_composite c; c.push_back(share(child)); share turns an element object into an element_ptr held by the std::vector in vtile_composite. vtile_composite is itself also an element and while it has std::vector's interface, it can also be shared like any element, which allows you to build complex hierarchical structures. Copyright (c) 2014-2024 Joel de Guzman. All rights reserved. Distributed under the MIT License","title":"Tiles","component":"elements","version":"skia_2024","name":"tiles","url":"/elements/skia_2024/layout/tiles.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Horizontal Tiles","hash":"_horizontal_tiles","id":2},{"text":"Semantics","hash":"_semantics","id":3},{"text":"htile","hash":"_htile","id":4},{"text":"Notation","hash":"_notation","id":5},{"text":"Expression","hash":"_expression","id":6},{"text":"Example:","hash":"_example","id":7},{"text":"Semantics","hash":"_semantics_2","id":8},{"text":"htile_composite","hash":"_htile_composite","id":9},{"text":"Notation","hash":"_notation_2","id":10},{"text":"Expression","hash":"_expression_2","id":11},{"text":"Example","hash":"_example_2","id":12},{"text":"Vertical Tiles","hash":"_vertical_tiles","id":13},{"text":"Semantics","hash":"_semantics_3","id":14},{"text":"vtile","hash":"_vtile","id":15},{"text":"Notation","hash":"_notation_3","id":16},{"text":"Expression","hash":"_expression_3","id":17},{"text":"Example","hash":"_example_3","id":18},{"text":"Semantics","hash":"_semantics_4","id":19},{"text":"vtile_composite","hash":"_vtile_composite","id":20},{"text":"Notation","hash":"_notation_4","id":21},{"text":"Expression","hash":"_expression_4","id":22},{"text":"Example","hash":"_example_4","id":23}]}},"components":{},"componentVersions":{"elements/skia_2024":{"displayVersion":"skia_2024","title":"Elements Library","version":"skia_2024","name":"elements","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Elements Docs","site-url":"https://www.cycfi.com/","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/elements/skia_2024/index.html","navigation":[{"items":[{"content":"Gallery","url":"/elements/skia_2024/gallery.html","urlType":"internal"},{"content":"Setup and Installation","url":"/elements/skia_2024/setup.html","urlType":"internal"},{"content":"Design Aspects","url":"/elements/skia_2024/aspects.html","urlType":"internal"},{"content":"Elements","url":"/elements/skia_2024/elements.html","urlType":"internal","items":[{"content":"Buttons","url":"/elements/skia_2024/elements/buttons.html","urlType":"internal"},{"content":"Button Stylers","url":"/elements/skia_2024/elements/button_stylers.html","urlType":"internal"}]},{"content":"Layout","url":"/elements/skia_2024/layout.html","urlType":"internal","items":[{"content":"Limits","url":"/elements/skia_2024/layout/limits.html","urlType":"internal"},{"content":"Sizing","url":"/elements/skia_2024/layout/sizing.html","urlType":"internal"},{"content":"Stretch","url":"/elements/skia_2024/layout/stretch.html","urlType":"internal"},{"content":"Span","url":"/elements/skia_2024/layout/span.html","urlType":"internal"},{"content":"Scale","url":"/elements/skia_2024/layout/scale.html","urlType":"internal"},{"content":"Alignment","url":"/elements/skia_2024/layout/alignment.html","urlType":"internal"},{"content":"Margins","url":"/elements/skia_2024/layout/margins.html","urlType":"internal"},{"content":"Floating","url":"/elements/skia_2024/layout/floating.html","urlType":"internal"},{"content":"Tiles","url":"/elements/skia_2024/layout/tiles.html","urlType":"internal"},{"content":"Grids","url":"/elements/skia_2024/layout/grids.html","urlType":"internal"},{"content":"Layers","url":"/elements/skia_2024/layout/layers.html","urlType":"internal"},{"content":"Decks","url":"/elements/skia_2024/layout/decks.html","urlType":"internal"},{"content":"Flow","url":"/elements/skia_2024/layout/flow.html","urlType":"internal"}]}],"root":true,"order":0}]},"elements/master":{"displayVersion":"master","title":"Elements Library","version":"master","name":"elements","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Elements Docs","site-url":"https://www.cycfi.com/","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/elements/index.html","navigation":[{"items":[{"content":"Gallery","url":"/elements/gallery.html","urlType":"internal"},{"content":"Setup and Installation","url":"/elements/setup.html","urlType":"internal"},{"content":"Design Aspects","url":"/elements/aspects.html","urlType":"internal"},{"content":"Layout","url":"/elements/layout.html","urlType":"internal","items":[{"content":"Limits","url":"/elements/layout/limits.html","urlType":"internal"},{"content":"Size Elements","url":"/elements/layout/size_elements.html","urlType":"internal"},{"content":"Stretch Elements","url":"/elements/layout/stretch_elements.html","urlType":"internal"},{"content":"Span","url":"/elements/layout/span.html","urlType":"internal"},{"content":"Scale","url":"/elements/layout/scale.html","urlType":"internal"},{"content":"Align Elements","url":"/elements/layout/align_elements.html","urlType":"internal"},{"content":"Margin Elements","url":"/elements/layout/margin_elements.html","urlType":"internal"},{"content":"Floating","url":"/elements/layout/floating.html","urlType":"internal"},{"content":"Tiles","url":"/elements/layout/tiles.html","urlType":"internal"},{"content":"Grids","url":"/elements/layout/grids.html","urlType":"internal"},{"content":"Layers","url":"/elements/layout/layers.html","urlType":"internal"},{"content":"Decks","url":"/elements/layout/decks.html","urlType":"internal"},{"content":"Flow","url":"/elements/layout/flow.html","urlType":"internal"}]}],"root":true,"order":0}]},"elements/docs_2024":{"displayVersion":"docs_2024","title":"Elements Library","version":"docs_2024","name":"elements","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Elements Docs","site-url":"https://www.cycfi.com/","source-language":"asciidoc@","table-caption":false},"sourcemap":false},"url":"/elements/docs_2024/index.html","navigation":[{"items":[{"content":"Gallery","url":"/elements/docs_2024/gallery.html","urlType":"internal"},{"content":"Setup and Installation","url":"/elements/docs_2024/setup.html","urlType":"internal"},{"content":"Design Aspects","url":"/elements/docs_2024/aspects.html","urlType":"internal"},{"content":"Elements","url":"/elements/docs_2024/elements.html","urlType":"internal","items":[{"content":"Buttons","url":"/elements/docs_2024/elements/buttons.html","urlType":"internal"},{"content":"Button Stylers","url":"/elements/docs_2024/elements/button_stylers.html","urlType":"internal"},{"content":"Labels","url":"/elements/docs_2024/elements/labels.html","urlType":"internal"}]},{"content":"Layout","url":"/elements/docs_2024/layout.html","urlType":"internal","items":[{"content":"Limits","url":"/elements/docs_2024/layout/limits.html","urlType":"internal"},{"content":"Sizing","url":"/elements/docs_2024/layout/sizing.html","urlType":"internal"},{"content":"Stretch","url":"/elements/docs_2024/layout/stretch.html","urlType":"internal"},{"content":"Span","url":"/elements/docs_2024/layout/span.html","urlType":"internal"},{"content":"Scale","url":"/elements/docs_2024/layout/scale.html","urlType":"internal"},{"content":"Alignment","url":"/elements/docs_2024/layout/alignment.html","urlType":"internal"},{"content":"Margins","url":"/elements/docs_2024/layout/margins.html","urlType":"internal"},{"content":"Floating","url":"/elements/docs_2024/layout/floating.html","urlType":"internal"},{"content":"Tiles","url":"/elements/docs_2024/layout/tiles.html","urlType":"internal"},{"content":"Grids","url":"/elements/docs_2024/layout/grids.html","urlType":"internal"},{"content":"Layers","url":"/elements/docs_2024/layout/layers.html","urlType":"internal"},{"content":"Decks","url":"/elements/docs_2024/layout/decks.html","urlType":"internal"},{"content":"Flow","url":"/elements/docs_2024/layout/flow.html","urlType":"internal"}]}],"root":true,"order":0}]}}}})